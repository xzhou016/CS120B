
xzhou016_FinalProject.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000005e  00800100  00001458  000014ec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001458  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000065  0080015e  0080015e  0000154a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000154a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000157c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000120  00000000  00000000  000015bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b53  00000000  00000000  000016dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000001ca  00000000  00000000  0000222f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000f6e  00000000  00000000  000023f9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000484  00000000  00000000  00003368  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000068d  00000000  00000000  000037ec  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000009bb  00000000  00000000  00003e79  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000110  00000000  00000000  00004834  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
       2:	00 00       	nop
       4:	61 c0       	rjmp	.+194    	; 0xc8 <__bad_interrupt>
       6:	00 00       	nop
       8:	5f c0       	rjmp	.+190    	; 0xc8 <__bad_interrupt>
       a:	00 00       	nop
       c:	5d c0       	rjmp	.+186    	; 0xc8 <__bad_interrupt>
       e:	00 00       	nop
      10:	5b c0       	rjmp	.+182    	; 0xc8 <__bad_interrupt>
      12:	00 00       	nop
      14:	59 c0       	rjmp	.+178    	; 0xc8 <__bad_interrupt>
      16:	00 00       	nop
      18:	57 c0       	rjmp	.+174    	; 0xc8 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	55 c0       	rjmp	.+170    	; 0xc8 <__bad_interrupt>
      1e:	00 00       	nop
      20:	53 c0       	rjmp	.+166    	; 0xc8 <__bad_interrupt>
      22:	00 00       	nop
      24:	51 c0       	rjmp	.+162    	; 0xc8 <__bad_interrupt>
      26:	00 00       	nop
      28:	4f c0       	rjmp	.+158    	; 0xc8 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	4d c0       	rjmp	.+154    	; 0xc8 <__bad_interrupt>
      2e:	00 00       	nop
      30:	4b c0       	rjmp	.+150    	; 0xc8 <__bad_interrupt>
      32:	00 00       	nop
      34:	b5 c1       	rjmp	.+874    	; 0x3a0 <__vector_13>
      36:	00 00       	nop
      38:	47 c0       	rjmp	.+142    	; 0xc8 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	45 c0       	rjmp	.+138    	; 0xc8 <__bad_interrupt>
      3e:	00 00       	nop
      40:	43 c0       	rjmp	.+134    	; 0xc8 <__bad_interrupt>
      42:	00 00       	nop
      44:	41 c0       	rjmp	.+130    	; 0xc8 <__bad_interrupt>
      46:	00 00       	nop
      48:	3f c0       	rjmp	.+126    	; 0xc8 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	3d c0       	rjmp	.+122    	; 0xc8 <__bad_interrupt>
      4e:	00 00       	nop
      50:	3b c0       	rjmp	.+118    	; 0xc8 <__bad_interrupt>
      52:	00 00       	nop
      54:	39 c0       	rjmp	.+114    	; 0xc8 <__bad_interrupt>
      56:	00 00       	nop
      58:	37 c0       	rjmp	.+110    	; 0xc8 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	35 c0       	rjmp	.+106    	; 0xc8 <__bad_interrupt>
      5e:	00 00       	nop
      60:	33 c0       	rjmp	.+102    	; 0xc8 <__bad_interrupt>
      62:	00 00       	nop
      64:	31 c0       	rjmp	.+98     	; 0xc8 <__bad_interrupt>
      66:	00 00       	nop
      68:	2f c0       	rjmp	.+94     	; 0xc8 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	2d c0       	rjmp	.+90     	; 0xc8 <__bad_interrupt>
      6e:	00 00       	nop
      70:	2b c0       	rjmp	.+86     	; 0xc8 <__bad_interrupt>
      72:	00 00       	nop
      74:	29 c0       	rjmp	.+82     	; 0xc8 <__bad_interrupt>
      76:	00 00       	nop
      78:	27 c0       	rjmp	.+78     	; 0xc8 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	25 c0       	rjmp	.+74     	; 0xc8 <__bad_interrupt>
      7e:	00 00       	nop
      80:	23 c0       	rjmp	.+70     	; 0xc8 <__bad_interrupt>
      82:	00 00       	nop
      84:	21 c0       	rjmp	.+66     	; 0xc8 <__bad_interrupt>
      86:	00 00       	nop
      88:	1f c0       	rjmp	.+62     	; 0xc8 <__bad_interrupt>
	...

0000008c <__ctors_end>:
      8c:	11 24       	eor	r1, r1
      8e:	1f be       	out	0x3f, r1	; 63
      90:	cf ef       	ldi	r28, 0xFF	; 255
      92:	d0 e4       	ldi	r29, 0x40	; 64
      94:	de bf       	out	0x3e, r29	; 62
      96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
      98:	11 e0       	ldi	r17, 0x01	; 1
      9a:	a0 e0       	ldi	r26, 0x00	; 0
      9c:	b1 e0       	ldi	r27, 0x01	; 1
      9e:	e8 e5       	ldi	r30, 0x58	; 88
      a0:	f4 e1       	ldi	r31, 0x14	; 20
      a2:	00 e0       	ldi	r16, 0x00	; 0
      a4:	0b bf       	out	0x3b, r16	; 59
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
      a8:	07 90       	elpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	ae 35       	cpi	r26, 0x5E	; 94
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
      b2:	21 e0       	ldi	r18, 0x01	; 1
      b4:	ae e5       	ldi	r26, 0x5E	; 94
      b6:	b1 e0       	ldi	r27, 0x01	; 1
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	a3 3c       	cpi	r26, 0xC3	; 195
      be:	b2 07       	cpc	r27, r18
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	78 d6       	rcall	.+3312   	; 0xdb4 <main>
      c4:	0c 94 2a 0a 	jmp	0x1454	; 0x1454 <_exit>

000000c8 <__bad_interrupt>:
      c8:	9b cf       	rjmp	.-202    	; 0x0 <__vectors>

000000ca <LCD_ClearScreen>:
	for (unsigned char i = 0 ; i < shift; i++)
	{
		bulletRow[i] = bulletRow[i + 1];
	}
	bulletRow[16] = 0;
}
      ca:	cf 93       	push	r28
      cc:	df 93       	push	r29
      ce:	cd b7       	in	r28, 0x3d	; 61
      d0:	de b7       	in	r29, 0x3e	; 62
      d2:	81 e0       	ldi	r24, 0x01	; 1
      d4:	18 d0       	rcall	.+48     	; 0x106 <LCD_WriteCommand>
      d6:	df 91       	pop	r29
      d8:	cf 91       	pop	r28
      da:	08 95       	ret

000000dc <LCD_init>:
      dc:	cf 93       	push	r28
      de:	df 93       	push	r29
      e0:	cd b7       	in	r28, 0x3d	; 61
      e2:	de b7       	in	r29, 0x3e	; 62
      e4:	84 e6       	ldi	r24, 0x64	; 100
      e6:	90 e0       	ldi	r25, 0x00	; 0
      e8:	a6 d0       	rcall	.+332    	; 0x236 <delay_ms>
      ea:	88 e3       	ldi	r24, 0x38	; 56
      ec:	0c d0       	rcall	.+24     	; 0x106 <LCD_WriteCommand>
      ee:	86 e0       	ldi	r24, 0x06	; 6
      f0:	0a d0       	rcall	.+20     	; 0x106 <LCD_WriteCommand>
      f2:	8f e0       	ldi	r24, 0x0F	; 15
      f4:	08 d0       	rcall	.+16     	; 0x106 <LCD_WriteCommand>
      f6:	81 e0       	ldi	r24, 0x01	; 1
      f8:	06 d0       	rcall	.+12     	; 0x106 <LCD_WriteCommand>
      fa:	8a e0       	ldi	r24, 0x0A	; 10
      fc:	90 e0       	ldi	r25, 0x00	; 0
      fe:	9b d0       	rcall	.+310    	; 0x236 <delay_ms>
     100:	df 91       	pop	r29
     102:	cf 91       	pop	r28
     104:	08 95       	ret

00000106 <LCD_WriteCommand>:
     106:	cf 93       	push	r28
     108:	df 93       	push	r29
     10a:	1f 92       	push	r1
     10c:	cd b7       	in	r28, 0x3d	; 61
     10e:	de b7       	in	r29, 0x3e	; 62
     110:	89 83       	std	Y+1, r24	; 0x01
     112:	8b e2       	ldi	r24, 0x2B	; 43
     114:	90 e0       	ldi	r25, 0x00	; 0
     116:	2b e2       	ldi	r18, 0x2B	; 43
     118:	30 e0       	ldi	r19, 0x00	; 0
     11a:	f9 01       	movw	r30, r18
     11c:	20 81       	ld	r18, Z
     11e:	2f 7b       	andi	r18, 0xBF	; 191
     120:	fc 01       	movw	r30, r24
     122:	20 83       	st	Z, r18
     124:	85 e2       	ldi	r24, 0x25	; 37
     126:	90 e0       	ldi	r25, 0x00	; 0
     128:	29 81       	ldd	r18, Y+1	; 0x01
     12a:	fc 01       	movw	r30, r24
     12c:	20 83       	st	Z, r18
     12e:	8b e2       	ldi	r24, 0x2B	; 43
     130:	90 e0       	ldi	r25, 0x00	; 0
     132:	2b e2       	ldi	r18, 0x2B	; 43
     134:	30 e0       	ldi	r19, 0x00	; 0
     136:	f9 01       	movw	r30, r18
     138:	20 81       	ld	r18, Z
     13a:	20 68       	ori	r18, 0x80	; 128
     13c:	fc 01       	movw	r30, r24
     13e:	20 83       	st	Z, r18
     140:	00 00       	nop
     142:	8b e2       	ldi	r24, 0x2B	; 43
     144:	90 e0       	ldi	r25, 0x00	; 0
     146:	2b e2       	ldi	r18, 0x2B	; 43
     148:	30 e0       	ldi	r19, 0x00	; 0
     14a:	f9 01       	movw	r30, r18
     14c:	20 81       	ld	r18, Z
     14e:	2f 77       	andi	r18, 0x7F	; 127
     150:	fc 01       	movw	r30, r24
     152:	20 83       	st	Z, r18
     154:	82 e0       	ldi	r24, 0x02	; 2
     156:	90 e0       	ldi	r25, 0x00	; 0
     158:	6e d0       	rcall	.+220    	; 0x236 <delay_ms>
     15a:	0f 90       	pop	r0
     15c:	df 91       	pop	r29
     15e:	cf 91       	pop	r28
     160:	08 95       	ret

00000162 <LCD_WriteData>:
     162:	cf 93       	push	r28
     164:	df 93       	push	r29
     166:	1f 92       	push	r1
     168:	cd b7       	in	r28, 0x3d	; 61
     16a:	de b7       	in	r29, 0x3e	; 62
     16c:	89 83       	std	Y+1, r24	; 0x01
     16e:	8b e2       	ldi	r24, 0x2B	; 43
     170:	90 e0       	ldi	r25, 0x00	; 0
     172:	2b e2       	ldi	r18, 0x2B	; 43
     174:	30 e0       	ldi	r19, 0x00	; 0
     176:	f9 01       	movw	r30, r18
     178:	20 81       	ld	r18, Z
     17a:	20 64       	ori	r18, 0x40	; 64
     17c:	fc 01       	movw	r30, r24
     17e:	20 83       	st	Z, r18
     180:	85 e2       	ldi	r24, 0x25	; 37
     182:	90 e0       	ldi	r25, 0x00	; 0
     184:	29 81       	ldd	r18, Y+1	; 0x01
     186:	fc 01       	movw	r30, r24
     188:	20 83       	st	Z, r18
     18a:	8b e2       	ldi	r24, 0x2B	; 43
     18c:	90 e0       	ldi	r25, 0x00	; 0
     18e:	2b e2       	ldi	r18, 0x2B	; 43
     190:	30 e0       	ldi	r19, 0x00	; 0
     192:	f9 01       	movw	r30, r18
     194:	20 81       	ld	r18, Z
     196:	20 68       	ori	r18, 0x80	; 128
     198:	fc 01       	movw	r30, r24
     19a:	20 83       	st	Z, r18
     19c:	00 00       	nop
     19e:	8b e2       	ldi	r24, 0x2B	; 43
     1a0:	90 e0       	ldi	r25, 0x00	; 0
     1a2:	2b e2       	ldi	r18, 0x2B	; 43
     1a4:	30 e0       	ldi	r19, 0x00	; 0
     1a6:	f9 01       	movw	r30, r18
     1a8:	20 81       	ld	r18, Z
     1aa:	2f 77       	andi	r18, 0x7F	; 127
     1ac:	fc 01       	movw	r30, r24
     1ae:	20 83       	st	Z, r18
     1b0:	81 e0       	ldi	r24, 0x01	; 1
     1b2:	90 e0       	ldi	r25, 0x00	; 0
     1b4:	40 d0       	rcall	.+128    	; 0x236 <delay_ms>
     1b6:	0f 90       	pop	r0
     1b8:	df 91       	pop	r29
     1ba:	cf 91       	pop	r28
     1bc:	08 95       	ret

000001be <LCD_DisplayString>:
     1be:	cf 93       	push	r28
     1c0:	df 93       	push	r29
     1c2:	00 d0       	rcall	.+0      	; 0x1c4 <LCD_DisplayString+0x6>
     1c4:	00 d0       	rcall	.+0      	; 0x1c6 <LCD_DisplayString+0x8>
     1c6:	cd b7       	in	r28, 0x3d	; 61
     1c8:	de b7       	in	r29, 0x3e	; 62
     1ca:	8a 83       	std	Y+2, r24	; 0x02
     1cc:	7c 83       	std	Y+4, r23	; 0x04
     1ce:	6b 83       	std	Y+3, r22	; 0x03
     1d0:	8a 81       	ldd	r24, Y+2	; 0x02
     1d2:	89 83       	std	Y+1, r24	; 0x01
     1d4:	0f c0       	rjmp	.+30     	; 0x1f4 <LCD_DisplayString+0x36>
     1d6:	89 81       	ldd	r24, Y+1	; 0x01
     1d8:	91 e0       	ldi	r25, 0x01	; 1
     1da:	98 0f       	add	r25, r24
     1dc:	99 83       	std	Y+1, r25	; 0x01
     1de:	17 d0       	rcall	.+46     	; 0x20e <LCD_Cursor>
     1e0:	8b 81       	ldd	r24, Y+3	; 0x03
     1e2:	9c 81       	ldd	r25, Y+4	; 0x04
     1e4:	9c 01       	movw	r18, r24
     1e6:	2f 5f       	subi	r18, 0xFF	; 255
     1e8:	3f 4f       	sbci	r19, 0xFF	; 255
     1ea:	3c 83       	std	Y+4, r19	; 0x04
     1ec:	2b 83       	std	Y+3, r18	; 0x03
     1ee:	fc 01       	movw	r30, r24
     1f0:	80 81       	ld	r24, Z
     1f2:	b7 df       	rcall	.-146    	; 0x162 <LCD_WriteData>
     1f4:	8b 81       	ldd	r24, Y+3	; 0x03
     1f6:	9c 81       	ldd	r25, Y+4	; 0x04
     1f8:	fc 01       	movw	r30, r24
     1fa:	80 81       	ld	r24, Z
     1fc:	88 23       	and	r24, r24
     1fe:	59 f7       	brne	.-42     	; 0x1d6 <LCD_DisplayString+0x18>
     200:	0f 90       	pop	r0
     202:	0f 90       	pop	r0
     204:	0f 90       	pop	r0
     206:	0f 90       	pop	r0
     208:	df 91       	pop	r29
     20a:	cf 91       	pop	r28
     20c:	08 95       	ret

0000020e <LCD_Cursor>:
     20e:	cf 93       	push	r28
     210:	df 93       	push	r29
     212:	1f 92       	push	r1
     214:	cd b7       	in	r28, 0x3d	; 61
     216:	de b7       	in	r29, 0x3e	; 62
     218:	89 83       	std	Y+1, r24	; 0x01
     21a:	89 81       	ldd	r24, Y+1	; 0x01
     21c:	81 31       	cpi	r24, 0x11	; 17
     21e:	20 f4       	brcc	.+8      	; 0x228 <LCD_Cursor+0x1a>
     220:	89 81       	ldd	r24, Y+1	; 0x01
     222:	81 58       	subi	r24, 0x81	; 129
     224:	70 df       	rcall	.-288    	; 0x106 <LCD_WriteCommand>
     226:	03 c0       	rjmp	.+6      	; 0x22e <LCD_Cursor+0x20>
     228:	89 81       	ldd	r24, Y+1	; 0x01
     22a:	81 55       	subi	r24, 0x51	; 81
     22c:	6c df       	rcall	.-296    	; 0x106 <LCD_WriteCommand>
     22e:	0f 90       	pop	r0
     230:	df 91       	pop	r29
     232:	cf 91       	pop	r28
     234:	08 95       	ret

00000236 <delay_ms>:
     236:	cf 93       	push	r28
     238:	df 93       	push	r29
     23a:	00 d0       	rcall	.+0      	; 0x23c <delay_ms+0x6>
     23c:	00 d0       	rcall	.+0      	; 0x23e <delay_ms+0x8>
     23e:	00 d0       	rcall	.+0      	; 0x240 <delay_ms+0xa>
     240:	cd b7       	in	r28, 0x3d	; 61
     242:	de b7       	in	r29, 0x3e	; 62
     244:	9e 83       	std	Y+6, r25	; 0x06
     246:	8d 83       	std	Y+5, r24	; 0x05
     248:	1a 82       	std	Y+2, r1	; 0x02
     24a:	19 82       	std	Y+1, r1	; 0x01
     24c:	13 c0       	rjmp	.+38     	; 0x274 <delay_ms+0x3e>
     24e:	1c 82       	std	Y+4, r1	; 0x04
     250:	1b 82       	std	Y+3, r1	; 0x03
     252:	06 c0       	rjmp	.+12     	; 0x260 <delay_ms+0x2a>
     254:	00 00       	nop
     256:	8b 81       	ldd	r24, Y+3	; 0x03
     258:	9c 81       	ldd	r25, Y+4	; 0x04
     25a:	01 96       	adiw	r24, 0x01	; 1
     25c:	9c 83       	std	Y+4, r25	; 0x04
     25e:	8b 83       	std	Y+3, r24	; 0x03
     260:	8b 81       	ldd	r24, Y+3	; 0x03
     262:	9c 81       	ldd	r25, Y+4	; 0x04
     264:	87 30       	cpi	r24, 0x07	; 7
     266:	93 40       	sbci	r25, 0x03	; 3
     268:	ac f3       	brlt	.-22     	; 0x254 <delay_ms+0x1e>
     26a:	89 81       	ldd	r24, Y+1	; 0x01
     26c:	9a 81       	ldd	r25, Y+2	; 0x02
     26e:	01 96       	adiw	r24, 0x01	; 1
     270:	9a 83       	std	Y+2, r25	; 0x02
     272:	89 83       	std	Y+1, r24	; 0x01
     274:	29 81       	ldd	r18, Y+1	; 0x01
     276:	3a 81       	ldd	r19, Y+2	; 0x02
     278:	8d 81       	ldd	r24, Y+5	; 0x05
     27a:	9e 81       	ldd	r25, Y+6	; 0x06
     27c:	28 17       	cp	r18, r24
     27e:	39 07       	cpc	r19, r25
     280:	34 f3       	brlt	.-52     	; 0x24e <delay_ms+0x18>
     282:	26 96       	adiw	r28, 0x06	; 6
     284:	0f b6       	in	r0, 0x3f	; 63
     286:	f8 94       	cli
     288:	de bf       	out	0x3e, r29	; 62
     28a:	0f be       	out	0x3f, r0	; 63
     28c:	cd bf       	out	0x3d, r28	; 61
     28e:	df 91       	pop	r29
     290:	cf 91       	pop	r28
     292:	08 95       	ret

00000294 <GetBit>:
     294:	cf 93       	push	r28
     296:	df 93       	push	r29
     298:	00 d0       	rcall	.+0      	; 0x29a <GetBit+0x6>
     29a:	cd b7       	in	r28, 0x3d	; 61
     29c:	de b7       	in	r29, 0x3e	; 62
     29e:	89 83       	std	Y+1, r24	; 0x01
     2a0:	6a 83       	std	Y+2, r22	; 0x02
     2a2:	8a 81       	ldd	r24, Y+2	; 0x02
     2a4:	28 2f       	mov	r18, r24
     2a6:	30 e0       	ldi	r19, 0x00	; 0
     2a8:	81 e0       	ldi	r24, 0x01	; 1
     2aa:	90 e0       	ldi	r25, 0x00	; 0
     2ac:	02 c0       	rjmp	.+4      	; 0x2b2 <GetBit+0x1e>
     2ae:	88 0f       	add	r24, r24
     2b0:	99 1f       	adc	r25, r25
     2b2:	2a 95       	dec	r18
     2b4:	e2 f7       	brpl	.-8      	; 0x2ae <GetBit+0x1a>
     2b6:	98 2f       	mov	r25, r24
     2b8:	89 81       	ldd	r24, Y+1	; 0x01
     2ba:	89 23       	and	r24, r25
     2bc:	0f 90       	pop	r0
     2be:	0f 90       	pop	r0
     2c0:	df 91       	pop	r29
     2c2:	cf 91       	pop	r28
     2c4:	08 95       	ret

000002c6 <TimerSet>:
     2c6:	cf 93       	push	r28
     2c8:	df 93       	push	r29
     2ca:	00 d0       	rcall	.+0      	; 0x2cc <TimerSet+0x6>
     2cc:	00 d0       	rcall	.+0      	; 0x2ce <TimerSet+0x8>
     2ce:	cd b7       	in	r28, 0x3d	; 61
     2d0:	de b7       	in	r29, 0x3e	; 62
     2d2:	69 83       	std	Y+1, r22	; 0x01
     2d4:	7a 83       	std	Y+2, r23	; 0x02
     2d6:	8b 83       	std	Y+3, r24	; 0x03
     2d8:	9c 83       	std	Y+4, r25	; 0x04
     2da:	89 81       	ldd	r24, Y+1	; 0x01
     2dc:	9a 81       	ldd	r25, Y+2	; 0x02
     2de:	ab 81       	ldd	r26, Y+3	; 0x03
     2e0:	bc 81       	ldd	r27, Y+4	; 0x04
     2e2:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <_avr_timer_M>
     2e6:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <_avr_timer_M+0x1>
     2ea:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <_avr_timer_M+0x2>
     2ee:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <_avr_timer_M+0x3>
     2f2:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <_avr_timer_M>
     2f6:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <_avr_timer_M+0x1>
     2fa:	a0 91 06 01 	lds	r26, 0x0106	; 0x800106 <_avr_timer_M+0x2>
     2fe:	b0 91 07 01 	lds	r27, 0x0107	; 0x800107 <_avr_timer_M+0x3>
     302:	80 93 5f 01 	sts	0x015F, r24	; 0x80015f <_avr_timer_cntcurr>
     306:	90 93 60 01 	sts	0x0160, r25	; 0x800160 <_avr_timer_cntcurr+0x1>
     30a:	a0 93 61 01 	sts	0x0161, r26	; 0x800161 <_avr_timer_cntcurr+0x2>
     30e:	b0 93 62 01 	sts	0x0162, r27	; 0x800162 <_avr_timer_cntcurr+0x3>
     312:	0f 90       	pop	r0
     314:	0f 90       	pop	r0
     316:	0f 90       	pop	r0
     318:	0f 90       	pop	r0
     31a:	df 91       	pop	r29
     31c:	cf 91       	pop	r28
     31e:	08 95       	ret

00000320 <TimerOn>:
     320:	cf 93       	push	r28
     322:	df 93       	push	r29
     324:	cd b7       	in	r28, 0x3d	; 61
     326:	de b7       	in	r29, 0x3e	; 62
     328:	81 e8       	ldi	r24, 0x81	; 129
     32a:	90 e0       	ldi	r25, 0x00	; 0
     32c:	2b e0       	ldi	r18, 0x0B	; 11
     32e:	fc 01       	movw	r30, r24
     330:	20 83       	st	Z, r18
     332:	88 e8       	ldi	r24, 0x88	; 136
     334:	90 e0       	ldi	r25, 0x00	; 0
     336:	2d e7       	ldi	r18, 0x7D	; 125
     338:	30 e0       	ldi	r19, 0x00	; 0
     33a:	fc 01       	movw	r30, r24
     33c:	31 83       	std	Z+1, r19	; 0x01
     33e:	20 83       	st	Z, r18
     340:	8f e6       	ldi	r24, 0x6F	; 111
     342:	90 e0       	ldi	r25, 0x00	; 0
     344:	22 e0       	ldi	r18, 0x02	; 2
     346:	fc 01       	movw	r30, r24
     348:	20 83       	st	Z, r18
     34a:	84 e8       	ldi	r24, 0x84	; 132
     34c:	90 e0       	ldi	r25, 0x00	; 0
     34e:	fc 01       	movw	r30, r24
     350:	11 82       	std	Z+1, r1	; 0x01
     352:	10 82       	st	Z, r1
     354:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <_avr_timer_M>
     358:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <_avr_timer_M+0x1>
     35c:	a0 91 06 01 	lds	r26, 0x0106	; 0x800106 <_avr_timer_M+0x2>
     360:	b0 91 07 01 	lds	r27, 0x0107	; 0x800107 <_avr_timer_M+0x3>
     364:	80 93 5f 01 	sts	0x015F, r24	; 0x80015f <_avr_timer_cntcurr>
     368:	90 93 60 01 	sts	0x0160, r25	; 0x800160 <_avr_timer_cntcurr+0x1>
     36c:	a0 93 61 01 	sts	0x0161, r26	; 0x800161 <_avr_timer_cntcurr+0x2>
     370:	b0 93 62 01 	sts	0x0162, r27	; 0x800162 <_avr_timer_cntcurr+0x3>
     374:	8f e5       	ldi	r24, 0x5F	; 95
     376:	90 e0       	ldi	r25, 0x00	; 0
     378:	2f e5       	ldi	r18, 0x5F	; 95
     37a:	30 e0       	ldi	r19, 0x00	; 0
     37c:	f9 01       	movw	r30, r18
     37e:	20 81       	ld	r18, Z
     380:	20 68       	ori	r18, 0x80	; 128
     382:	fc 01       	movw	r30, r24
     384:	20 83       	st	Z, r18
     386:	df 91       	pop	r29
     388:	cf 91       	pop	r28
     38a:	08 95       	ret

0000038c <TimerISR>:
     38c:	cf 93       	push	r28
     38e:	df 93       	push	r29
     390:	cd b7       	in	r28, 0x3d	; 61
     392:	de b7       	in	r29, 0x3e	; 62
     394:	81 e0       	ldi	r24, 0x01	; 1
     396:	80 93 5e 01 	sts	0x015E, r24	; 0x80015e <__data_end>
     39a:	df 91       	pop	r29
     39c:	cf 91       	pop	r28
     39e:	08 95       	ret

000003a0 <__vector_13>:
     3a0:	1f 92       	push	r1
     3a2:	0f 92       	push	r0
     3a4:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     3a8:	0f 92       	push	r0
     3aa:	11 24       	eor	r1, r1
     3ac:	00 90 5b 00 	lds	r0, 0x005B	; 0x80005b <__TEXT_REGION_LENGTH__+0x7e005b>
     3b0:	0f 92       	push	r0
     3b2:	2f 93       	push	r18
     3b4:	3f 93       	push	r19
     3b6:	4f 93       	push	r20
     3b8:	5f 93       	push	r21
     3ba:	6f 93       	push	r22
     3bc:	7f 93       	push	r23
     3be:	8f 93       	push	r24
     3c0:	9f 93       	push	r25
     3c2:	af 93       	push	r26
     3c4:	bf 93       	push	r27
     3c6:	ef 93       	push	r30
     3c8:	ff 93       	push	r31
     3ca:	cf 93       	push	r28
     3cc:	df 93       	push	r29
     3ce:	cd b7       	in	r28, 0x3d	; 61
     3d0:	de b7       	in	r29, 0x3e	; 62
     3d2:	80 91 5f 01 	lds	r24, 0x015F	; 0x80015f <_avr_timer_cntcurr>
     3d6:	90 91 60 01 	lds	r25, 0x0160	; 0x800160 <_avr_timer_cntcurr+0x1>
     3da:	a0 91 61 01 	lds	r26, 0x0161	; 0x800161 <_avr_timer_cntcurr+0x2>
     3de:	b0 91 62 01 	lds	r27, 0x0162	; 0x800162 <_avr_timer_cntcurr+0x3>
     3e2:	01 97       	sbiw	r24, 0x01	; 1
     3e4:	a1 09       	sbc	r26, r1
     3e6:	b1 09       	sbc	r27, r1
     3e8:	80 93 5f 01 	sts	0x015F, r24	; 0x80015f <_avr_timer_cntcurr>
     3ec:	90 93 60 01 	sts	0x0160, r25	; 0x800160 <_avr_timer_cntcurr+0x1>
     3f0:	a0 93 61 01 	sts	0x0161, r26	; 0x800161 <_avr_timer_cntcurr+0x2>
     3f4:	b0 93 62 01 	sts	0x0162, r27	; 0x800162 <_avr_timer_cntcurr+0x3>
     3f8:	80 91 5f 01 	lds	r24, 0x015F	; 0x80015f <_avr_timer_cntcurr>
     3fc:	90 91 60 01 	lds	r25, 0x0160	; 0x800160 <_avr_timer_cntcurr+0x1>
     400:	a0 91 61 01 	lds	r26, 0x0161	; 0x800161 <_avr_timer_cntcurr+0x2>
     404:	b0 91 62 01 	lds	r27, 0x0162	; 0x800162 <_avr_timer_cntcurr+0x3>
     408:	89 2b       	or	r24, r25
     40a:	8a 2b       	or	r24, r26
     40c:	8b 2b       	or	r24, r27
     40e:	89 f4       	brne	.+34     	; 0x432 <__FUSE_REGION_LENGTH__+0x32>
     410:	bd df       	rcall	.-134    	; 0x38c <TimerISR>
     412:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <_avr_timer_M>
     416:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <_avr_timer_M+0x1>
     41a:	a0 91 06 01 	lds	r26, 0x0106	; 0x800106 <_avr_timer_M+0x2>
     41e:	b0 91 07 01 	lds	r27, 0x0107	; 0x800107 <_avr_timer_M+0x3>
     422:	80 93 5f 01 	sts	0x015F, r24	; 0x80015f <_avr_timer_cntcurr>
     426:	90 93 60 01 	sts	0x0160, r25	; 0x800160 <_avr_timer_cntcurr+0x1>
     42a:	a0 93 61 01 	sts	0x0161, r26	; 0x800161 <_avr_timer_cntcurr+0x2>
     42e:	b0 93 62 01 	sts	0x0162, r27	; 0x800162 <_avr_timer_cntcurr+0x3>
     432:	df 91       	pop	r29
     434:	cf 91       	pop	r28
     436:	ff 91       	pop	r31
     438:	ef 91       	pop	r30
     43a:	bf 91       	pop	r27
     43c:	af 91       	pop	r26
     43e:	9f 91       	pop	r25
     440:	8f 91       	pop	r24
     442:	7f 91       	pop	r23
     444:	6f 91       	pop	r22
     446:	5f 91       	pop	r21
     448:	4f 91       	pop	r20
     44a:	3f 91       	pop	r19
     44c:	2f 91       	pop	r18
     44e:	0f 90       	pop	r0
     450:	00 92 5b 00 	sts	0x005B, r0	; 0x80005b <__TEXT_REGION_LENGTH__+0x7e005b>
     454:	0f 90       	pop	r0
     456:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     45a:	0f 90       	pop	r0
     45c:	1f 90       	pop	r1
     45e:	18 95       	reti

00000460 <findGCD>:
     460:	cf 93       	push	r28
     462:	df 93       	push	r29
     464:	cd b7       	in	r28, 0x3d	; 61
     466:	de b7       	in	r29, 0x3e	; 62
     468:	60 97       	sbiw	r28, 0x10	; 16
     46a:	0f b6       	in	r0, 0x3f	; 63
     46c:	f8 94       	cli
     46e:	de bf       	out	0x3e, r29	; 62
     470:	0f be       	out	0x3f, r0	; 63
     472:	cd bf       	out	0x3d, r28	; 61
     474:	6d 83       	std	Y+5, r22	; 0x05
     476:	7e 83       	std	Y+6, r23	; 0x06
     478:	8f 83       	std	Y+7, r24	; 0x07
     47a:	98 87       	std	Y+8, r25	; 0x08
     47c:	29 87       	std	Y+9, r18	; 0x09
     47e:	3a 87       	std	Y+10, r19	; 0x0a
     480:	4b 87       	std	Y+11, r20	; 0x0b
     482:	5c 87       	std	Y+12, r21	; 0x0c
     484:	8d 81       	ldd	r24, Y+5	; 0x05
     486:	9e 81       	ldd	r25, Y+6	; 0x06
     488:	af 81       	ldd	r26, Y+7	; 0x07
     48a:	b8 85       	ldd	r27, Y+8	; 0x08
     48c:	29 85       	ldd	r18, Y+9	; 0x09
     48e:	3a 85       	ldd	r19, Y+10	; 0x0a
     490:	4b 85       	ldd	r20, Y+11	; 0x0b
     492:	5c 85       	ldd	r21, Y+12	; 0x0c
     494:	bc 01       	movw	r22, r24
     496:	cd 01       	movw	r24, r26
     498:	17 d7       	rcall	.+3630   	; 0x12c8 <__udivmodsi4>
     49a:	dc 01       	movw	r26, r24
     49c:	cb 01       	movw	r24, r22
     49e:	89 83       	std	Y+1, r24	; 0x01
     4a0:	9a 83       	std	Y+2, r25	; 0x02
     4a2:	ab 83       	std	Y+3, r26	; 0x03
     4a4:	bc 83       	std	Y+4, r27	; 0x04
     4a6:	89 81       	ldd	r24, Y+1	; 0x01
     4a8:	9a 81       	ldd	r25, Y+2	; 0x02
     4aa:	ab 81       	ldd	r26, Y+3	; 0x03
     4ac:	bc 81       	ldd	r27, Y+4	; 0x04
     4ae:	89 2b       	or	r24, r25
     4b0:	8a 2b       	or	r24, r26
     4b2:	8b 2b       	or	r24, r27
     4b4:	29 f4       	brne	.+10     	; 0x4c0 <findGCD+0x60>
     4b6:	89 85       	ldd	r24, Y+9	; 0x09
     4b8:	9a 85       	ldd	r25, Y+10	; 0x0a
     4ba:	ab 85       	ldd	r26, Y+11	; 0x0b
     4bc:	bc 85       	ldd	r27, Y+12	; 0x0c
     4be:	11 c0       	rjmp	.+34     	; 0x4e2 <findGCD+0x82>
     4c0:	89 85       	ldd	r24, Y+9	; 0x09
     4c2:	9a 85       	ldd	r25, Y+10	; 0x0a
     4c4:	ab 85       	ldd	r26, Y+11	; 0x0b
     4c6:	bc 85       	ldd	r27, Y+12	; 0x0c
     4c8:	8d 83       	std	Y+5, r24	; 0x05
     4ca:	9e 83       	std	Y+6, r25	; 0x06
     4cc:	af 83       	std	Y+7, r26	; 0x07
     4ce:	b8 87       	std	Y+8, r27	; 0x08
     4d0:	89 81       	ldd	r24, Y+1	; 0x01
     4d2:	9a 81       	ldd	r25, Y+2	; 0x02
     4d4:	ab 81       	ldd	r26, Y+3	; 0x03
     4d6:	bc 81       	ldd	r27, Y+4	; 0x04
     4d8:	89 87       	std	Y+9, r24	; 0x09
     4da:	9a 87       	std	Y+10, r25	; 0x0a
     4dc:	ab 87       	std	Y+11, r26	; 0x0b
     4de:	bc 87       	std	Y+12, r27	; 0x0c
     4e0:	d1 cf       	rjmp	.-94     	; 0x484 <findGCD+0x24>
     4e2:	bc 01       	movw	r22, r24
     4e4:	cd 01       	movw	r24, r26
     4e6:	60 96       	adiw	r28, 0x10	; 16
     4e8:	0f b6       	in	r0, 0x3f	; 63
     4ea:	f8 94       	cli
     4ec:	de bf       	out	0x3e, r29	; 62
     4ee:	0f be       	out	0x3f, r0	; 63
     4f0:	cd bf       	out	0x3d, r28	; 61
     4f2:	df 91       	pop	r29
     4f4:	cf 91       	pop	r28
     4f6:	08 95       	ret

000004f8 <GetKeypadKey>:
     4f8:	cf 93       	push	r28
     4fa:	df 93       	push	r29
     4fc:	cd b7       	in	r28, 0x3d	; 61
     4fe:	de b7       	in	r29, 0x3e	; 62
     500:	88 e2       	ldi	r24, 0x28	; 40
     502:	90 e0       	ldi	r25, 0x00	; 0
     504:	2f ee       	ldi	r18, 0xEF	; 239
     506:	fc 01       	movw	r30, r24
     508:	20 83       	st	Z, r18
     50a:	00 00       	nop
     50c:	86 e2       	ldi	r24, 0x26	; 38
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	fc 01       	movw	r30, r24
     512:	80 81       	ld	r24, Z
     514:	60 e0       	ldi	r22, 0x00	; 0
     516:	be de       	rcall	.-644    	; 0x294 <GetBit>
     518:	88 23       	and	r24, r24
     51a:	11 f4       	brne	.+4      	; 0x520 <GetKeypadKey+0x28>
     51c:	81 e3       	ldi	r24, 0x31	; 49
     51e:	a9 c0       	rjmp	.+338    	; 0x672 <GetKeypadKey+0x17a>
     520:	86 e2       	ldi	r24, 0x26	; 38
     522:	90 e0       	ldi	r25, 0x00	; 0
     524:	fc 01       	movw	r30, r24
     526:	80 81       	ld	r24, Z
     528:	61 e0       	ldi	r22, 0x01	; 1
     52a:	b4 de       	rcall	.-664    	; 0x294 <GetBit>
     52c:	88 23       	and	r24, r24
     52e:	11 f4       	brne	.+4      	; 0x534 <GetKeypadKey+0x3c>
     530:	82 e3       	ldi	r24, 0x32	; 50
     532:	9f c0       	rjmp	.+318    	; 0x672 <GetKeypadKey+0x17a>
     534:	86 e2       	ldi	r24, 0x26	; 38
     536:	90 e0       	ldi	r25, 0x00	; 0
     538:	fc 01       	movw	r30, r24
     53a:	80 81       	ld	r24, Z
     53c:	62 e0       	ldi	r22, 0x02	; 2
     53e:	aa de       	rcall	.-684    	; 0x294 <GetBit>
     540:	88 23       	and	r24, r24
     542:	11 f4       	brne	.+4      	; 0x548 <GetKeypadKey+0x50>
     544:	83 e3       	ldi	r24, 0x33	; 51
     546:	95 c0       	rjmp	.+298    	; 0x672 <GetKeypadKey+0x17a>
     548:	86 e2       	ldi	r24, 0x26	; 38
     54a:	90 e0       	ldi	r25, 0x00	; 0
     54c:	fc 01       	movw	r30, r24
     54e:	80 81       	ld	r24, Z
     550:	63 e0       	ldi	r22, 0x03	; 3
     552:	a0 de       	rcall	.-704    	; 0x294 <GetBit>
     554:	88 23       	and	r24, r24
     556:	11 f4       	brne	.+4      	; 0x55c <GetKeypadKey+0x64>
     558:	81 e4       	ldi	r24, 0x41	; 65
     55a:	8b c0       	rjmp	.+278    	; 0x672 <GetKeypadKey+0x17a>
     55c:	88 e2       	ldi	r24, 0x28	; 40
     55e:	90 e0       	ldi	r25, 0x00	; 0
     560:	2f ed       	ldi	r18, 0xDF	; 223
     562:	fc 01       	movw	r30, r24
     564:	20 83       	st	Z, r18
     566:	00 00       	nop
     568:	86 e2       	ldi	r24, 0x26	; 38
     56a:	90 e0       	ldi	r25, 0x00	; 0
     56c:	fc 01       	movw	r30, r24
     56e:	80 81       	ld	r24, Z
     570:	60 e0       	ldi	r22, 0x00	; 0
     572:	90 de       	rcall	.-736    	; 0x294 <GetBit>
     574:	88 23       	and	r24, r24
     576:	11 f4       	brne	.+4      	; 0x57c <GetKeypadKey+0x84>
     578:	84 e3       	ldi	r24, 0x34	; 52
     57a:	7b c0       	rjmp	.+246    	; 0x672 <GetKeypadKey+0x17a>
     57c:	86 e2       	ldi	r24, 0x26	; 38
     57e:	90 e0       	ldi	r25, 0x00	; 0
     580:	fc 01       	movw	r30, r24
     582:	80 81       	ld	r24, Z
     584:	61 e0       	ldi	r22, 0x01	; 1
     586:	86 de       	rcall	.-756    	; 0x294 <GetBit>
     588:	88 23       	and	r24, r24
     58a:	11 f4       	brne	.+4      	; 0x590 <GetKeypadKey+0x98>
     58c:	85 e3       	ldi	r24, 0x35	; 53
     58e:	71 c0       	rjmp	.+226    	; 0x672 <GetKeypadKey+0x17a>
     590:	86 e2       	ldi	r24, 0x26	; 38
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	fc 01       	movw	r30, r24
     596:	80 81       	ld	r24, Z
     598:	62 e0       	ldi	r22, 0x02	; 2
     59a:	7c de       	rcall	.-776    	; 0x294 <GetBit>
     59c:	88 23       	and	r24, r24
     59e:	11 f4       	brne	.+4      	; 0x5a4 <GetKeypadKey+0xac>
     5a0:	86 e3       	ldi	r24, 0x36	; 54
     5a2:	67 c0       	rjmp	.+206    	; 0x672 <GetKeypadKey+0x17a>
     5a4:	86 e2       	ldi	r24, 0x26	; 38
     5a6:	90 e0       	ldi	r25, 0x00	; 0
     5a8:	fc 01       	movw	r30, r24
     5aa:	80 81       	ld	r24, Z
     5ac:	63 e0       	ldi	r22, 0x03	; 3
     5ae:	72 de       	rcall	.-796    	; 0x294 <GetBit>
     5b0:	88 23       	and	r24, r24
     5b2:	11 f4       	brne	.+4      	; 0x5b8 <GetKeypadKey+0xc0>
     5b4:	82 e4       	ldi	r24, 0x42	; 66
     5b6:	5d c0       	rjmp	.+186    	; 0x672 <GetKeypadKey+0x17a>
     5b8:	88 e2       	ldi	r24, 0x28	; 40
     5ba:	90 e0       	ldi	r25, 0x00	; 0
     5bc:	2f eb       	ldi	r18, 0xBF	; 191
     5be:	fc 01       	movw	r30, r24
     5c0:	20 83       	st	Z, r18
     5c2:	00 00       	nop
     5c4:	86 e2       	ldi	r24, 0x26	; 38
     5c6:	90 e0       	ldi	r25, 0x00	; 0
     5c8:	fc 01       	movw	r30, r24
     5ca:	80 81       	ld	r24, Z
     5cc:	60 e0       	ldi	r22, 0x00	; 0
     5ce:	62 de       	rcall	.-828    	; 0x294 <GetBit>
     5d0:	88 23       	and	r24, r24
     5d2:	11 f4       	brne	.+4      	; 0x5d8 <GetKeypadKey+0xe0>
     5d4:	87 e3       	ldi	r24, 0x37	; 55
     5d6:	4d c0       	rjmp	.+154    	; 0x672 <GetKeypadKey+0x17a>
     5d8:	86 e2       	ldi	r24, 0x26	; 38
     5da:	90 e0       	ldi	r25, 0x00	; 0
     5dc:	fc 01       	movw	r30, r24
     5de:	80 81       	ld	r24, Z
     5e0:	61 e0       	ldi	r22, 0x01	; 1
     5e2:	58 de       	rcall	.-848    	; 0x294 <GetBit>
     5e4:	88 23       	and	r24, r24
     5e6:	11 f4       	brne	.+4      	; 0x5ec <GetKeypadKey+0xf4>
     5e8:	88 e3       	ldi	r24, 0x38	; 56
     5ea:	43 c0       	rjmp	.+134    	; 0x672 <GetKeypadKey+0x17a>
     5ec:	86 e2       	ldi	r24, 0x26	; 38
     5ee:	90 e0       	ldi	r25, 0x00	; 0
     5f0:	fc 01       	movw	r30, r24
     5f2:	80 81       	ld	r24, Z
     5f4:	62 e0       	ldi	r22, 0x02	; 2
     5f6:	4e de       	rcall	.-868    	; 0x294 <GetBit>
     5f8:	88 23       	and	r24, r24
     5fa:	11 f4       	brne	.+4      	; 0x600 <GetKeypadKey+0x108>
     5fc:	89 e3       	ldi	r24, 0x39	; 57
     5fe:	39 c0       	rjmp	.+114    	; 0x672 <GetKeypadKey+0x17a>
     600:	86 e2       	ldi	r24, 0x26	; 38
     602:	90 e0       	ldi	r25, 0x00	; 0
     604:	fc 01       	movw	r30, r24
     606:	80 81       	ld	r24, Z
     608:	63 e0       	ldi	r22, 0x03	; 3
     60a:	44 de       	rcall	.-888    	; 0x294 <GetBit>
     60c:	88 23       	and	r24, r24
     60e:	11 f4       	brne	.+4      	; 0x614 <GetKeypadKey+0x11c>
     610:	83 e4       	ldi	r24, 0x43	; 67
     612:	2f c0       	rjmp	.+94     	; 0x672 <GetKeypadKey+0x17a>
     614:	88 e2       	ldi	r24, 0x28	; 40
     616:	90 e0       	ldi	r25, 0x00	; 0
     618:	2f e7       	ldi	r18, 0x7F	; 127
     61a:	fc 01       	movw	r30, r24
     61c:	20 83       	st	Z, r18
     61e:	00 00       	nop
     620:	86 e2       	ldi	r24, 0x26	; 38
     622:	90 e0       	ldi	r25, 0x00	; 0
     624:	fc 01       	movw	r30, r24
     626:	80 81       	ld	r24, Z
     628:	60 e0       	ldi	r22, 0x00	; 0
     62a:	34 de       	rcall	.-920    	; 0x294 <GetBit>
     62c:	88 23       	and	r24, r24
     62e:	11 f4       	brne	.+4      	; 0x634 <GetKeypadKey+0x13c>
     630:	8a e2       	ldi	r24, 0x2A	; 42
     632:	1f c0       	rjmp	.+62     	; 0x672 <GetKeypadKey+0x17a>
     634:	86 e2       	ldi	r24, 0x26	; 38
     636:	90 e0       	ldi	r25, 0x00	; 0
     638:	fc 01       	movw	r30, r24
     63a:	80 81       	ld	r24, Z
     63c:	61 e0       	ldi	r22, 0x01	; 1
     63e:	2a de       	rcall	.-940    	; 0x294 <GetBit>
     640:	88 23       	and	r24, r24
     642:	11 f4       	brne	.+4      	; 0x648 <GetKeypadKey+0x150>
     644:	80 e3       	ldi	r24, 0x30	; 48
     646:	15 c0       	rjmp	.+42     	; 0x672 <GetKeypadKey+0x17a>
     648:	86 e2       	ldi	r24, 0x26	; 38
     64a:	90 e0       	ldi	r25, 0x00	; 0
     64c:	fc 01       	movw	r30, r24
     64e:	80 81       	ld	r24, Z
     650:	62 e0       	ldi	r22, 0x02	; 2
     652:	20 de       	rcall	.-960    	; 0x294 <GetBit>
     654:	88 23       	and	r24, r24
     656:	11 f4       	brne	.+4      	; 0x65c <GetKeypadKey+0x164>
     658:	83 e2       	ldi	r24, 0x23	; 35
     65a:	0b c0       	rjmp	.+22     	; 0x672 <GetKeypadKey+0x17a>
     65c:	86 e2       	ldi	r24, 0x26	; 38
     65e:	90 e0       	ldi	r25, 0x00	; 0
     660:	fc 01       	movw	r30, r24
     662:	80 81       	ld	r24, Z
     664:	63 e0       	ldi	r22, 0x03	; 3
     666:	16 de       	rcall	.-980    	; 0x294 <GetBit>
     668:	88 23       	and	r24, r24
     66a:	11 f4       	brne	.+4      	; 0x670 <GetKeypadKey+0x178>
     66c:	84 e4       	ldi	r24, 0x44	; 68
     66e:	01 c0       	rjmp	.+2      	; 0x672 <GetKeypadKey+0x17a>
     670:	80 e0       	ldi	r24, 0x00	; 0
     672:	df 91       	pop	r29
     674:	cf 91       	pop	r28
     676:	08 95       	ret

00000678 <arrayShift>:
     678:	cf 93       	push	r28
     67a:	df 93       	push	r29
     67c:	00 d0       	rcall	.+0      	; 0x67e <arrayShift+0x6>
     67e:	cd b7       	in	r28, 0x3d	; 61
     680:	de b7       	in	r29, 0x3e	; 62
     682:	8a 83       	std	Y+2, r24	; 0x02
     684:	8a 81       	ldd	r24, Y+2	; 0x02
     686:	89 83       	std	Y+1, r24	; 0x01
     688:	23 c0       	rjmp	.+70     	; 0x6d0 <arrayShift+0x58>
     68a:	89 81       	ldd	r24, Y+1	; 0x01
     68c:	88 2f       	mov	r24, r24
     68e:	90 e0       	ldi	r25, 0x00	; 0
     690:	29 81       	ldd	r18, Y+1	; 0x01
     692:	22 2f       	mov	r18, r18
     694:	30 e0       	ldi	r19, 0x00	; 0
     696:	21 50       	subi	r18, 0x01	; 1
     698:	31 09       	sbc	r19, r1
     69a:	28 5f       	subi	r18, 0xF8	; 248
     69c:	3e 4f       	sbci	r19, 0xFE	; 254
     69e:	f9 01       	movw	r30, r18
     6a0:	20 81       	ld	r18, Z
     6a2:	88 5f       	subi	r24, 0xF8	; 248
     6a4:	9e 4f       	sbci	r25, 0xFE	; 254
     6a6:	fc 01       	movw	r30, r24
     6a8:	20 83       	st	Z, r18
     6aa:	89 81       	ldd	r24, Y+1	; 0x01
     6ac:	88 2f       	mov	r24, r24
     6ae:	90 e0       	ldi	r25, 0x00	; 0
     6b0:	29 81       	ldd	r18, Y+1	; 0x01
     6b2:	22 2f       	mov	r18, r18
     6b4:	30 e0       	ldi	r19, 0x00	; 0
     6b6:	21 50       	subi	r18, 0x01	; 1
     6b8:	31 09       	sbc	r19, r1
     6ba:	27 5e       	subi	r18, 0xE7	; 231
     6bc:	3e 4f       	sbci	r19, 0xFE	; 254
     6be:	f9 01       	movw	r30, r18
     6c0:	20 81       	ld	r18, Z
     6c2:	87 5e       	subi	r24, 0xE7	; 231
     6c4:	9e 4f       	sbci	r25, 0xFE	; 254
     6c6:	fc 01       	movw	r30, r24
     6c8:	20 83       	st	Z, r18
     6ca:	89 81       	ldd	r24, Y+1	; 0x01
     6cc:	81 50       	subi	r24, 0x01	; 1
     6ce:	89 83       	std	Y+1, r24	; 0x01
     6d0:	89 81       	ldd	r24, Y+1	; 0x01
     6d2:	88 23       	and	r24, r24
     6d4:	d1 f6       	brne	.-76     	; 0x68a <arrayShift+0x12>
     6d6:	0f 90       	pop	r0
     6d8:	0f 90       	pop	r0
     6da:	df 91       	pop	r29
     6dc:	cf 91       	pop	r28
     6de:	08 95       	ret

000006e0 <clearArray>:
     6e0:	cf 93       	push	r28
     6e2:	df 93       	push	r29
     6e4:	00 d0       	rcall	.+0      	; 0x6e6 <clearArray+0x6>
     6e6:	cd b7       	in	r28, 0x3d	; 61
     6e8:	de b7       	in	r29, 0x3e	; 62
     6ea:	8a 83       	std	Y+2, r24	; 0x02
     6ec:	19 82       	std	Y+1, r1	; 0x01
     6ee:	11 c0       	rjmp	.+34     	; 0x712 <clearArray+0x32>
     6f0:	89 81       	ldd	r24, Y+1	; 0x01
     6f2:	88 2f       	mov	r24, r24
     6f4:	90 e0       	ldi	r25, 0x00	; 0
     6f6:	88 5f       	subi	r24, 0xF8	; 248
     6f8:	9e 4f       	sbci	r25, 0xFE	; 254
     6fa:	fc 01       	movw	r30, r24
     6fc:	10 82       	st	Z, r1
     6fe:	89 81       	ldd	r24, Y+1	; 0x01
     700:	88 2f       	mov	r24, r24
     702:	90 e0       	ldi	r25, 0x00	; 0
     704:	87 5e       	subi	r24, 0xE7	; 231
     706:	9e 4f       	sbci	r25, 0xFE	; 254
     708:	fc 01       	movw	r30, r24
     70a:	10 82       	st	Z, r1
     70c:	89 81       	ldd	r24, Y+1	; 0x01
     70e:	8f 5f       	subi	r24, 0xFF	; 255
     710:	89 83       	std	Y+1, r24	; 0x01
     712:	99 81       	ldd	r25, Y+1	; 0x01
     714:	8a 81       	ldd	r24, Y+2	; 0x02
     716:	98 17       	cp	r25, r24
     718:	58 f3       	brcs	.-42     	; 0x6f0 <clearArray+0x10>
     71a:	0f 90       	pop	r0
     71c:	0f 90       	pop	r0
     71e:	df 91       	pop	r29
     720:	cf 91       	pop	r28
     722:	08 95       	ret

00000724 <ObstacleGeneratorSM_Tick>:
     724:	cf 93       	push	r28
     726:	df 93       	push	r29
     728:	cd b7       	in	r28, 0x3d	; 61
     72a:	de b7       	in	r29, 0x3e	; 62
     72c:	2a 97       	sbiw	r28, 0x0a	; 10
     72e:	0f b6       	in	r0, 0x3f	; 63
     730:	f8 94       	cli
     732:	de bf       	out	0x3e, r29	; 62
     734:	0f be       	out	0x3f, r0	; 63
     736:	cd bf       	out	0x3d, r28	; 61
     738:	9a 83       	std	Y+2, r25	; 0x02
     73a:	89 83       	std	Y+1, r24	; 0x01
     73c:	89 81       	ldd	r24, Y+1	; 0x01
     73e:	9a 81       	ldd	r25, Y+2	; 0x02
     740:	81 30       	cpi	r24, 0x01	; 1
     742:	91 05       	cpc	r25, r1
     744:	51 f0       	breq	.+20     	; 0x75a <ObstacleGeneratorSM_Tick+0x36>
     746:	82 30       	cpi	r24, 0x02	; 2
     748:	91 05       	cpc	r25, r1
     74a:	c1 f0       	breq	.+48     	; 0x77c <ObstacleGeneratorSM_Tick+0x58>
     74c:	89 2b       	or	r24, r25
     74e:	11 f5       	brne	.+68     	; 0x794 <ObstacleGeneratorSM_Tick+0x70>
     750:	81 e0       	ldi	r24, 0x01	; 1
     752:	90 e0       	ldi	r25, 0x00	; 0
     754:	9a 83       	std	Y+2, r25	; 0x02
     756:	89 83       	std	Y+1, r24	; 0x01
     758:	20 c0       	rjmp	.+64     	; 0x79a <ObstacleGeneratorSM_Tick+0x76>
     75a:	80 91 65 01 	lds	r24, 0x0165	; 0x800165 <restart>
     75e:	81 30       	cpi	r24, 0x01	; 1
     760:	19 f4       	brne	.+6      	; 0x768 <ObstacleGeneratorSM_Tick+0x44>
     762:	1a 82       	std	Y+2, r1	; 0x02
     764:	19 82       	std	Y+1, r1	; 0x01
     766:	09 c0       	rjmp	.+18     	; 0x77a <ObstacleGeneratorSM_Tick+0x56>
     768:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <beginGenerate>
     76c:	81 30       	cpi	r24, 0x01	; 1
     76e:	29 f4       	brne	.+10     	; 0x77a <ObstacleGeneratorSM_Tick+0x56>
     770:	82 e0       	ldi	r24, 0x02	; 2
     772:	90 e0       	ldi	r25, 0x00	; 0
     774:	9a 83       	std	Y+2, r25	; 0x02
     776:	89 83       	std	Y+1, r24	; 0x01
     778:	10 c0       	rjmp	.+32     	; 0x79a <ObstacleGeneratorSM_Tick+0x76>
     77a:	0f c0       	rjmp	.+30     	; 0x79a <ObstacleGeneratorSM_Tick+0x76>
     77c:	80 91 65 01 	lds	r24, 0x0165	; 0x800165 <restart>
     780:	81 30       	cpi	r24, 0x01	; 1
     782:	19 f4       	brne	.+6      	; 0x78a <ObstacleGeneratorSM_Tick+0x66>
     784:	1a 82       	std	Y+2, r1	; 0x02
     786:	19 82       	std	Y+1, r1	; 0x01
     788:	08 c0       	rjmp	.+16     	; 0x79a <ObstacleGeneratorSM_Tick+0x76>
     78a:	81 e0       	ldi	r24, 0x01	; 1
     78c:	90 e0       	ldi	r25, 0x00	; 0
     78e:	9a 83       	std	Y+2, r25	; 0x02
     790:	89 83       	std	Y+1, r24	; 0x01
     792:	03 c0       	rjmp	.+6      	; 0x79a <ObstacleGeneratorSM_Tick+0x76>
     794:	1a 82       	std	Y+2, r1	; 0x02
     796:	19 82       	std	Y+1, r1	; 0x01
     798:	00 00       	nop
     79a:	89 81       	ldd	r24, Y+1	; 0x01
     79c:	9a 81       	ldd	r25, Y+2	; 0x02
     79e:	81 30       	cpi	r24, 0x01	; 1
     7a0:	91 05       	cpc	r25, r1
     7a2:	09 f4       	brne	.+2      	; 0x7a6 <ObstacleGeneratorSM_Tick+0x82>
     7a4:	66 c0       	rjmp	.+204    	; 0x872 <ObstacleGeneratorSM_Tick+0x14e>
     7a6:	82 30       	cpi	r24, 0x02	; 2
     7a8:	91 05       	cpc	r25, r1
     7aa:	61 f0       	breq	.+24     	; 0x7c4 <ObstacleGeneratorSM_Tick+0xa0>
     7ac:	89 2b       	or	r24, r25
     7ae:	09 f0       	breq	.+2      	; 0x7b2 <ObstacleGeneratorSM_Tick+0x8e>
     7b0:	61 c0       	rjmp	.+194    	; 0x874 <ObstacleGeneratorSM_Tick+0x150>
     7b2:	81 e0       	ldi	r24, 0x01	; 1
     7b4:	80 93 2d 01 	sts	0x012D, r24	; 0x80012d <str_index>
     7b8:	84 e1       	ldi	r24, 0x14	; 20
     7ba:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <object_generate_prob>
     7be:	81 e1       	ldi	r24, 0x11	; 17
     7c0:	8f df       	rcall	.-226    	; 0x6e0 <clearArray>
     7c2:	58 c0       	rjmp	.+176    	; 0x874 <ObstacleGeneratorSM_Tick+0x150>
     7c4:	80 91 2d 01 	lds	r24, 0x012D	; 0x80012d <str_index>
     7c8:	57 df       	rcall	.-338    	; 0x678 <arrayShift>
     7ca:	fb d5       	rcall	.+3062   	; 0x13c2 <rand>
     7cc:	20 91 2a 01 	lds	r18, 0x012A	; 0x80012a <object_generate_prob>
     7d0:	22 2f       	mov	r18, r18
     7d2:	30 e0       	ldi	r19, 0x00	; 0
     7d4:	b9 01       	movw	r22, r18
     7d6:	65 d5       	rcall	.+2762   	; 0x12a2 <__divmodhi4>
     7d8:	01 97       	sbiw	r24, 0x01	; 1
     7da:	21 f4       	brne	.+8      	; 0x7e4 <ObstacleGeneratorSM_Tick+0xc0>
     7dc:	83 e2       	ldi	r24, 0x23	; 35
     7de:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <row1>
     7e2:	10 c0       	rjmp	.+32     	; 0x804 <ObstacleGeneratorSM_Tick+0xe0>
     7e4:	ee d5       	rcall	.+3036   	; 0x13c2 <rand>
     7e6:	20 91 2a 01 	lds	r18, 0x012A	; 0x80012a <object_generate_prob>
     7ea:	22 2f       	mov	r18, r18
     7ec:	30 e0       	ldi	r19, 0x00	; 0
     7ee:	b9 01       	movw	r22, r18
     7f0:	58 d5       	rcall	.+2736   	; 0x12a2 <__divmodhi4>
     7f2:	01 97       	sbiw	r24, 0x01	; 1
     7f4:	21 f4       	brne	.+8      	; 0x7fe <ObstacleGeneratorSM_Tick+0xda>
     7f6:	8a e2       	ldi	r24, 0x2A	; 42
     7f8:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <row1>
     7fc:	03 c0       	rjmp	.+6      	; 0x804 <ObstacleGeneratorSM_Tick+0xe0>
     7fe:	80 e2       	ldi	r24, 0x20	; 32
     800:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <row1>
     804:	de d5       	rcall	.+3004   	; 0x13c2 <rand>
     806:	20 91 2a 01 	lds	r18, 0x012A	; 0x80012a <object_generate_prob>
     80a:	22 2f       	mov	r18, r18
     80c:	30 e0       	ldi	r19, 0x00	; 0
     80e:	b9 01       	movw	r22, r18
     810:	48 d5       	rcall	.+2704   	; 0x12a2 <__divmodhi4>
     812:	01 97       	sbiw	r24, 0x01	; 1
     814:	21 f4       	brne	.+8      	; 0x81e <ObstacleGeneratorSM_Tick+0xfa>
     816:	83 e2       	ldi	r24, 0x23	; 35
     818:	80 93 19 01 	sts	0x0119, r24	; 0x800119 <row2>
     81c:	10 c0       	rjmp	.+32     	; 0x83e <ObstacleGeneratorSM_Tick+0x11a>
     81e:	d1 d5       	rcall	.+2978   	; 0x13c2 <rand>
     820:	20 91 2a 01 	lds	r18, 0x012A	; 0x80012a <object_generate_prob>
     824:	22 2f       	mov	r18, r18
     826:	30 e0       	ldi	r19, 0x00	; 0
     828:	b9 01       	movw	r22, r18
     82a:	3b d5       	rcall	.+2678   	; 0x12a2 <__divmodhi4>
     82c:	01 97       	sbiw	r24, 0x01	; 1
     82e:	21 f4       	brne	.+8      	; 0x838 <ObstacleGeneratorSM_Tick+0x114>
     830:	8a e2       	ldi	r24, 0x2A	; 42
     832:	80 93 19 01 	sts	0x0119, r24	; 0x800119 <row2>
     836:	03 c0       	rjmp	.+6      	; 0x83e <ObstacleGeneratorSM_Tick+0x11a>
     838:	80 e2       	ldi	r24, 0x20	; 32
     83a:	80 93 19 01 	sts	0x0119, r24	; 0x800119 <row2>
     83e:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <row1+0x10>
     842:	88 23       	and	r24, r24
     844:	21 f4       	brne	.+8      	; 0x84e <ObstacleGeneratorSM_Tick+0x12a>
     846:	80 91 29 01 	lds	r24, 0x0129	; 0x800129 <row2+0x10>
     84a:	88 23       	and	r24, r24
     84c:	61 f0       	breq	.+24     	; 0x866 <ObstacleGeneratorSM_Tick+0x142>
     84e:	80 91 2d 01 	lds	r24, 0x012D	; 0x80012d <str_index>
     852:	80 31       	cpi	r24, 0x10	; 16
     854:	40 f0       	brcs	.+16     	; 0x866 <ObstacleGeneratorSM_Tick+0x142>
     856:	10 92 18 01 	sts	0x0118, r1	; 0x800118 <row1+0x10>
     85a:	10 92 29 01 	sts	0x0129, r1	; 0x800129 <row2+0x10>
     85e:	80 e1       	ldi	r24, 0x10	; 16
     860:	80 93 2d 01 	sts	0x012D, r24	; 0x80012d <str_index>
     864:	07 c0       	rjmp	.+14     	; 0x874 <ObstacleGeneratorSM_Tick+0x150>
     866:	80 91 2d 01 	lds	r24, 0x012D	; 0x80012d <str_index>
     86a:	8f 5f       	subi	r24, 0xFF	; 255
     86c:	80 93 2d 01 	sts	0x012D, r24	; 0x80012d <str_index>
     870:	01 c0       	rjmp	.+2      	; 0x874 <ObstacleGeneratorSM_Tick+0x150>
     872:	00 00       	nop
     874:	89 81       	ldd	r24, Y+1	; 0x01
     876:	9a 81       	ldd	r25, Y+2	; 0x02
     878:	2a 96       	adiw	r28, 0x0a	; 10
     87a:	0f b6       	in	r0, 0x3f	; 63
     87c:	f8 94       	cli
     87e:	de bf       	out	0x3e, r29	; 62
     880:	0f be       	out	0x3f, r0	; 63
     882:	cd bf       	out	0x3d, r28	; 61
     884:	df 91       	pop	r29
     886:	cf 91       	pop	r28
     888:	08 95       	ret

0000088a <DisplaySM_Tick>:
     88a:	cf 93       	push	r28
     88c:	df 93       	push	r29
     88e:	00 d0       	rcall	.+0      	; 0x890 <DisplaySM_Tick+0x6>
     890:	cd b7       	in	r28, 0x3d	; 61
     892:	de b7       	in	r29, 0x3e	; 62
     894:	9a 83       	std	Y+2, r25	; 0x02
     896:	89 83       	std	Y+1, r24	; 0x01
     898:	89 81       	ldd	r24, Y+1	; 0x01
     89a:	9a 81       	ldd	r25, Y+2	; 0x02
     89c:	82 30       	cpi	r24, 0x02	; 2
     89e:	91 05       	cpc	r25, r1
     8a0:	e9 f0       	breq	.+58     	; 0x8dc <DisplaySM_Tick+0x52>
     8a2:	83 30       	cpi	r24, 0x03	; 3
     8a4:	91 05       	cpc	r25, r1
     8a6:	2c f4       	brge	.+10     	; 0x8b2 <DisplaySM_Tick+0x28>
     8a8:	00 97       	sbiw	r24, 0x00	; 0
     8aa:	49 f0       	breq	.+18     	; 0x8be <DisplaySM_Tick+0x34>
     8ac:	01 97       	sbiw	r24, 0x01	; 1
     8ae:	61 f0       	breq	.+24     	; 0x8c8 <DisplaySM_Tick+0x3e>
     8b0:	48 c0       	rjmp	.+144    	; 0x942 <DisplaySM_Tick+0xb8>
     8b2:	83 30       	cpi	r24, 0x03	; 3
     8b4:	91 05       	cpc	r25, r1
     8b6:	51 f1       	breq	.+84     	; 0x90c <DisplaySM_Tick+0x82>
     8b8:	04 97       	sbiw	r24, 0x04	; 4
     8ba:	d9 f1       	breq	.+118    	; 0x932 <DisplaySM_Tick+0xa8>
     8bc:	42 c0       	rjmp	.+132    	; 0x942 <DisplaySM_Tick+0xb8>
     8be:	81 e0       	ldi	r24, 0x01	; 1
     8c0:	90 e0       	ldi	r25, 0x00	; 0
     8c2:	9a 83       	std	Y+2, r25	; 0x02
     8c4:	89 83       	std	Y+1, r24	; 0x01
     8c6:	40 c0       	rjmp	.+128    	; 0x948 <DisplaySM_Tick+0xbe>
     8c8:	80 91 63 01 	lds	r24, 0x0163	; 0x800163 <keypad_value>
     8cc:	81 33       	cpi	r24, 0x31	; 49
     8ce:	29 f4       	brne	.+10     	; 0x8da <DisplaySM_Tick+0x50>
     8d0:	82 e0       	ldi	r24, 0x02	; 2
     8d2:	90 e0       	ldi	r25, 0x00	; 0
     8d4:	9a 83       	std	Y+2, r25	; 0x02
     8d6:	89 83       	std	Y+1, r24	; 0x01
     8d8:	37 c0       	rjmp	.+110    	; 0x948 <DisplaySM_Tick+0xbe>
     8da:	36 c0       	rjmp	.+108    	; 0x948 <DisplaySM_Tick+0xbe>
     8dc:	80 91 65 01 	lds	r24, 0x0165	; 0x800165 <restart>
     8e0:	81 30       	cpi	r24, 0x01	; 1
     8e2:	29 f4       	brne	.+10     	; 0x8ee <DisplaySM_Tick+0x64>
     8e4:	83 e0       	ldi	r24, 0x03	; 3
     8e6:	90 e0       	ldi	r25, 0x00	; 0
     8e8:	9a 83       	std	Y+2, r25	; 0x02
     8ea:	89 83       	std	Y+1, r24	; 0x01
     8ec:	0e c0       	rjmp	.+28     	; 0x90a <DisplaySM_Tick+0x80>
     8ee:	80 91 66 01 	lds	r24, 0x0166	; 0x800166 <isHit>
     8f2:	88 23       	and	r24, r24
     8f4:	29 f4       	brne	.+10     	; 0x900 <DisplaySM_Tick+0x76>
     8f6:	82 e0       	ldi	r24, 0x02	; 2
     8f8:	90 e0       	ldi	r25, 0x00	; 0
     8fa:	9a 83       	std	Y+2, r25	; 0x02
     8fc:	89 83       	std	Y+1, r24	; 0x01
     8fe:	05 c0       	rjmp	.+10     	; 0x90a <DisplaySM_Tick+0x80>
     900:	83 e0       	ldi	r24, 0x03	; 3
     902:	90 e0       	ldi	r25, 0x00	; 0
     904:	9a 83       	std	Y+2, r25	; 0x02
     906:	89 83       	std	Y+1, r24	; 0x01
     908:	1f c0       	rjmp	.+62     	; 0x948 <DisplaySM_Tick+0xbe>
     90a:	1e c0       	rjmp	.+60     	; 0x948 <DisplaySM_Tick+0xbe>
     90c:	80 91 be 01 	lds	r24, 0x01BE	; 0x8001be <deathAni>
     910:	85 30       	cpi	r24, 0x05	; 5
     912:	50 f4       	brcc	.+20     	; 0x928 <DisplaySM_Tick+0x9e>
     914:	83 e0       	ldi	r24, 0x03	; 3
     916:	90 e0       	ldi	r25, 0x00	; 0
     918:	9a 83       	std	Y+2, r25	; 0x02
     91a:	89 83       	std	Y+1, r24	; 0x01
     91c:	80 91 be 01 	lds	r24, 0x01BE	; 0x8001be <deathAni>
     920:	8f 5f       	subi	r24, 0xFF	; 255
     922:	80 93 be 01 	sts	0x01BE, r24	; 0x8001be <deathAni>
     926:	10 c0       	rjmp	.+32     	; 0x948 <DisplaySM_Tick+0xbe>
     928:	84 e0       	ldi	r24, 0x04	; 4
     92a:	90 e0       	ldi	r25, 0x00	; 0
     92c:	9a 83       	std	Y+2, r25	; 0x02
     92e:	89 83       	std	Y+1, r24	; 0x01
     930:	0b c0       	rjmp	.+22     	; 0x948 <DisplaySM_Tick+0xbe>
     932:	80 91 63 01 	lds	r24, 0x0163	; 0x800163 <keypad_value>
     936:	81 33       	cpi	r24, 0x31	; 49
     938:	19 f4       	brne	.+6      	; 0x940 <DisplaySM_Tick+0xb6>
     93a:	1a 82       	std	Y+2, r1	; 0x02
     93c:	19 82       	std	Y+1, r1	; 0x01
     93e:	04 c0       	rjmp	.+8      	; 0x948 <DisplaySM_Tick+0xbe>
     940:	03 c0       	rjmp	.+6      	; 0x948 <DisplaySM_Tick+0xbe>
     942:	1a 82       	std	Y+2, r1	; 0x02
     944:	19 82       	std	Y+1, r1	; 0x01
     946:	00 00       	nop
     948:	89 81       	ldd	r24, Y+1	; 0x01
     94a:	9a 81       	ldd	r25, Y+2	; 0x02
     94c:	82 30       	cpi	r24, 0x02	; 2
     94e:	91 05       	cpc	r25, r1
     950:	09 f1       	breq	.+66     	; 0x994 <DisplaySM_Tick+0x10a>
     952:	83 30       	cpi	r24, 0x03	; 3
     954:	91 05       	cpc	r25, r1
     956:	2c f4       	brge	.+10     	; 0x962 <DisplaySM_Tick+0xd8>
     958:	00 97       	sbiw	r24, 0x00	; 0
     95a:	51 f0       	breq	.+20     	; 0x970 <DisplaySM_Tick+0xe6>
     95c:	01 97       	sbiw	r24, 0x01	; 1
     95e:	a1 f0       	breq	.+40     	; 0x988 <DisplaySM_Tick+0xfe>
     960:	59 c0       	rjmp	.+178    	; 0xa14 <DisplaySM_Tick+0x18a>
     962:	83 30       	cpi	r24, 0x03	; 3
     964:	91 05       	cpc	r25, r1
     966:	91 f1       	breq	.+100    	; 0x9cc <DisplaySM_Tick+0x142>
     968:	04 97       	sbiw	r24, 0x04	; 4
     96a:	09 f4       	brne	.+2      	; 0x96e <DisplaySM_Tick+0xe4>
     96c:	48 c0       	rjmp	.+144    	; 0x9fe <DisplaySM_Tick+0x174>
     96e:	52 c0       	rjmp	.+164    	; 0xa14 <DisplaySM_Tick+0x18a>
     970:	10 92 66 01 	sts	0x0166, r1	; 0x800166 <isHit>
     974:	80 e1       	ldi	r24, 0x10	; 16
     976:	80 93 2b 01 	sts	0x012B, r24	; 0x80012b <playerPosition>
     97a:	10 92 7e 01 	sts	0x017E, r1	; 0x80017e <task3>
     97e:	10 92 65 01 	sts	0x0165, r1	; 0x800165 <restart>
     982:	10 92 63 01 	sts	0x0163, r1	; 0x800163 <keypad_value>
     986:	46 c0       	rjmp	.+140    	; 0xa14 <DisplaySM_Tick+0x18a>
     988:	a0 db       	rcall	.-2240   	; 0xca <LCD_ClearScreen>
     98a:	6b e3       	ldi	r22, 0x3B	; 59
     98c:	71 e0       	ldi	r23, 0x01	; 1
     98e:	81 e0       	ldi	r24, 0x01	; 1
     990:	16 dc       	rcall	.-2004   	; 0x1be <LCD_DisplayString>
     992:	40 c0       	rjmp	.+128    	; 0xa14 <DisplaySM_Tick+0x18a>
     994:	81 e0       	ldi	r24, 0x01	; 1
     996:	80 93 64 01 	sts	0x0164, r24	; 0x800164 <beginGenerate>
     99a:	97 db       	rcall	.-2258   	; 0xca <LCD_ClearScreen>
     99c:	68 e0       	ldi	r22, 0x08	; 8
     99e:	71 e0       	ldi	r23, 0x01	; 1
     9a0:	81 e0       	ldi	r24, 0x01	; 1
     9a2:	0d dc       	rcall	.-2022   	; 0x1be <LCD_DisplayString>
     9a4:	69 e1       	ldi	r22, 0x19	; 25
     9a6:	71 e0       	ldi	r23, 0x01	; 1
     9a8:	81 e1       	ldi	r24, 0x11	; 17
     9aa:	09 dc       	rcall	.-2030   	; 0x1be <LCD_DisplayString>
     9ac:	80 91 67 01 	lds	r24, 0x0167	; 0x800167 <bullet>
     9b0:	81 30       	cpi	r24, 0x01	; 1
     9b2:	29 f4       	brne	.+10     	; 0x9be <DisplaySM_Tick+0x134>
     9b4:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <bulletPos>
     9b8:	2a dc       	rcall	.-1964   	; 0x20e <LCD_Cursor>
     9ba:	8d e2       	ldi	r24, 0x2D	; 45
     9bc:	d2 db       	rcall	.-2140   	; 0x162 <LCD_WriteData>
     9be:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <playerPosition>
     9c2:	25 dc       	rcall	.-1974   	; 0x20e <LCD_Cursor>
     9c4:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <playerIcon>
     9c8:	cc db       	rcall	.-2152   	; 0x162 <LCD_WriteData>
     9ca:	24 c0       	rjmp	.+72     	; 0xa14 <DisplaySM_Tick+0x18a>
     9cc:	10 92 64 01 	sts	0x0164, r1	; 0x800164 <beginGenerate>
     9d0:	7c db       	rcall	.-2312   	; 0xca <LCD_ClearScreen>
     9d2:	68 e0       	ldi	r22, 0x08	; 8
     9d4:	71 e0       	ldi	r23, 0x01	; 1
     9d6:	81 e0       	ldi	r24, 0x01	; 1
     9d8:	f2 db       	rcall	.-2076   	; 0x1be <LCD_DisplayString>
     9da:	69 e1       	ldi	r22, 0x19	; 25
     9dc:	71 e0       	ldi	r23, 0x01	; 1
     9de:	81 e1       	ldi	r24, 0x11	; 17
     9e0:	ee db       	rcall	.-2084   	; 0x1be <LCD_DisplayString>
     9e2:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <playerPosition>
     9e6:	13 dc       	rcall	.-2010   	; 0x20e <LCD_Cursor>
     9e8:	80 91 be 01 	lds	r24, 0x01BE	; 0x8001be <deathAni>
     9ec:	81 70       	andi	r24, 0x01	; 1
     9ee:	88 23       	and	r24, r24
     9f0:	19 f4       	brne	.+6      	; 0x9f8 <DisplaySM_Tick+0x16e>
     9f2:	88 e5       	ldi	r24, 0x58	; 88
     9f4:	b6 db       	rcall	.-2196   	; 0x162 <LCD_WriteData>
     9f6:	0e c0       	rjmp	.+28     	; 0xa14 <DisplaySM_Tick+0x18a>
     9f8:	8b ed       	ldi	r24, 0xDB	; 219
     9fa:	b3 db       	rcall	.-2202   	; 0x162 <LCD_WriteData>
     9fc:	0b c0       	rjmp	.+22     	; 0xa14 <DisplaySM_Tick+0x18a>
     9fe:	10 92 be 01 	sts	0x01BE, r1	; 0x8001be <deathAni>
     a02:	63 db       	rcall	.-2362   	; 0xca <LCD_ClearScreen>
     a04:	6c e4       	ldi	r22, 0x4C	; 76
     a06:	71 e0       	ldi	r23, 0x01	; 1
     a08:	81 e0       	ldi	r24, 0x01	; 1
     a0a:	d9 db       	rcall	.-2126   	; 0x1be <LCD_DisplayString>
     a0c:	81 e0       	ldi	r24, 0x01	; 1
     a0e:	80 93 65 01 	sts	0x0165, r24	; 0x800165 <restart>
     a12:	00 00       	nop
     a14:	89 81       	ldd	r24, Y+1	; 0x01
     a16:	9a 81       	ldd	r25, Y+2	; 0x02
     a18:	0f 90       	pop	r0
     a1a:	0f 90       	pop	r0
     a1c:	df 91       	pop	r29
     a1e:	cf 91       	pop	r28
     a20:	08 95       	ret

00000a22 <Movement_Tick>:
     a22:	cf 93       	push	r28
     a24:	df 93       	push	r29
     a26:	00 d0       	rcall	.+0      	; 0xa28 <Movement_Tick+0x6>
     a28:	cd b7       	in	r28, 0x3d	; 61
     a2a:	de b7       	in	r29, 0x3e	; 62
     a2c:	9a 83       	std	Y+2, r25	; 0x02
     a2e:	89 83       	std	Y+1, r24	; 0x01
     a30:	63 dd       	rcall	.-1338   	; 0x4f8 <GetKeypadKey>
     a32:	80 93 63 01 	sts	0x0163, r24	; 0x800163 <keypad_value>
     a36:	89 81       	ldd	r24, Y+1	; 0x01
     a38:	9a 81       	ldd	r25, Y+2	; 0x02
     a3a:	81 30       	cpi	r24, 0x01	; 1
     a3c:	91 05       	cpc	r25, r1
     a3e:	89 f0       	breq	.+34     	; 0xa62 <Movement_Tick+0x40>
     a40:	82 30       	cpi	r24, 0x02	; 2
     a42:	91 05       	cpc	r25, r1
     a44:	1c f4       	brge	.+6      	; 0xa4c <Movement_Tick+0x2a>
     a46:	89 2b       	or	r24, r25
     a48:	39 f0       	breq	.+14     	; 0xa58 <Movement_Tick+0x36>
     a4a:	24 c0       	rjmp	.+72     	; 0xa94 <Movement_Tick+0x72>
     a4c:	82 30       	cpi	r24, 0x02	; 2
     a4e:	91 05       	cpc	r25, r1
     a50:	91 f0       	breq	.+36     	; 0xa76 <Movement_Tick+0x54>
     a52:	03 97       	sbiw	r24, 0x03	; 3
     a54:	a9 f0       	breq	.+42     	; 0xa80 <Movement_Tick+0x5e>
     a56:	1e c0       	rjmp	.+60     	; 0xa94 <Movement_Tick+0x72>
     a58:	81 e0       	ldi	r24, 0x01	; 1
     a5a:	90 e0       	ldi	r25, 0x00	; 0
     a5c:	9a 83       	std	Y+2, r25	; 0x02
     a5e:	89 83       	std	Y+1, r24	; 0x01
     a60:	1c c0       	rjmp	.+56     	; 0xa9a <Movement_Tick+0x78>
     a62:	80 91 63 01 	lds	r24, 0x0163	; 0x800163 <keypad_value>
     a66:	88 23       	and	r24, r24
     a68:	29 f0       	breq	.+10     	; 0xa74 <Movement_Tick+0x52>
     a6a:	82 e0       	ldi	r24, 0x02	; 2
     a6c:	90 e0       	ldi	r25, 0x00	; 0
     a6e:	9a 83       	std	Y+2, r25	; 0x02
     a70:	89 83       	std	Y+1, r24	; 0x01
     a72:	13 c0       	rjmp	.+38     	; 0xa9a <Movement_Tick+0x78>
     a74:	12 c0       	rjmp	.+36     	; 0xa9a <Movement_Tick+0x78>
     a76:	83 e0       	ldi	r24, 0x03	; 3
     a78:	90 e0       	ldi	r25, 0x00	; 0
     a7a:	9a 83       	std	Y+2, r25	; 0x02
     a7c:	89 83       	std	Y+1, r24	; 0x01
     a7e:	0d c0       	rjmp	.+26     	; 0xa9a <Movement_Tick+0x78>
     a80:	80 91 63 01 	lds	r24, 0x0163	; 0x800163 <keypad_value>
     a84:	88 23       	and	r24, r24
     a86:	29 f4       	brne	.+10     	; 0xa92 <Movement_Tick+0x70>
     a88:	81 e0       	ldi	r24, 0x01	; 1
     a8a:	90 e0       	ldi	r25, 0x00	; 0
     a8c:	9a 83       	std	Y+2, r25	; 0x02
     a8e:	89 83       	std	Y+1, r24	; 0x01
     a90:	04 c0       	rjmp	.+8      	; 0xa9a <Movement_Tick+0x78>
     a92:	03 c0       	rjmp	.+6      	; 0xa9a <Movement_Tick+0x78>
     a94:	1a 82       	std	Y+2, r1	; 0x02
     a96:	19 82       	std	Y+1, r1	; 0x01
     a98:	00 00       	nop
     a9a:	89 81       	ldd	r24, Y+1	; 0x01
     a9c:	9a 81       	ldd	r25, Y+2	; 0x02
     a9e:	81 30       	cpi	r24, 0x01	; 1
     aa0:	91 05       	cpc	r25, r1
     aa2:	a9 f1       	breq	.+106    	; 0xb0e <Movement_Tick+0xec>
     aa4:	82 30       	cpi	r24, 0x02	; 2
     aa6:	91 05       	cpc	r25, r1
     aa8:	1c f4       	brge	.+6      	; 0xab0 <Movement_Tick+0x8e>
     aaa:	89 2b       	or	r24, r25
     aac:	91 f1       	breq	.+100    	; 0xb12 <Movement_Tick+0xf0>
     aae:	34 c0       	rjmp	.+104    	; 0xb18 <Movement_Tick+0xf6>
     ab0:	82 30       	cpi	r24, 0x02	; 2
     ab2:	91 05       	cpc	r25, r1
     ab4:	19 f0       	breq	.+6      	; 0xabc <Movement_Tick+0x9a>
     ab6:	03 97       	sbiw	r24, 0x03	; 3
     ab8:	71 f1       	breq	.+92     	; 0xb16 <Movement_Tick+0xf4>
     aba:	2e c0       	rjmp	.+92     	; 0xb18 <Movement_Tick+0xf6>
     abc:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <playerPosition>
     ac0:	80 31       	cpi	r24, 0x10	; 16
     ac2:	39 f4       	brne	.+14     	; 0xad2 <Movement_Tick+0xb0>
     ac4:	80 91 63 01 	lds	r24, 0x0163	; 0x800163 <keypad_value>
     ac8:	83 34       	cpi	r24, 0x43	; 67
     aca:	19 f4       	brne	.+6      	; 0xad2 <Movement_Tick+0xb0>
     acc:	80 e2       	ldi	r24, 0x20	; 32
     ace:	80 93 2b 01 	sts	0x012B, r24	; 0x80012b <playerPosition>
     ad2:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <playerPosition>
     ad6:	80 32       	cpi	r24, 0x20	; 32
     ad8:	39 f4       	brne	.+14     	; 0xae8 <Movement_Tick+0xc6>
     ada:	80 91 63 01 	lds	r24, 0x0163	; 0x800163 <keypad_value>
     ade:	82 34       	cpi	r24, 0x42	; 66
     ae0:	19 f4       	brne	.+6      	; 0xae8 <Movement_Tick+0xc6>
     ae2:	80 e1       	ldi	r24, 0x10	; 16
     ae4:	80 93 2b 01 	sts	0x012B, r24	; 0x80012b <playerPosition>
     ae8:	80 91 63 01 	lds	r24, 0x0163	; 0x800163 <keypad_value>
     aec:	81 33       	cpi	r24, 0x31	; 49
     aee:	49 f4       	brne	.+18     	; 0xb02 <Movement_Tick+0xe0>
     af0:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <debounce>
     af4:	86 30       	cpi	r24, 0x06	; 6
     af6:	28 f0       	brcs	.+10     	; 0xb02 <Movement_Tick+0xe0>
     af8:	81 e0       	ldi	r24, 0x01	; 1
     afa:	80 93 65 01 	sts	0x0165, r24	; 0x800165 <restart>
     afe:	10 92 aa 01 	sts	0x01AA, r1	; 0x8001aa <debounce>
     b02:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <debounce>
     b06:	8f 5f       	subi	r24, 0xFF	; 255
     b08:	80 93 aa 01 	sts	0x01AA, r24	; 0x8001aa <debounce>
     b0c:	05 c0       	rjmp	.+10     	; 0xb18 <Movement_Tick+0xf6>
     b0e:	00 00       	nop
     b10:	03 c0       	rjmp	.+6      	; 0xb18 <Movement_Tick+0xf6>
     b12:	00 00       	nop
     b14:	01 c0       	rjmp	.+2      	; 0xb18 <Movement_Tick+0xf6>
     b16:	00 00       	nop
     b18:	89 81       	ldd	r24, Y+1	; 0x01
     b1a:	9a 81       	ldd	r25, Y+2	; 0x02
     b1c:	0f 90       	pop	r0
     b1e:	0f 90       	pop	r0
     b20:	df 91       	pop	r29
     b22:	cf 91       	pop	r28
     b24:	08 95       	ret

00000b26 <Collision_Tick>:
     b26:	cf 93       	push	r28
     b28:	df 93       	push	r29
     b2a:	00 d0       	rcall	.+0      	; 0xb2c <Collision_Tick+0x6>
     b2c:	cd b7       	in	r28, 0x3d	; 61
     b2e:	de b7       	in	r29, 0x3e	; 62
     b30:	9a 83       	std	Y+2, r25	; 0x02
     b32:	89 83       	std	Y+1, r24	; 0x01
     b34:	89 81       	ldd	r24, Y+1	; 0x01
     b36:	9a 81       	ldd	r25, Y+2	; 0x02
     b38:	00 97       	sbiw	r24, 0x00	; 0
     b3a:	19 f0       	breq	.+6      	; 0xb42 <Collision_Tick+0x1c>
     b3c:	01 97       	sbiw	r24, 0x01	; 1
     b3e:	31 f0       	breq	.+12     	; 0xb4c <Collision_Tick+0x26>
     b40:	0a c0       	rjmp	.+20     	; 0xb56 <Collision_Tick+0x30>
     b42:	81 e0       	ldi	r24, 0x01	; 1
     b44:	90 e0       	ldi	r25, 0x00	; 0
     b46:	9a 83       	std	Y+2, r25	; 0x02
     b48:	89 83       	std	Y+1, r24	; 0x01
     b4a:	08 c0       	rjmp	.+16     	; 0xb5c <Collision_Tick+0x36>
     b4c:	81 e0       	ldi	r24, 0x01	; 1
     b4e:	90 e0       	ldi	r25, 0x00	; 0
     b50:	9a 83       	std	Y+2, r25	; 0x02
     b52:	89 83       	std	Y+1, r24	; 0x01
     b54:	03 c0       	rjmp	.+6      	; 0xb5c <Collision_Tick+0x36>
     b56:	1a 82       	std	Y+2, r1	; 0x02
     b58:	19 82       	std	Y+1, r1	; 0x01
     b5a:	00 00       	nop
     b5c:	89 81       	ldd	r24, Y+1	; 0x01
     b5e:	9a 81       	ldd	r25, Y+2	; 0x02
     b60:	00 97       	sbiw	r24, 0x00	; 0
     b62:	19 f0       	breq	.+6      	; 0xb6a <Collision_Tick+0x44>
     b64:	01 97       	sbiw	r24, 0x01	; 1
     b66:	21 f0       	breq	.+8      	; 0xb70 <Collision_Tick+0x4a>
     b68:	76 c0       	rjmp	.+236    	; 0xc56 <Collision_Tick+0x130>
     b6a:	10 92 66 01 	sts	0x0166, r1	; 0x800166 <isHit>
     b6e:	73 c0       	rjmp	.+230    	; 0xc56 <Collision_Tick+0x130>
     b70:	80 91 67 01 	lds	r24, 0x0167	; 0x800167 <bullet>
     b74:	81 30       	cpi	r24, 0x01	; 1
     b76:	09 f0       	breq	.+2      	; 0xb7a <Collision_Tick+0x54>
     b78:	4d c0       	rjmp	.+154    	; 0xc14 <Collision_Tick+0xee>
     b7a:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <bulletPos>
     b7e:	80 31       	cpi	r24, 0x10	; 16
     b80:	18 f5       	brcc	.+70     	; 0xbc8 <Collision_Tick+0xa2>
     b82:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <bulletPos>
     b86:	88 2f       	mov	r24, r24
     b88:	90 e0       	ldi	r25, 0x00	; 0
     b8a:	01 97       	sbiw	r24, 0x01	; 1
     b8c:	88 5f       	subi	r24, 0xF8	; 248
     b8e:	9e 4f       	sbci	r25, 0xFE	; 254
     b90:	fc 01       	movw	r30, r24
     b92:	80 81       	ld	r24, Z
     b94:	8a 32       	cpi	r24, 0x2A	; 42
     b96:	59 f0       	breq	.+22     	; 0xbae <Collision_Tick+0x88>
     b98:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <bulletPos>
     b9c:	88 2f       	mov	r24, r24
     b9e:	90 e0       	ldi	r25, 0x00	; 0
     ba0:	01 97       	sbiw	r24, 0x01	; 1
     ba2:	88 5f       	subi	r24, 0xF8	; 248
     ba4:	9e 4f       	sbci	r25, 0xFE	; 254
     ba6:	fc 01       	movw	r30, r24
     ba8:	80 81       	ld	r24, Z
     baa:	83 32       	cpi	r24, 0x23	; 35
     bac:	69 f4       	brne	.+26     	; 0xbc8 <Collision_Tick+0xa2>
     bae:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <bulletPos>
     bb2:	88 2f       	mov	r24, r24
     bb4:	90 e0       	ldi	r25, 0x00	; 0
     bb6:	01 97       	sbiw	r24, 0x01	; 1
     bb8:	88 5f       	subi	r24, 0xF8	; 248
     bba:	9e 4f       	sbci	r25, 0xFE	; 254
     bbc:	20 e2       	ldi	r18, 0x20	; 32
     bbe:	fc 01       	movw	r30, r24
     bc0:	20 83       	st	Z, r18
     bc2:	10 92 67 01 	sts	0x0167, r1	; 0x800167 <bullet>
     bc6:	26 c0       	rjmp	.+76     	; 0xc14 <Collision_Tick+0xee>
     bc8:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <bulletPos>
     bcc:	80 32       	cpi	r24, 0x20	; 32
     bce:	10 f5       	brcc	.+68     	; 0xc14 <Collision_Tick+0xee>
     bd0:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <bulletPos>
     bd4:	88 2f       	mov	r24, r24
     bd6:	90 e0       	ldi	r25, 0x00	; 0
     bd8:	41 97       	sbiw	r24, 0x11	; 17
     bda:	87 5e       	subi	r24, 0xE7	; 231
     bdc:	9e 4f       	sbci	r25, 0xFE	; 254
     bde:	fc 01       	movw	r30, r24
     be0:	80 81       	ld	r24, Z
     be2:	8a 32       	cpi	r24, 0x2A	; 42
     be4:	59 f0       	breq	.+22     	; 0xbfc <Collision_Tick+0xd6>
     be6:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <bulletPos>
     bea:	88 2f       	mov	r24, r24
     bec:	90 e0       	ldi	r25, 0x00	; 0
     bee:	41 97       	sbiw	r24, 0x11	; 17
     bf0:	87 5e       	subi	r24, 0xE7	; 231
     bf2:	9e 4f       	sbci	r25, 0xFE	; 254
     bf4:	fc 01       	movw	r30, r24
     bf6:	80 81       	ld	r24, Z
     bf8:	83 32       	cpi	r24, 0x23	; 35
     bfa:	61 f4       	brne	.+24     	; 0xc14 <Collision_Tick+0xee>
     bfc:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <bulletPos>
     c00:	88 2f       	mov	r24, r24
     c02:	90 e0       	ldi	r25, 0x00	; 0
     c04:	41 97       	sbiw	r24, 0x11	; 17
     c06:	87 5e       	subi	r24, 0xE7	; 231
     c08:	9e 4f       	sbci	r25, 0xFE	; 254
     c0a:	20 e2       	ldi	r18, 0x20	; 32
     c0c:	fc 01       	movw	r30, r24
     c0e:	20 83       	st	Z, r18
     c10:	10 92 67 01 	sts	0x0167, r1	; 0x800167 <bullet>
     c14:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <playerPosition>
     c18:	80 31       	cpi	r24, 0x10	; 16
     c1a:	61 f4       	brne	.+24     	; 0xc34 <Collision_Tick+0x10e>
     c1c:	80 91 17 01 	lds	r24, 0x0117	; 0x800117 <row1+0xf>
     c20:	80 32       	cpi	r24, 0x20	; 32
     c22:	41 f0       	breq	.+16     	; 0xc34 <Collision_Tick+0x10e>
     c24:	80 91 17 01 	lds	r24, 0x0117	; 0x800117 <row1+0xf>
     c28:	88 23       	and	r24, r24
     c2a:	21 f0       	breq	.+8      	; 0xc34 <Collision_Tick+0x10e>
     c2c:	81 e0       	ldi	r24, 0x01	; 1
     c2e:	80 93 66 01 	sts	0x0166, r24	; 0x800166 <isHit>
     c32:	10 c0       	rjmp	.+32     	; 0xc54 <Collision_Tick+0x12e>
     c34:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <playerPosition>
     c38:	80 32       	cpi	r24, 0x20	; 32
     c3a:	61 f4       	brne	.+24     	; 0xc54 <Collision_Tick+0x12e>
     c3c:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <row2+0xf>
     c40:	80 32       	cpi	r24, 0x20	; 32
     c42:	41 f0       	breq	.+16     	; 0xc54 <Collision_Tick+0x12e>
     c44:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <row2+0xf>
     c48:	88 23       	and	r24, r24
     c4a:	21 f0       	breq	.+8      	; 0xc54 <Collision_Tick+0x12e>
     c4c:	81 e0       	ldi	r24, 0x01	; 1
     c4e:	80 93 66 01 	sts	0x0166, r24	; 0x800166 <isHit>
     c52:	00 c0       	rjmp	.+0      	; 0xc54 <Collision_Tick+0x12e>
     c54:	00 00       	nop
     c56:	89 81       	ldd	r24, Y+1	; 0x01
     c58:	9a 81       	ldd	r25, Y+2	; 0x02
     c5a:	0f 90       	pop	r0
     c5c:	0f 90       	pop	r0
     c5e:	df 91       	pop	r29
     c60:	cf 91       	pop	r28
     c62:	08 95       	ret

00000c64 <LevelProgression_Tick>:
     c64:	cf 93       	push	r28
     c66:	df 93       	push	r29
     c68:	00 d0       	rcall	.+0      	; 0xc6a <LevelProgression_Tick+0x6>
     c6a:	cd b7       	in	r28, 0x3d	; 61
     c6c:	de b7       	in	r29, 0x3e	; 62
     c6e:	9a 83       	std	Y+2, r25	; 0x02
     c70:	89 83       	std	Y+1, r24	; 0x01
     c72:	89 81       	ldd	r24, Y+1	; 0x01
     c74:	9a 81       	ldd	r25, Y+2	; 0x02
     c76:	00 97       	sbiw	r24, 0x00	; 0
     c78:	19 f0       	breq	.+6      	; 0xc80 <LevelProgression_Tick+0x1c>
     c7a:	01 97       	sbiw	r24, 0x01	; 1
     c7c:	59 f0       	breq	.+22     	; 0xc94 <LevelProgression_Tick+0x30>
     c7e:	12 c0       	rjmp	.+36     	; 0xca4 <LevelProgression_Tick+0x40>
     c80:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <beginGenerate>
     c84:	81 30       	cpi	r24, 0x01	; 1
     c86:	29 f4       	brne	.+10     	; 0xc92 <LevelProgression_Tick+0x2e>
     c88:	81 e0       	ldi	r24, 0x01	; 1
     c8a:	90 e0       	ldi	r25, 0x00	; 0
     c8c:	9a 83       	std	Y+2, r25	; 0x02
     c8e:	89 83       	std	Y+1, r24	; 0x01
     c90:	0c c0       	rjmp	.+24     	; 0xcaa <LevelProgression_Tick+0x46>
     c92:	0b c0       	rjmp	.+22     	; 0xcaa <LevelProgression_Tick+0x46>
     c94:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <beginGenerate>
     c98:	88 23       	and	r24, r24
     c9a:	19 f4       	brne	.+6      	; 0xca2 <LevelProgression_Tick+0x3e>
     c9c:	1a 82       	std	Y+2, r1	; 0x02
     c9e:	19 82       	std	Y+1, r1	; 0x01
     ca0:	04 c0       	rjmp	.+8      	; 0xcaa <LevelProgression_Tick+0x46>
     ca2:	03 c0       	rjmp	.+6      	; 0xcaa <LevelProgression_Tick+0x46>
     ca4:	1a 82       	std	Y+2, r1	; 0x02
     ca6:	19 82       	std	Y+1, r1	; 0x01
     ca8:	00 00       	nop
     caa:	89 81       	ldd	r24, Y+1	; 0x01
     cac:	9a 81       	ldd	r25, Y+2	; 0x02
     cae:	00 97       	sbiw	r24, 0x00	; 0
     cb0:	19 f0       	breq	.+6      	; 0xcb8 <LevelProgression_Tick+0x54>
     cb2:	01 97       	sbiw	r24, 0x01	; 1
     cb4:	29 f0       	breq	.+10     	; 0xcc0 <LevelProgression_Tick+0x5c>
     cb6:	0f c0       	rjmp	.+30     	; 0xcd6 <LevelProgression_Tick+0x72>
     cb8:	84 e1       	ldi	r24, 0x14	; 20
     cba:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <object_generate_prob>
     cbe:	0b c0       	rjmp	.+22     	; 0xcd6 <LevelProgression_Tick+0x72>
     cc0:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <object_generate_prob>
     cc4:	83 30       	cpi	r24, 0x03	; 3
     cc6:	30 f0       	brcs	.+12     	; 0xcd4 <LevelProgression_Tick+0x70>
     cc8:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <object_generate_prob>
     ccc:	81 50       	subi	r24, 0x01	; 1
     cce:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <object_generate_prob>
     cd2:	00 c0       	rjmp	.+0      	; 0xcd4 <LevelProgression_Tick+0x70>
     cd4:	00 00       	nop
     cd6:	89 81       	ldd	r24, Y+1	; 0x01
     cd8:	9a 81       	ldd	r25, Y+2	; 0x02
     cda:	0f 90       	pop	r0
     cdc:	0f 90       	pop	r0
     cde:	df 91       	pop	r29
     ce0:	cf 91       	pop	r28
     ce2:	08 95       	ret

00000ce4 <FiringMech_Tick>:

enum FiringMechSM {FM_start, FM_wait, FM_trigger, FM_release} FiringMechSM;

int FiringMech_Tick(int state) 
{
     ce4:	cf 93       	push	r28
     ce6:	df 93       	push	r29
     ce8:	00 d0       	rcall	.+0      	; 0xcea <FiringMech_Tick+0x6>
     cea:	cd b7       	in	r28, 0x3d	; 61
     cec:	de b7       	in	r29, 0x3e	; 62
     cee:	9a 83       	std	Y+2, r25	; 0x02
     cf0:	89 83       	std	Y+1, r24	; 0x01
	switch(state)
     cf2:	89 81       	ldd	r24, Y+1	; 0x01
     cf4:	9a 81       	ldd	r25, Y+2	; 0x02
     cf6:	81 30       	cpi	r24, 0x01	; 1
     cf8:	91 05       	cpc	r25, r1
     cfa:	89 f0       	breq	.+34     	; 0xd1e <FiringMech_Tick+0x3a>
     cfc:	82 30       	cpi	r24, 0x02	; 2
     cfe:	91 05       	cpc	r25, r1
     d00:	1c f4       	brge	.+6      	; 0xd08 <FiringMech_Tick+0x24>
     d02:	89 2b       	or	r24, r25
     d04:	39 f0       	breq	.+14     	; 0xd14 <FiringMech_Tick+0x30>
     d06:	24 c0       	rjmp	.+72     	; 0xd50 <FiringMech_Tick+0x6c>
     d08:	82 30       	cpi	r24, 0x02	; 2
     d0a:	91 05       	cpc	r25, r1
     d0c:	91 f0       	breq	.+36     	; 0xd32 <FiringMech_Tick+0x4e>
     d0e:	03 97       	sbiw	r24, 0x03	; 3
     d10:	a9 f0       	breq	.+42     	; 0xd3c <FiringMech_Tick+0x58>
     d12:	1e c0       	rjmp	.+60     	; 0xd50 <FiringMech_Tick+0x6c>
	{
		case FM_start:
			state = FM_wait;
     d14:	81 e0       	ldi	r24, 0x01	; 1
     d16:	90 e0       	ldi	r25, 0x00	; 0
     d18:	9a 83       	std	Y+2, r25	; 0x02
     d1a:	89 83       	std	Y+1, r24	; 0x01
		break;
     d1c:	1c c0       	rjmp	.+56     	; 0xd56 <FiringMech_Tick+0x72>
		
		case FM_wait:
			if (keypad_value == 'D')
     d1e:	80 91 63 01 	lds	r24, 0x0163	; 0x800163 <keypad_value>
     d22:	84 34       	cpi	r24, 0x44	; 68
     d24:	29 f4       	brne	.+10     	; 0xd30 <FiringMech_Tick+0x4c>
			{
				state = FM_trigger;
     d26:	82 e0       	ldi	r24, 0x02	; 2
     d28:	90 e0       	ldi	r25, 0x00	; 0
     d2a:	9a 83       	std	Y+2, r25	; 0x02
     d2c:	89 83       	std	Y+1, r24	; 0x01
			}
		break;
     d2e:	13 c0       	rjmp	.+38     	; 0xd56 <FiringMech_Tick+0x72>
     d30:	12 c0       	rjmp	.+36     	; 0xd56 <FiringMech_Tick+0x72>
		
		case FM_trigger:
			state = FM_release;
     d32:	83 e0       	ldi	r24, 0x03	; 3
     d34:	90 e0       	ldi	r25, 0x00	; 0
     d36:	9a 83       	std	Y+2, r25	; 0x02
     d38:	89 83       	std	Y+1, r24	; 0x01
		break;
     d3a:	0d c0       	rjmp	.+26     	; 0xd56 <FiringMech_Tick+0x72>
		
		case FM_release:
			if (keypad_value != 'D')
     d3c:	80 91 63 01 	lds	r24, 0x0163	; 0x800163 <keypad_value>
     d40:	84 34       	cpi	r24, 0x44	; 68
     d42:	29 f0       	breq	.+10     	; 0xd4e <FiringMech_Tick+0x6a>
			{
				state = FM_wait;
     d44:	81 e0       	ldi	r24, 0x01	; 1
     d46:	90 e0       	ldi	r25, 0x00	; 0
     d48:	9a 83       	std	Y+2, r25	; 0x02
     d4a:	89 83       	std	Y+1, r24	; 0x01
			}
		break;
     d4c:	04 c0       	rjmp	.+8      	; 0xd56 <FiringMech_Tick+0x72>
     d4e:	03 c0       	rjmp	.+6      	; 0xd56 <FiringMech_Tick+0x72>
		
		default:
			state = FM_start;
     d50:	1a 82       	std	Y+2, r1	; 0x02
     d52:	19 82       	std	Y+1, r1	; 0x01
		break;
     d54:	00 00       	nop
	}
	
	switch(state)
     d56:	89 81       	ldd	r24, Y+1	; 0x01
     d58:	9a 81       	ldd	r25, Y+2	; 0x02
     d5a:	81 30       	cpi	r24, 0x01	; 1
     d5c:	91 05       	cpc	r25, r1
     d5e:	61 f0       	breq	.+24     	; 0xd78 <FiringMech_Tick+0x94>
     d60:	82 30       	cpi	r24, 0x02	; 2
     d62:	91 05       	cpc	r25, r1
     d64:	1c f4       	brge	.+6      	; 0xd6c <FiringMech_Tick+0x88>
     d66:	89 2b       	or	r24, r25
     d68:	d9 f0       	breq	.+54     	; 0xda0 <FiringMech_Tick+0xbc>
		
		case FM_release:
			//bullet = 0;
		break;
		
		default: break;
     d6a:	1d c0       	rjmp	.+58     	; 0xda6 <FiringMech_Tick+0xc2>
		default:
			state = FM_start;
		break;
	}
	
	switch(state)
     d6c:	82 30       	cpi	r24, 0x02	; 2
     d6e:	91 05       	cpc	r25, r1
     d70:	71 f0       	breq	.+28     	; 0xd8e <FiringMech_Tick+0xaa>
     d72:	03 97       	sbiw	r24, 0x03	; 3
     d74:	b9 f0       	breq	.+46     	; 0xda4 <FiringMech_Tick+0xc0>
		
		case FM_release:
			//bullet = 0;
		break;
		
		default: break;
     d76:	17 c0       	rjmp	.+46     	; 0xda6 <FiringMech_Tick+0xc2>
	switch(state)
	{
		case FM_start: break;
		
		case FM_wait: 
			if (bulletPos > 0)
     d78:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <bulletPos>
     d7c:	88 23       	and	r24, r24
     d7e:	31 f0       	breq	.+12     	; 0xd8c <FiringMech_Tick+0xa8>
			{
				bulletPos--;
     d80:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <bulletPos>
     d84:	81 50       	subi	r24, 0x01	; 1
     d86:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <bulletPos>
			}
		break;
     d8a:	0d c0       	rjmp	.+26     	; 0xda6 <FiringMech_Tick+0xc2>
     d8c:	0c c0       	rjmp	.+24     	; 0xda6 <FiringMech_Tick+0xc2>
		
		case FM_trigger:
			bullet = 1;
     d8e:	81 e0       	ldi	r24, 0x01	; 1
     d90:	80 93 67 01 	sts	0x0167, r24	; 0x800167 <bullet>
			
			bulletPos = playerPosition - 1;
     d94:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <playerPosition>
     d98:	81 50       	subi	r24, 0x01	; 1
     d9a:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <bulletPos>
			
		break;
     d9e:	03 c0       	rjmp	.+6      	; 0xda6 <FiringMech_Tick+0xc2>
		break;
	}
	
	switch(state)
	{
		case FM_start: break;
     da0:	00 00       	nop
     da2:	01 c0       	rjmp	.+2      	; 0xda6 <FiringMech_Tick+0xc2>
			
		break;
		
		case FM_release:
			//bullet = 0;
		break;
     da4:	00 00       	nop
		
		default: break;
	}
	
	return state;
     da6:	89 81       	ldd	r24, Y+1	; 0x01
     da8:	9a 81       	ldd	r25, Y+2	; 0x02
}
     daa:	0f 90       	pop	r0
     dac:	0f 90       	pop	r0
     dae:	df 91       	pop	r29
     db0:	cf 91       	pop	r28
     db2:	08 95       	ret

00000db4 <main>:
#include "FiringMech.h"



int main(void)
{
     db4:	0f 93       	push	r16
     db6:	1f 93       	push	r17
     db8:	cf 93       	push	r28
     dba:	df 93       	push	r29
     dbc:	cd b7       	in	r28, 0x3d	; 61
     dbe:	de b7       	in	r29, 0x3e	; 62
     dc0:	c4 55       	subi	r28, 0x54	; 84
     dc2:	d1 09       	sbc	r29, r1
     dc4:	0f b6       	in	r0, 0x3f	; 63
     dc6:	f8 94       	cli
     dc8:	de bf       	out	0x3e, r29	; 62
     dca:	0f be       	out	0x3f, r0	; 63
     dcc:	cd bf       	out	0x3d, r28	; 61
	DDRB = 0xFF; PORTB = 0x00; // PORTB set to output, outputs init 0s
     dce:	84 e2       	ldi	r24, 0x24	; 36
     dd0:	90 e0       	ldi	r25, 0x00	; 0
     dd2:	2f ef       	ldi	r18, 0xFF	; 255
     dd4:	fc 01       	movw	r30, r24
     dd6:	20 83       	st	Z, r18
     dd8:	85 e2       	ldi	r24, 0x25	; 37
     dda:	90 e0       	ldi	r25, 0x00	; 0
     ddc:	fc 01       	movw	r30, r24
     dde:	10 82       	st	Z, r1
	DDRC = 0xF0; PORTC = 0x0F; // PC7..4 outputs init 0s, PC3..0 inputs init 1s
     de0:	87 e2       	ldi	r24, 0x27	; 39
     de2:	90 e0       	ldi	r25, 0x00	; 0
     de4:	20 ef       	ldi	r18, 0xF0	; 240
     de6:	fc 01       	movw	r30, r24
     de8:	20 83       	st	Z, r18
     dea:	88 e2       	ldi	r24, 0x28	; 40
     dec:	90 e0       	ldi	r25, 0x00	; 0
     dee:	2f e0       	ldi	r18, 0x0F	; 15
     df0:	fc 01       	movw	r30, r24
     df2:	20 83       	st	Z, r18
	DDRD = 0xFF; PORTD = 0x00;
     df4:	8a e2       	ldi	r24, 0x2A	; 42
     df6:	90 e0       	ldi	r25, 0x00	; 0
     df8:	2f ef       	ldi	r18, 0xFF	; 255
     dfa:	fc 01       	movw	r30, r24
     dfc:	20 83       	st	Z, r18
     dfe:	8b e2       	ldi	r24, 0x2B	; 43
     e00:	90 e0       	ldi	r25, 0x00	; 0
     e02:	fc 01       	movw	r30, r24
     e04:	10 82       	st	Z, r1
	
// 	bulletQ = QueueInit(1);

	/**Set individual task period********************************/
	unsigned long int ObstacleGenerator_calc	= 500;
     e06:	84 ef       	ldi	r24, 0xF4	; 244
     e08:	91 e0       	ldi	r25, 0x01	; 1
     e0a:	a0 e0       	ldi	r26, 0x00	; 0
     e0c:	b0 e0       	ldi	r27, 0x00	; 0
     e0e:	8b 83       	std	Y+3, r24	; 0x03
     e10:	9c 83       	std	Y+4, r25	; 0x04
     e12:	ad 83       	std	Y+5, r26	; 0x05
     e14:	be 83       	std	Y+6, r27	; 0x06
	unsigned long int Display_calc				= 500;
     e16:	84 ef       	ldi	r24, 0xF4	; 244
     e18:	91 e0       	ldi	r25, 0x01	; 1
     e1a:	a0 e0       	ldi	r26, 0x00	; 0
     e1c:	b0 e0       	ldi	r27, 0x00	; 0
     e1e:	8f 83       	std	Y+7, r24	; 0x07
     e20:	98 87       	std	Y+8, r25	; 0x08
     e22:	a9 87       	std	Y+9, r26	; 0x09
     e24:	ba 87       	std	Y+10, r27	; 0x0a
// 	unsigned long int Movement_calc				= 500;
// 	unsigned long int Collision_calc			= 500;
// 	unsigned long int LevelProgression_calc		= 500;
// 	unsigned long int FiringMech_calc			= 500;
	unsigned long int Movement_calc				= 10;
     e26:	8a e0       	ldi	r24, 0x0A	; 10
     e28:	90 e0       	ldi	r25, 0x00	; 0
     e2a:	a0 e0       	ldi	r26, 0x00	; 0
     e2c:	b0 e0       	ldi	r27, 0x00	; 0
     e2e:	8b 87       	std	Y+11, r24	; 0x0b
     e30:	9c 87       	std	Y+12, r25	; 0x0c
     e32:	ad 87       	std	Y+13, r26	; 0x0d
     e34:	be 87       	std	Y+14, r27	; 0x0e
	unsigned long int Collision_calc			= 100;
     e36:	84 e6       	ldi	r24, 0x64	; 100
     e38:	90 e0       	ldi	r25, 0x00	; 0
     e3a:	a0 e0       	ldi	r26, 0x00	; 0
     e3c:	b0 e0       	ldi	r27, 0x00	; 0
     e3e:	8f 87       	std	Y+15, r24	; 0x0f
     e40:	98 8b       	std	Y+16, r25	; 0x10
     e42:	a9 8b       	std	Y+17, r26	; 0x11
     e44:	ba 8b       	std	Y+18, r27	; 0x12
	unsigned long int LevelProgression_calc		= 2000;
     e46:	80 ed       	ldi	r24, 0xD0	; 208
     e48:	97 e0       	ldi	r25, 0x07	; 7
     e4a:	a0 e0       	ldi	r26, 0x00	; 0
     e4c:	b0 e0       	ldi	r27, 0x00	; 0
     e4e:	8b 8b       	std	Y+19, r24	; 0x13
     e50:	9c 8b       	std	Y+20, r25	; 0x14
     e52:	ad 8b       	std	Y+21, r26	; 0x15
     e54:	be 8b       	std	Y+22, r27	; 0x16
	unsigned long int FiringMech_calc			= 100;
     e56:	84 e6       	ldi	r24, 0x64	; 100
     e58:	90 e0       	ldi	r25, 0x00	; 0
     e5a:	a0 e0       	ldi	r26, 0x00	; 0
     e5c:	b0 e0       	ldi	r27, 0x00	; 0
     e5e:	8f 8b       	std	Y+23, r24	; 0x17
     e60:	98 8f       	std	Y+24, r25	; 0x18
     e62:	a9 8f       	std	Y+25, r26	; 0x19
     e64:	ba 8f       	std	Y+26, r27	; 0x1a
	
		
	/**Set individual task properties********************************/
	
	//Calculating GCD
	unsigned long int tempGCD		= findGCD(ObstacleGenerator_calc, Display_calc);
     e66:	2f 81       	ldd	r18, Y+7	; 0x07
     e68:	38 85       	ldd	r19, Y+8	; 0x08
     e6a:	49 85       	ldd	r20, Y+9	; 0x09
     e6c:	5a 85       	ldd	r21, Y+10	; 0x0a
     e6e:	8b 81       	ldd	r24, Y+3	; 0x03
     e70:	9c 81       	ldd	r25, Y+4	; 0x04
     e72:	ad 81       	ldd	r26, Y+5	; 0x05
     e74:	be 81       	ldd	r27, Y+6	; 0x06
     e76:	bc 01       	movw	r22, r24
     e78:	cd 01       	movw	r24, r26
     e7a:	f2 da       	rcall	.-2588   	; 0x460 <findGCD>
     e7c:	dc 01       	movw	r26, r24
     e7e:	cb 01       	movw	r24, r22
     e80:	8b 8f       	std	Y+27, r24	; 0x1b
     e82:	9c 8f       	std	Y+28, r25	; 0x1c
     e84:	ad 8f       	std	Y+29, r26	; 0x1d
     e86:	be 8f       	std	Y+30, r27	; 0x1e
					  tempGCD		= findGCD(tempGCD, Movement_calc);
     e88:	2b 85       	ldd	r18, Y+11	; 0x0b
     e8a:	3c 85       	ldd	r19, Y+12	; 0x0c
     e8c:	4d 85       	ldd	r20, Y+13	; 0x0d
     e8e:	5e 85       	ldd	r21, Y+14	; 0x0e
     e90:	8b 8d       	ldd	r24, Y+27	; 0x1b
     e92:	9c 8d       	ldd	r25, Y+28	; 0x1c
     e94:	ad 8d       	ldd	r26, Y+29	; 0x1d
     e96:	be 8d       	ldd	r27, Y+30	; 0x1e
     e98:	bc 01       	movw	r22, r24
     e9a:	cd 01       	movw	r24, r26
     e9c:	e1 da       	rcall	.-2622   	; 0x460 <findGCD>
     e9e:	dc 01       	movw	r26, r24
     ea0:	cb 01       	movw	r24, r22
     ea2:	8b 8f       	std	Y+27, r24	; 0x1b
     ea4:	9c 8f       	std	Y+28, r25	; 0x1c
     ea6:	ad 8f       	std	Y+29, r26	; 0x1d
     ea8:	be 8f       	std	Y+30, r27	; 0x1e
					  tempGCD		= findGCD(tempGCD, Collision_calc);
     eaa:	2f 85       	ldd	r18, Y+15	; 0x0f
     eac:	38 89       	ldd	r19, Y+16	; 0x10
     eae:	49 89       	ldd	r20, Y+17	; 0x11
     eb0:	5a 89       	ldd	r21, Y+18	; 0x12
     eb2:	8b 8d       	ldd	r24, Y+27	; 0x1b
     eb4:	9c 8d       	ldd	r25, Y+28	; 0x1c
     eb6:	ad 8d       	ldd	r26, Y+29	; 0x1d
     eb8:	be 8d       	ldd	r27, Y+30	; 0x1e
     eba:	bc 01       	movw	r22, r24
     ebc:	cd 01       	movw	r24, r26
     ebe:	d0 da       	rcall	.-2656   	; 0x460 <findGCD>
     ec0:	dc 01       	movw	r26, r24
     ec2:	cb 01       	movw	r24, r22
     ec4:	8b 8f       	std	Y+27, r24	; 0x1b
     ec6:	9c 8f       	std	Y+28, r25	; 0x1c
     ec8:	ad 8f       	std	Y+29, r26	; 0x1d
     eca:	be 8f       	std	Y+30, r27	; 0x1e
					  tempGCD		= findGCD(tempGCD, LevelProgression_calc);
     ecc:	2b 89       	ldd	r18, Y+19	; 0x13
     ece:	3c 89       	ldd	r19, Y+20	; 0x14
     ed0:	4d 89       	ldd	r20, Y+21	; 0x15
     ed2:	5e 89       	ldd	r21, Y+22	; 0x16
     ed4:	8b 8d       	ldd	r24, Y+27	; 0x1b
     ed6:	9c 8d       	ldd	r25, Y+28	; 0x1c
     ed8:	ad 8d       	ldd	r26, Y+29	; 0x1d
     eda:	be 8d       	ldd	r27, Y+30	; 0x1e
     edc:	bc 01       	movw	r22, r24
     ede:	cd 01       	movw	r24, r26
     ee0:	bf da       	rcall	.-2690   	; 0x460 <findGCD>
     ee2:	dc 01       	movw	r26, r24
     ee4:	cb 01       	movw	r24, r22
     ee6:	8b 8f       	std	Y+27, r24	; 0x1b
     ee8:	9c 8f       	std	Y+28, r25	; 0x1c
     eea:	ad 8f       	std	Y+29, r26	; 0x1d
     eec:	be 8f       	std	Y+30, r27	; 0x1e
					  tempGCD		= findGCD(tempGCD, FiringMech_calc);
     eee:	2f 89       	ldd	r18, Y+23	; 0x17
     ef0:	38 8d       	ldd	r19, Y+24	; 0x18
     ef2:	49 8d       	ldd	r20, Y+25	; 0x19
     ef4:	5a 8d       	ldd	r21, Y+26	; 0x1a
     ef6:	8b 8d       	ldd	r24, Y+27	; 0x1b
     ef8:	9c 8d       	ldd	r25, Y+28	; 0x1c
     efa:	ad 8d       	ldd	r26, Y+29	; 0x1d
     efc:	be 8d       	ldd	r27, Y+30	; 0x1e
     efe:	bc 01       	movw	r22, r24
     f00:	cd 01       	movw	r24, r26
     f02:	ae da       	rcall	.-2724   	; 0x460 <findGCD>
     f04:	dc 01       	movw	r26, r24
     f06:	cb 01       	movw	r24, r22
     f08:	8b 8f       	std	Y+27, r24	; 0x1b
     f0a:	9c 8f       	std	Y+28, r25	; 0x1c
     f0c:	ad 8f       	std	Y+29, r26	; 0x1d
     f0e:	be 8f       	std	Y+30, r27	; 0x1e
					  
	unsigned long int GCD			= tempGCD;
     f10:	8b 8d       	ldd	r24, Y+27	; 0x1b
     f12:	9c 8d       	ldd	r25, Y+28	; 0x1c
     f14:	ad 8d       	ldd	r26, Y+29	; 0x1d
     f16:	be 8d       	ldd	r27, Y+30	; 0x1e
     f18:	8f 8f       	std	Y+31, r24	; 0x1f
     f1a:	98 a3       	std	Y+32, r25	; 0x20
     f1c:	a9 a3       	std	Y+33, r26	; 0x21
     f1e:	ba a3       	std	Y+34, r27	; 0x22
	//Recalculate GCD periods for scheduler
	unsigned long int Tick1_Period	= ObstacleGenerator_calc/GCD,
     f20:	8b 81       	ldd	r24, Y+3	; 0x03
     f22:	9c 81       	ldd	r25, Y+4	; 0x04
     f24:	ad 81       	ldd	r26, Y+5	; 0x05
     f26:	be 81       	ldd	r27, Y+6	; 0x06
     f28:	2f 8d       	ldd	r18, Y+31	; 0x1f
     f2a:	38 a1       	ldd	r19, Y+32	; 0x20
     f2c:	49 a1       	ldd	r20, Y+33	; 0x21
     f2e:	5a a1       	ldd	r21, Y+34	; 0x22
     f30:	bc 01       	movw	r22, r24
     f32:	cd 01       	movw	r24, r26
     f34:	c9 d1       	rcall	.+914    	; 0x12c8 <__udivmodsi4>
     f36:	da 01       	movw	r26, r20
     f38:	c9 01       	movw	r24, r18
     f3a:	8b a3       	std	Y+35, r24	; 0x23
     f3c:	9c a3       	std	Y+36, r25	; 0x24
     f3e:	ad a3       	std	Y+37, r26	; 0x25
     f40:	be a3       	std	Y+38, r27	; 0x26
					  Tick2_period	= Display_calc/GCD,
     f42:	8f 81       	ldd	r24, Y+7	; 0x07
     f44:	98 85       	ldd	r25, Y+8	; 0x08
     f46:	a9 85       	ldd	r26, Y+9	; 0x09
     f48:	ba 85       	ldd	r27, Y+10	; 0x0a
     f4a:	2f 8d       	ldd	r18, Y+31	; 0x1f
     f4c:	38 a1       	ldd	r19, Y+32	; 0x20
     f4e:	49 a1       	ldd	r20, Y+33	; 0x21
     f50:	5a a1       	ldd	r21, Y+34	; 0x22
     f52:	bc 01       	movw	r22, r24
     f54:	cd 01       	movw	r24, r26
     f56:	b8 d1       	rcall	.+880    	; 0x12c8 <__udivmodsi4>
     f58:	da 01       	movw	r26, r20
     f5a:	c9 01       	movw	r24, r18
     f5c:	8f a3       	std	Y+39, r24	; 0x27
     f5e:	98 a7       	std	Y+40, r25	; 0x28
     f60:	a9 a7       	std	Y+41, r26	; 0x29
     f62:	ba a7       	std	Y+42, r27	; 0x2a
					  Tick3_period	= Movement_calc/GCD,
     f64:	8b 85       	ldd	r24, Y+11	; 0x0b
     f66:	9c 85       	ldd	r25, Y+12	; 0x0c
     f68:	ad 85       	ldd	r26, Y+13	; 0x0d
     f6a:	be 85       	ldd	r27, Y+14	; 0x0e
     f6c:	2f 8d       	ldd	r18, Y+31	; 0x1f
     f6e:	38 a1       	ldd	r19, Y+32	; 0x20
     f70:	49 a1       	ldd	r20, Y+33	; 0x21
     f72:	5a a1       	ldd	r21, Y+34	; 0x22
     f74:	bc 01       	movw	r22, r24
     f76:	cd 01       	movw	r24, r26
     f78:	a7 d1       	rcall	.+846    	; 0x12c8 <__udivmodsi4>
     f7a:	da 01       	movw	r26, r20
     f7c:	c9 01       	movw	r24, r18
     f7e:	8b a7       	std	Y+43, r24	; 0x2b
     f80:	9c a7       	std	Y+44, r25	; 0x2c
     f82:	ad a7       	std	Y+45, r26	; 0x2d
     f84:	be a7       	std	Y+46, r27	; 0x2e
					  Tick4_period	= Collision_calc/GCD,
     f86:	8f 85       	ldd	r24, Y+15	; 0x0f
     f88:	98 89       	ldd	r25, Y+16	; 0x10
     f8a:	a9 89       	ldd	r26, Y+17	; 0x11
     f8c:	ba 89       	ldd	r27, Y+18	; 0x12
     f8e:	2f 8d       	ldd	r18, Y+31	; 0x1f
     f90:	38 a1       	ldd	r19, Y+32	; 0x20
     f92:	49 a1       	ldd	r20, Y+33	; 0x21
     f94:	5a a1       	ldd	r21, Y+34	; 0x22
     f96:	bc 01       	movw	r22, r24
     f98:	cd 01       	movw	r24, r26
     f9a:	96 d1       	rcall	.+812    	; 0x12c8 <__udivmodsi4>
     f9c:	da 01       	movw	r26, r20
     f9e:	c9 01       	movw	r24, r18
     fa0:	8f a7       	std	Y+47, r24	; 0x2f
     fa2:	98 ab       	std	Y+48, r25	; 0x30
     fa4:	a9 ab       	std	Y+49, r26	; 0x31
     fa6:	ba ab       	std	Y+50, r27	; 0x32
					  Tick5_period	= LevelProgression_calc/GCD,
     fa8:	8b 89       	ldd	r24, Y+19	; 0x13
     faa:	9c 89       	ldd	r25, Y+20	; 0x14
     fac:	ad 89       	ldd	r26, Y+21	; 0x15
     fae:	be 89       	ldd	r27, Y+22	; 0x16
     fb0:	2f 8d       	ldd	r18, Y+31	; 0x1f
     fb2:	38 a1       	ldd	r19, Y+32	; 0x20
     fb4:	49 a1       	ldd	r20, Y+33	; 0x21
     fb6:	5a a1       	ldd	r21, Y+34	; 0x22
     fb8:	bc 01       	movw	r22, r24
     fba:	cd 01       	movw	r24, r26
     fbc:	85 d1       	rcall	.+778    	; 0x12c8 <__udivmodsi4>
     fbe:	da 01       	movw	r26, r20
     fc0:	c9 01       	movw	r24, r18
     fc2:	8b ab       	std	Y+51, r24	; 0x33
     fc4:	9c ab       	std	Y+52, r25	; 0x34
     fc6:	ad ab       	std	Y+53, r26	; 0x35
     fc8:	be ab       	std	Y+54, r27	; 0x36
					  Tick6_period	= FiringMech_calc/GCD;
     fca:	8f 89       	ldd	r24, Y+23	; 0x17
     fcc:	98 8d       	ldd	r25, Y+24	; 0x18
     fce:	a9 8d       	ldd	r26, Y+25	; 0x19
     fd0:	ba 8d       	ldd	r27, Y+26	; 0x1a
     fd2:	2f 8d       	ldd	r18, Y+31	; 0x1f
     fd4:	38 a1       	ldd	r19, Y+32	; 0x20
     fd6:	49 a1       	ldd	r20, Y+33	; 0x21
     fd8:	5a a1       	ldd	r21, Y+34	; 0x22
     fda:	bc 01       	movw	r22, r24
     fdc:	cd 01       	movw	r24, r26
     fde:	74 d1       	rcall	.+744    	; 0x12c8 <__udivmodsi4>
     fe0:	da 01       	movw	r26, r20
     fe2:	c9 01       	movw	r24, r18
     fe4:	8f ab       	std	Y+55, r24	; 0x37
     fe6:	98 af       	std	Y+56, r25	; 0x38
     fe8:	a9 af       	std	Y+57, r26	; 0x39
     fea:	ba af       	std	Y+58, r27	; 0x3a
					  
	const unsigned short numTasks	= sizeof(tasks)/sizeof(task*);
     fec:	86 e0       	ldi	r24, 0x06	; 6
     fee:	90 e0       	ldi	r25, 0x00	; 0
     ff0:	9c af       	std	Y+60, r25	; 0x3c
     ff2:	8b af       	std	Y+59, r24	; 0x3b
	
	/****************************************************************/
	
	/**Set individual task properties**************/
	task1.state						= 0;
     ff4:	10 92 68 01 	sts	0x0168, r1	; 0x800168 <task1>
	task1.period					= Tick1_Period;
     ff8:	8b a1       	ldd	r24, Y+35	; 0x23
     ffa:	9c a1       	ldd	r25, Y+36	; 0x24
     ffc:	ad a1       	ldd	r26, Y+37	; 0x25
     ffe:	be a1       	ldd	r27, Y+38	; 0x26
    1000:	80 93 69 01 	sts	0x0169, r24	; 0x800169 <task1+0x1>
    1004:	90 93 6a 01 	sts	0x016A, r25	; 0x80016a <task1+0x2>
    1008:	a0 93 6b 01 	sts	0x016B, r26	; 0x80016b <task1+0x3>
    100c:	b0 93 6c 01 	sts	0x016C, r27	; 0x80016c <task1+0x4>
	task1.elapsedTime				= Tick1_Period;
    1010:	8b a1       	ldd	r24, Y+35	; 0x23
    1012:	9c a1       	ldd	r25, Y+36	; 0x24
    1014:	ad a1       	ldd	r26, Y+37	; 0x25
    1016:	be a1       	ldd	r27, Y+38	; 0x26
    1018:	80 93 6d 01 	sts	0x016D, r24	; 0x80016d <task1+0x5>
    101c:	90 93 6e 01 	sts	0x016E, r25	; 0x80016e <task1+0x6>
    1020:	a0 93 6f 01 	sts	0x016F, r26	; 0x80016f <task1+0x7>
    1024:	b0 93 70 01 	sts	0x0170, r27	; 0x800170 <task1+0x8>
	task1.TickFct					= &ObstacleGeneratorSM_Tick;
    1028:	82 e9       	ldi	r24, 0x92	; 146
    102a:	93 e0       	ldi	r25, 0x03	; 3
    102c:	90 93 72 01 	sts	0x0172, r25	; 0x800172 <task1+0xa>
    1030:	80 93 71 01 	sts	0x0171, r24	; 0x800171 <task1+0x9>
	
	// Task 2
	task2.state						= 0;//Task initial state.
    1034:	10 92 73 01 	sts	0x0173, r1	; 0x800173 <task2>
	task2.period					= Tick2_period;//Task Period.
    1038:	8f a1       	ldd	r24, Y+39	; 0x27
    103a:	98 a5       	ldd	r25, Y+40	; 0x28
    103c:	a9 a5       	ldd	r26, Y+41	; 0x29
    103e:	ba a5       	ldd	r27, Y+42	; 0x2a
    1040:	80 93 74 01 	sts	0x0174, r24	; 0x800174 <task2+0x1>
    1044:	90 93 75 01 	sts	0x0175, r25	; 0x800175 <task2+0x2>
    1048:	a0 93 76 01 	sts	0x0176, r26	; 0x800176 <task2+0x3>
    104c:	b0 93 77 01 	sts	0x0177, r27	; 0x800177 <task2+0x4>
	task2.elapsedTime				= Tick2_period;//Task current elapsed time.
    1050:	8f a1       	ldd	r24, Y+39	; 0x27
    1052:	98 a5       	ldd	r25, Y+40	; 0x28
    1054:	a9 a5       	ldd	r26, Y+41	; 0x29
    1056:	ba a5       	ldd	r27, Y+42	; 0x2a
    1058:	80 93 78 01 	sts	0x0178, r24	; 0x800178 <task2+0x5>
    105c:	90 93 79 01 	sts	0x0179, r25	; 0x800179 <task2+0x6>
    1060:	a0 93 7a 01 	sts	0x017A, r26	; 0x80017a <task2+0x7>
    1064:	b0 93 7b 01 	sts	0x017B, r27	; 0x80017b <task2+0x8>
	task2.TickFct					= &DisplaySM_Tick;//Function pointer for the tick.
    1068:	85 e4       	ldi	r24, 0x45	; 69
    106a:	94 e0       	ldi	r25, 0x04	; 4
    106c:	90 93 7d 01 	sts	0x017D, r25	; 0x80017d <task2+0xa>
    1070:	80 93 7c 01 	sts	0x017C, r24	; 0x80017c <task2+0x9>
	
	//Task 3
	task3.state						= 0;//Task initial state.
    1074:	10 92 7e 01 	sts	0x017E, r1	; 0x80017e <task3>
	task3.period					= Tick3_period;//Task Period.
    1078:	8b a5       	ldd	r24, Y+43	; 0x2b
    107a:	9c a5       	ldd	r25, Y+44	; 0x2c
    107c:	ad a5       	ldd	r26, Y+45	; 0x2d
    107e:	be a5       	ldd	r27, Y+46	; 0x2e
    1080:	80 93 7f 01 	sts	0x017F, r24	; 0x80017f <task3+0x1>
    1084:	90 93 80 01 	sts	0x0180, r25	; 0x800180 <task3+0x2>
    1088:	a0 93 81 01 	sts	0x0181, r26	; 0x800181 <task3+0x3>
    108c:	b0 93 82 01 	sts	0x0182, r27	; 0x800182 <task3+0x4>
	task3.elapsedTime				= Tick3_period;//Task current elapsed time.
    1090:	8b a5       	ldd	r24, Y+43	; 0x2b
    1092:	9c a5       	ldd	r25, Y+44	; 0x2c
    1094:	ad a5       	ldd	r26, Y+45	; 0x2d
    1096:	be a5       	ldd	r27, Y+46	; 0x2e
    1098:	80 93 83 01 	sts	0x0183, r24	; 0x800183 <task3+0x5>
    109c:	90 93 84 01 	sts	0x0184, r25	; 0x800184 <task3+0x6>
    10a0:	a0 93 85 01 	sts	0x0185, r26	; 0x800185 <task3+0x7>
    10a4:	b0 93 86 01 	sts	0x0186, r27	; 0x800186 <task3+0x8>
	task3.TickFct					= &Movement_Tick;//Function pointer for the tick.
    10a8:	81 e1       	ldi	r24, 0x11	; 17
    10aa:	95 e0       	ldi	r25, 0x05	; 5
    10ac:	90 93 88 01 	sts	0x0188, r25	; 0x800188 <task3+0xa>
    10b0:	80 93 87 01 	sts	0x0187, r24	; 0x800187 <task3+0x9>
	
	//Task 4
	task4.state						= 0;//Task initial state.
    10b4:	10 92 89 01 	sts	0x0189, r1	; 0x800189 <task4>
	task4.period					= Tick4_period;//Task Period.
    10b8:	8f a5       	ldd	r24, Y+47	; 0x2f
    10ba:	98 a9       	ldd	r25, Y+48	; 0x30
    10bc:	a9 a9       	ldd	r26, Y+49	; 0x31
    10be:	ba a9       	ldd	r27, Y+50	; 0x32
    10c0:	80 93 8a 01 	sts	0x018A, r24	; 0x80018a <task4+0x1>
    10c4:	90 93 8b 01 	sts	0x018B, r25	; 0x80018b <task4+0x2>
    10c8:	a0 93 8c 01 	sts	0x018C, r26	; 0x80018c <task4+0x3>
    10cc:	b0 93 8d 01 	sts	0x018D, r27	; 0x80018d <task4+0x4>
	task4.elapsedTime				= Tick4_period;//Task current elapsed time.
    10d0:	8f a5       	ldd	r24, Y+47	; 0x2f
    10d2:	98 a9       	ldd	r25, Y+48	; 0x30
    10d4:	a9 a9       	ldd	r26, Y+49	; 0x31
    10d6:	ba a9       	ldd	r27, Y+50	; 0x32
    10d8:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <task4+0x5>
    10dc:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <task4+0x6>
    10e0:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <task4+0x7>
    10e4:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <task4+0x8>
	task4.TickFct					= &Collision_Tick;//Function pointer for the tick.
    10e8:	83 e9       	ldi	r24, 0x93	; 147
    10ea:	95 e0       	ldi	r25, 0x05	; 5
    10ec:	90 93 93 01 	sts	0x0193, r25	; 0x800193 <task4+0xa>
    10f0:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <task4+0x9>
	
	//Task 5
	task5.state						= 0;//Task initial state.
    10f4:	10 92 94 01 	sts	0x0194, r1	; 0x800194 <task5>
	task5.period					= Tick5_period;//Task Period.
    10f8:	8b a9       	ldd	r24, Y+51	; 0x33
    10fa:	9c a9       	ldd	r25, Y+52	; 0x34
    10fc:	ad a9       	ldd	r26, Y+53	; 0x35
    10fe:	be a9       	ldd	r27, Y+54	; 0x36
    1100:	80 93 95 01 	sts	0x0195, r24	; 0x800195 <task5+0x1>
    1104:	90 93 96 01 	sts	0x0196, r25	; 0x800196 <task5+0x2>
    1108:	a0 93 97 01 	sts	0x0197, r26	; 0x800197 <task5+0x3>
    110c:	b0 93 98 01 	sts	0x0198, r27	; 0x800198 <task5+0x4>
	task5.elapsedTime				= Tick5_period;//Task current elapsed time.
    1110:	8b a9       	ldd	r24, Y+51	; 0x33
    1112:	9c a9       	ldd	r25, Y+52	; 0x34
    1114:	ad a9       	ldd	r26, Y+53	; 0x35
    1116:	be a9       	ldd	r27, Y+54	; 0x36
    1118:	80 93 99 01 	sts	0x0199, r24	; 0x800199 <task5+0x5>
    111c:	90 93 9a 01 	sts	0x019A, r25	; 0x80019a <task5+0x6>
    1120:	a0 93 9b 01 	sts	0x019B, r26	; 0x80019b <task5+0x7>
    1124:	b0 93 9c 01 	sts	0x019C, r27	; 0x80019c <task5+0x8>
	task5.TickFct					= &LevelProgression_Tick;//Function pointer for the tick.
    1128:	82 e3       	ldi	r24, 0x32	; 50
    112a:	96 e0       	ldi	r25, 0x06	; 6
    112c:	90 93 9e 01 	sts	0x019E, r25	; 0x80019e <task5+0xa>
    1130:	80 93 9d 01 	sts	0x019D, r24	; 0x80019d <task5+0x9>
	
	//Task 6
	task6.state						= 0;//Task initial state.
    1134:	10 92 9f 01 	sts	0x019F, r1	; 0x80019f <task6>
	task6.period					= Tick6_period;//Task Period.
    1138:	8f a9       	ldd	r24, Y+55	; 0x37
    113a:	98 ad       	ldd	r25, Y+56	; 0x38
    113c:	a9 ad       	ldd	r26, Y+57	; 0x39
    113e:	ba ad       	ldd	r27, Y+58	; 0x3a
    1140:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <task6+0x1>
    1144:	90 93 a1 01 	sts	0x01A1, r25	; 0x8001a1 <task6+0x2>
    1148:	a0 93 a2 01 	sts	0x01A2, r26	; 0x8001a2 <task6+0x3>
    114c:	b0 93 a3 01 	sts	0x01A3, r27	; 0x8001a3 <task6+0x4>
	task6.elapsedTime				= Tick6_period;//Task current elapsed time.
    1150:	8f a9       	ldd	r24, Y+55	; 0x37
    1152:	98 ad       	ldd	r25, Y+56	; 0x38
    1154:	a9 ad       	ldd	r26, Y+57	; 0x39
    1156:	ba ad       	ldd	r27, Y+58	; 0x3a
    1158:	80 93 a4 01 	sts	0x01A4, r24	; 0x8001a4 <task6+0x5>
    115c:	90 93 a5 01 	sts	0x01A5, r25	; 0x8001a5 <task6+0x6>
    1160:	a0 93 a6 01 	sts	0x01A6, r26	; 0x8001a6 <task6+0x7>
    1164:	b0 93 a7 01 	sts	0x01A7, r27	; 0x8001a7 <task6+0x8>
	task6.TickFct					= &FiringMech_Tick;//Function pointer for the tick.
    1168:	82 e7       	ldi	r24, 0x72	; 114
    116a:	96 e0       	ldi	r25, 0x06	; 6
    116c:	90 93 a9 01 	sts	0x01A9, r25	; 0x8001a9 <task6+0xa>
    1170:	80 93 a8 01 	sts	0x01A8, r24	; 0x8001a8 <task6+0x9>

	/**********************************************/
	
	
	TimerSet(GCD);
    1174:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1176:	98 a1       	ldd	r25, Y+32	; 0x20
    1178:	a9 a1       	ldd	r26, Y+33	; 0x21
    117a:	ba a1       	ldd	r27, Y+34	; 0x22
    117c:	bc 01       	movw	r22, r24
    117e:	cd 01       	movw	r24, r26
    1180:	a2 d8       	rcall	.-3772   	; 0x2c6 <TimerSet>
	TimerOn();
    1182:	ce d8       	rcall	.-3684   	; 0x320 <TimerOn>
	
	LCD_init();
    1184:	0e 94 6e 00 	call	0xdc	; 0xdc <LCD_init>
	
	while(1) 
	{
		for(unsigned short i = 0; i < numTasks; i++)
    1188:	1a 82       	std	Y+2, r1	; 0x02
    118a:	19 82       	std	Y+1, r1	; 0x01
    118c:	7a c0       	rjmp	.+244    	; 0x1282 <main+0x4ce>
		{
			//keypad_value = GetKeypadKey();
			if(tasks[i] -> elapsedTime == tasks[i]-> period)
    118e:	89 81       	ldd	r24, Y+1	; 0x01
    1190:	9a 81       	ldd	r25, Y+2	; 0x02
    1192:	88 0f       	add	r24, r24
    1194:	99 1f       	adc	r25, r25
    1196:	81 5d       	subi	r24, 0xD1	; 209
    1198:	9e 4f       	sbci	r25, 0xFE	; 254
    119a:	fc 01       	movw	r30, r24
    119c:	80 81       	ld	r24, Z
    119e:	91 81       	ldd	r25, Z+1	; 0x01
    11a0:	fc 01       	movw	r30, r24
    11a2:	25 81       	ldd	r18, Z+5	; 0x05
    11a4:	36 81       	ldd	r19, Z+6	; 0x06
    11a6:	47 81       	ldd	r20, Z+7	; 0x07
    11a8:	50 85       	ldd	r21, Z+8	; 0x08
    11aa:	89 81       	ldd	r24, Y+1	; 0x01
    11ac:	9a 81       	ldd	r25, Y+2	; 0x02
    11ae:	88 0f       	add	r24, r24
    11b0:	99 1f       	adc	r25, r25
    11b2:	81 5d       	subi	r24, 0xD1	; 209
    11b4:	9e 4f       	sbci	r25, 0xFE	; 254
    11b6:	fc 01       	movw	r30, r24
    11b8:	80 81       	ld	r24, Z
    11ba:	91 81       	ldd	r25, Z+1	; 0x01
    11bc:	fc 01       	movw	r30, r24
    11be:	81 81       	ldd	r24, Z+1	; 0x01
    11c0:	92 81       	ldd	r25, Z+2	; 0x02
    11c2:	a3 81       	ldd	r26, Z+3	; 0x03
    11c4:	b4 81       	ldd	r27, Z+4	; 0x04
    11c6:	28 17       	cp	r18, r24
    11c8:	39 07       	cpc	r19, r25
    11ca:	4a 07       	cpc	r20, r26
    11cc:	5b 07       	cpc	r21, r27
    11ce:	a9 f5       	brne	.+106    	; 0x123a <main+0x486>
			{
				
				tasks[i] -> state		= tasks[i] -> TickFct(tasks[i] -> state);
    11d0:	89 81       	ldd	r24, Y+1	; 0x01
    11d2:	9a 81       	ldd	r25, Y+2	; 0x02
    11d4:	88 0f       	add	r24, r24
    11d6:	99 1f       	adc	r25, r25
    11d8:	81 5d       	subi	r24, 0xD1	; 209
    11da:	9e 4f       	sbci	r25, 0xFE	; 254
    11dc:	fc 01       	movw	r30, r24
    11de:	00 81       	ld	r16, Z
    11e0:	11 81       	ldd	r17, Z+1	; 0x01
    11e2:	89 81       	ldd	r24, Y+1	; 0x01
    11e4:	9a 81       	ldd	r25, Y+2	; 0x02
    11e6:	88 0f       	add	r24, r24
    11e8:	99 1f       	adc	r25, r25
    11ea:	81 5d       	subi	r24, 0xD1	; 209
    11ec:	9e 4f       	sbci	r25, 0xFE	; 254
    11ee:	fc 01       	movw	r30, r24
    11f0:	80 81       	ld	r24, Z
    11f2:	91 81       	ldd	r25, Z+1	; 0x01
    11f4:	fc 01       	movw	r30, r24
    11f6:	21 85       	ldd	r18, Z+9	; 0x09
    11f8:	32 85       	ldd	r19, Z+10	; 0x0a
    11fa:	89 81       	ldd	r24, Y+1	; 0x01
    11fc:	9a 81       	ldd	r25, Y+2	; 0x02
    11fe:	88 0f       	add	r24, r24
    1200:	99 1f       	adc	r25, r25
    1202:	81 5d       	subi	r24, 0xD1	; 209
    1204:	9e 4f       	sbci	r25, 0xFE	; 254
    1206:	fc 01       	movw	r30, r24
    1208:	80 81       	ld	r24, Z
    120a:	91 81       	ldd	r25, Z+1	; 0x01
    120c:	fc 01       	movw	r30, r24
    120e:	80 81       	ld	r24, Z
    1210:	08 2e       	mov	r0, r24
    1212:	00 0c       	add	r0, r0
    1214:	99 0b       	sbc	r25, r25
    1216:	f9 01       	movw	r30, r18
    1218:	09 95       	icall
    121a:	f8 01       	movw	r30, r16
    121c:	80 83       	st	Z, r24
				tasks[i] -> elapsedTime = 0;
    121e:	89 81       	ldd	r24, Y+1	; 0x01
    1220:	9a 81       	ldd	r25, Y+2	; 0x02
    1222:	88 0f       	add	r24, r24
    1224:	99 1f       	adc	r25, r25
    1226:	81 5d       	subi	r24, 0xD1	; 209
    1228:	9e 4f       	sbci	r25, 0xFE	; 254
    122a:	fc 01       	movw	r30, r24
    122c:	80 81       	ld	r24, Z
    122e:	91 81       	ldd	r25, Z+1	; 0x01
    1230:	fc 01       	movw	r30, r24
    1232:	15 82       	std	Z+5, r1	; 0x05
    1234:	16 82       	std	Z+6, r1	; 0x06
    1236:	17 82       	std	Z+7, r1	; 0x07
    1238:	10 86       	std	Z+8, r1	; 0x08
			}
			tasks[i] -> elapsedTime += 1;
    123a:	89 81       	ldd	r24, Y+1	; 0x01
    123c:	9a 81       	ldd	r25, Y+2	; 0x02
    123e:	88 0f       	add	r24, r24
    1240:	99 1f       	adc	r25, r25
    1242:	81 5d       	subi	r24, 0xD1	; 209
    1244:	9e 4f       	sbci	r25, 0xFE	; 254
    1246:	fc 01       	movw	r30, r24
    1248:	20 81       	ld	r18, Z
    124a:	31 81       	ldd	r19, Z+1	; 0x01
    124c:	89 81       	ldd	r24, Y+1	; 0x01
    124e:	9a 81       	ldd	r25, Y+2	; 0x02
    1250:	88 0f       	add	r24, r24
    1252:	99 1f       	adc	r25, r25
    1254:	81 5d       	subi	r24, 0xD1	; 209
    1256:	9e 4f       	sbci	r25, 0xFE	; 254
    1258:	fc 01       	movw	r30, r24
    125a:	80 81       	ld	r24, Z
    125c:	91 81       	ldd	r25, Z+1	; 0x01
    125e:	fc 01       	movw	r30, r24
    1260:	85 81       	ldd	r24, Z+5	; 0x05
    1262:	96 81       	ldd	r25, Z+6	; 0x06
    1264:	a7 81       	ldd	r26, Z+7	; 0x07
    1266:	b0 85       	ldd	r27, Z+8	; 0x08
    1268:	01 96       	adiw	r24, 0x01	; 1
    126a:	a1 1d       	adc	r26, r1
    126c:	b1 1d       	adc	r27, r1
    126e:	f9 01       	movw	r30, r18
    1270:	85 83       	std	Z+5, r24	; 0x05
    1272:	96 83       	std	Z+6, r25	; 0x06
    1274:	a7 83       	std	Z+7, r26	; 0x07
    1276:	b0 87       	std	Z+8, r27	; 0x08
	
	LCD_init();
	
	while(1) 
	{
		for(unsigned short i = 0; i < numTasks; i++)
    1278:	89 81       	ldd	r24, Y+1	; 0x01
    127a:	9a 81       	ldd	r25, Y+2	; 0x02
    127c:	01 96       	adiw	r24, 0x01	; 1
    127e:	9a 83       	std	Y+2, r25	; 0x02
    1280:	89 83       	std	Y+1, r24	; 0x01
    1282:	29 81       	ldd	r18, Y+1	; 0x01
    1284:	3a 81       	ldd	r19, Y+2	; 0x02
    1286:	8b ad       	ldd	r24, Y+59	; 0x3b
    1288:	9c ad       	ldd	r25, Y+60	; 0x3c
    128a:	28 17       	cp	r18, r24
    128c:	39 07       	cpc	r19, r25
    128e:	08 f4       	brcc	.+2      	; 0x1292 <main+0x4de>
    1290:	7e cf       	rjmp	.-260    	; 0x118e <main+0x3da>
				tasks[i] -> state		= tasks[i] -> TickFct(tasks[i] -> state);
				tasks[i] -> elapsedTime = 0;
			}
			tasks[i] -> elapsedTime += 1;
		}
		while(!TimerFlag);
    1292:	00 00       	nop
    1294:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <__data_end>
    1298:	88 23       	and	r24, r24
    129a:	e1 f3       	breq	.-8      	; 0x1294 <main+0x4e0>
		TimerFlag = 0;
    129c:	10 92 5e 01 	sts	0x015E, r1	; 0x80015e <__data_end>
	}
    12a0:	73 cf       	rjmp	.-282    	; 0x1188 <main+0x3d4>

000012a2 <__divmodhi4>:
    12a2:	97 fb       	bst	r25, 7
    12a4:	07 2e       	mov	r0, r23
    12a6:	16 f4       	brtc	.+4      	; 0x12ac <__divmodhi4+0xa>
    12a8:	00 94       	com	r0
    12aa:	06 d0       	rcall	.+12     	; 0x12b8 <__divmodhi4_neg1>
    12ac:	77 fd       	sbrc	r23, 7
    12ae:	08 d0       	rcall	.+16     	; 0x12c0 <__divmodhi4_neg2>
    12b0:	2d d0       	rcall	.+90     	; 0x130c <__udivmodhi4>
    12b2:	07 fc       	sbrc	r0, 7
    12b4:	05 d0       	rcall	.+10     	; 0x12c0 <__divmodhi4_neg2>
    12b6:	3e f4       	brtc	.+14     	; 0x12c6 <__divmodhi4_exit>

000012b8 <__divmodhi4_neg1>:
    12b8:	90 95       	com	r25
    12ba:	81 95       	neg	r24
    12bc:	9f 4f       	sbci	r25, 0xFF	; 255
    12be:	08 95       	ret

000012c0 <__divmodhi4_neg2>:
    12c0:	70 95       	com	r23
    12c2:	61 95       	neg	r22
    12c4:	7f 4f       	sbci	r23, 0xFF	; 255

000012c6 <__divmodhi4_exit>:
    12c6:	08 95       	ret

000012c8 <__udivmodsi4>:
    12c8:	a1 e2       	ldi	r26, 0x21	; 33
    12ca:	1a 2e       	mov	r1, r26
    12cc:	aa 1b       	sub	r26, r26
    12ce:	bb 1b       	sub	r27, r27
    12d0:	fd 01       	movw	r30, r26
    12d2:	0d c0       	rjmp	.+26     	; 0x12ee <__udivmodsi4_ep>

000012d4 <__udivmodsi4_loop>:
    12d4:	aa 1f       	adc	r26, r26
    12d6:	bb 1f       	adc	r27, r27
    12d8:	ee 1f       	adc	r30, r30
    12da:	ff 1f       	adc	r31, r31
    12dc:	a2 17       	cp	r26, r18
    12de:	b3 07       	cpc	r27, r19
    12e0:	e4 07       	cpc	r30, r20
    12e2:	f5 07       	cpc	r31, r21
    12e4:	20 f0       	brcs	.+8      	; 0x12ee <__udivmodsi4_ep>
    12e6:	a2 1b       	sub	r26, r18
    12e8:	b3 0b       	sbc	r27, r19
    12ea:	e4 0b       	sbc	r30, r20
    12ec:	f5 0b       	sbc	r31, r21

000012ee <__udivmodsi4_ep>:
    12ee:	66 1f       	adc	r22, r22
    12f0:	77 1f       	adc	r23, r23
    12f2:	88 1f       	adc	r24, r24
    12f4:	99 1f       	adc	r25, r25
    12f6:	1a 94       	dec	r1
    12f8:	69 f7       	brne	.-38     	; 0x12d4 <__udivmodsi4_loop>
    12fa:	60 95       	com	r22
    12fc:	70 95       	com	r23
    12fe:	80 95       	com	r24
    1300:	90 95       	com	r25
    1302:	9b 01       	movw	r18, r22
    1304:	ac 01       	movw	r20, r24
    1306:	bd 01       	movw	r22, r26
    1308:	cf 01       	movw	r24, r30
    130a:	08 95       	ret

0000130c <__udivmodhi4>:
    130c:	aa 1b       	sub	r26, r26
    130e:	bb 1b       	sub	r27, r27
    1310:	51 e1       	ldi	r21, 0x11	; 17
    1312:	07 c0       	rjmp	.+14     	; 0x1322 <__udivmodhi4_ep>

00001314 <__udivmodhi4_loop>:
    1314:	aa 1f       	adc	r26, r26
    1316:	bb 1f       	adc	r27, r27
    1318:	a6 17       	cp	r26, r22
    131a:	b7 07       	cpc	r27, r23
    131c:	10 f0       	brcs	.+4      	; 0x1322 <__udivmodhi4_ep>
    131e:	a6 1b       	sub	r26, r22
    1320:	b7 0b       	sbc	r27, r23

00001322 <__udivmodhi4_ep>:
    1322:	88 1f       	adc	r24, r24
    1324:	99 1f       	adc	r25, r25
    1326:	5a 95       	dec	r21
    1328:	a9 f7       	brne	.-22     	; 0x1314 <__udivmodhi4_loop>
    132a:	80 95       	com	r24
    132c:	90 95       	com	r25
    132e:	bc 01       	movw	r22, r24
    1330:	cd 01       	movw	r24, r26
    1332:	08 95       	ret

00001334 <do_rand>:
    1334:	8f 92       	push	r8
    1336:	9f 92       	push	r9
    1338:	af 92       	push	r10
    133a:	bf 92       	push	r11
    133c:	cf 92       	push	r12
    133e:	df 92       	push	r13
    1340:	ef 92       	push	r14
    1342:	ff 92       	push	r15
    1344:	cf 93       	push	r28
    1346:	df 93       	push	r29
    1348:	ec 01       	movw	r28, r24
    134a:	68 81       	ld	r22, Y
    134c:	79 81       	ldd	r23, Y+1	; 0x01
    134e:	8a 81       	ldd	r24, Y+2	; 0x02
    1350:	9b 81       	ldd	r25, Y+3	; 0x03
    1352:	61 15       	cp	r22, r1
    1354:	71 05       	cpc	r23, r1
    1356:	81 05       	cpc	r24, r1
    1358:	91 05       	cpc	r25, r1
    135a:	21 f4       	brne	.+8      	; 0x1364 <do_rand+0x30>
    135c:	64 e2       	ldi	r22, 0x24	; 36
    135e:	79 ed       	ldi	r23, 0xD9	; 217
    1360:	8b e5       	ldi	r24, 0x5B	; 91
    1362:	97 e0       	ldi	r25, 0x07	; 7
    1364:	2d e1       	ldi	r18, 0x1D	; 29
    1366:	33 ef       	ldi	r19, 0xF3	; 243
    1368:	41 e0       	ldi	r20, 0x01	; 1
    136a:	50 e0       	ldi	r21, 0x00	; 0
    136c:	38 d0       	rcall	.+112    	; 0x13de <__divmodsi4>
    136e:	49 01       	movw	r8, r18
    1370:	5a 01       	movw	r10, r20
    1372:	9b 01       	movw	r18, r22
    1374:	ac 01       	movw	r20, r24
    1376:	a7 ea       	ldi	r26, 0xA7	; 167
    1378:	b1 e4       	ldi	r27, 0x41	; 65
    137a:	4d d0       	rcall	.+154    	; 0x1416 <__muluhisi3>
    137c:	6b 01       	movw	r12, r22
    137e:	7c 01       	movw	r14, r24
    1380:	ac ee       	ldi	r26, 0xEC	; 236
    1382:	b4 ef       	ldi	r27, 0xF4	; 244
    1384:	a5 01       	movw	r20, r10
    1386:	94 01       	movw	r18, r8
    1388:	52 d0       	rcall	.+164    	; 0x142e <__mulohisi3>
    138a:	dc 01       	movw	r26, r24
    138c:	cb 01       	movw	r24, r22
    138e:	8c 0d       	add	r24, r12
    1390:	9d 1d       	adc	r25, r13
    1392:	ae 1d       	adc	r26, r14
    1394:	bf 1d       	adc	r27, r15
    1396:	b7 ff       	sbrs	r27, 7
    1398:	03 c0       	rjmp	.+6      	; 0x13a0 <do_rand+0x6c>
    139a:	01 97       	sbiw	r24, 0x01	; 1
    139c:	a1 09       	sbc	r26, r1
    139e:	b0 48       	sbci	r27, 0x80	; 128
    13a0:	88 83       	st	Y, r24
    13a2:	99 83       	std	Y+1, r25	; 0x01
    13a4:	aa 83       	std	Y+2, r26	; 0x02
    13a6:	bb 83       	std	Y+3, r27	; 0x03
    13a8:	9f 77       	andi	r25, 0x7F	; 127
    13aa:	df 91       	pop	r29
    13ac:	cf 91       	pop	r28
    13ae:	ff 90       	pop	r15
    13b0:	ef 90       	pop	r14
    13b2:	df 90       	pop	r13
    13b4:	cf 90       	pop	r12
    13b6:	bf 90       	pop	r11
    13b8:	af 90       	pop	r10
    13ba:	9f 90       	pop	r9
    13bc:	8f 90       	pop	r8
    13be:	08 95       	ret

000013c0 <rand_r>:
    13c0:	b9 cf       	rjmp	.-142    	; 0x1334 <do_rand>

000013c2 <rand>:
    13c2:	80 e0       	ldi	r24, 0x00	; 0
    13c4:	91 e0       	ldi	r25, 0x01	; 1
    13c6:	b6 cf       	rjmp	.-148    	; 0x1334 <do_rand>

000013c8 <srand>:
    13c8:	a0 e0       	ldi	r26, 0x00	; 0
    13ca:	b0 e0       	ldi	r27, 0x00	; 0
    13cc:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
    13d0:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
    13d4:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__data_start+0x2>
    13d8:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__data_start+0x3>
    13dc:	08 95       	ret

000013de <__divmodsi4>:
    13de:	05 2e       	mov	r0, r21
    13e0:	97 fb       	bst	r25, 7
    13e2:	16 f4       	brtc	.+4      	; 0x13e8 <__divmodsi4+0xa>
    13e4:	00 94       	com	r0
    13e6:	0f d0       	rcall	.+30     	; 0x1406 <__negsi2>
    13e8:	57 fd       	sbrc	r21, 7
    13ea:	05 d0       	rcall	.+10     	; 0x13f6 <__divmodsi4_neg2>
    13ec:	6d df       	rcall	.-294    	; 0x12c8 <__udivmodsi4>
    13ee:	07 fc       	sbrc	r0, 7
    13f0:	02 d0       	rcall	.+4      	; 0x13f6 <__divmodsi4_neg2>
    13f2:	46 f4       	brtc	.+16     	; 0x1404 <__divmodsi4_exit>
    13f4:	08 c0       	rjmp	.+16     	; 0x1406 <__negsi2>

000013f6 <__divmodsi4_neg2>:
    13f6:	50 95       	com	r21
    13f8:	40 95       	com	r20
    13fa:	30 95       	com	r19
    13fc:	21 95       	neg	r18
    13fe:	3f 4f       	sbci	r19, 0xFF	; 255
    1400:	4f 4f       	sbci	r20, 0xFF	; 255
    1402:	5f 4f       	sbci	r21, 0xFF	; 255

00001404 <__divmodsi4_exit>:
    1404:	08 95       	ret

00001406 <__negsi2>:
    1406:	90 95       	com	r25
    1408:	80 95       	com	r24
    140a:	70 95       	com	r23
    140c:	61 95       	neg	r22
    140e:	7f 4f       	sbci	r23, 0xFF	; 255
    1410:	8f 4f       	sbci	r24, 0xFF	; 255
    1412:	9f 4f       	sbci	r25, 0xFF	; 255
    1414:	08 95       	ret

00001416 <__muluhisi3>:
    1416:	0f d0       	rcall	.+30     	; 0x1436 <__umulhisi3>
    1418:	a5 9f       	mul	r26, r21
    141a:	90 0d       	add	r25, r0
    141c:	b4 9f       	mul	r27, r20
    141e:	90 0d       	add	r25, r0
    1420:	a4 9f       	mul	r26, r20
    1422:	80 0d       	add	r24, r0
    1424:	91 1d       	adc	r25, r1
    1426:	11 24       	eor	r1, r1
    1428:	08 95       	ret

0000142a <__mulshisi3>:
    142a:	b7 ff       	sbrs	r27, 7
    142c:	f4 cf       	rjmp	.-24     	; 0x1416 <__muluhisi3>

0000142e <__mulohisi3>:
    142e:	f3 df       	rcall	.-26     	; 0x1416 <__muluhisi3>
    1430:	82 1b       	sub	r24, r18
    1432:	93 0b       	sbc	r25, r19
    1434:	08 95       	ret

00001436 <__umulhisi3>:
    1436:	a2 9f       	mul	r26, r18
    1438:	b0 01       	movw	r22, r0
    143a:	b3 9f       	mul	r27, r19
    143c:	c0 01       	movw	r24, r0
    143e:	a3 9f       	mul	r26, r19
    1440:	70 0d       	add	r23, r0
    1442:	81 1d       	adc	r24, r1
    1444:	11 24       	eor	r1, r1
    1446:	91 1d       	adc	r25, r1
    1448:	b2 9f       	mul	r27, r18
    144a:	70 0d       	add	r23, r0
    144c:	81 1d       	adc	r24, r1
    144e:	11 24       	eor	r1, r1
    1450:	91 1d       	adc	r25, r1
    1452:	08 95       	ret

00001454 <_exit>:
    1454:	f8 94       	cli

00001456 <__stop_program>:
    1456:	ff cf       	rjmp	.-2      	; 0x1456 <__stop_program>
