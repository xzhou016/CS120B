
xzhou016_FinalProject.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000064  00800100  00001668  000016fc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001668  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000072  00800164  00800164  00001760  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001760  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001790  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f8  00000000  00000000  000017d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000ad3  00000000  00000000  000018c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000001eb  00000000  00000000  0000239b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000f6f  00000000  00000000  00002586  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000003e4  00000000  00000000  000034f8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000692  00000000  00000000  000038dc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000853  00000000  00000000  00003f6e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e8  00000000  00000000  000047c1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
       2:	00 00       	nop
       4:	61 c0       	rjmp	.+194    	; 0xc8 <__bad_interrupt>
       6:	00 00       	nop
       8:	5f c0       	rjmp	.+190    	; 0xc8 <__bad_interrupt>
       a:	00 00       	nop
       c:	5d c0       	rjmp	.+186    	; 0xc8 <__bad_interrupt>
       e:	00 00       	nop
      10:	5b c0       	rjmp	.+182    	; 0xc8 <__bad_interrupt>
      12:	00 00       	nop
      14:	59 c0       	rjmp	.+178    	; 0xc8 <__bad_interrupt>
      16:	00 00       	nop
      18:	57 c0       	rjmp	.+174    	; 0xc8 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	55 c0       	rjmp	.+170    	; 0xc8 <__bad_interrupt>
      1e:	00 00       	nop
      20:	53 c0       	rjmp	.+166    	; 0xc8 <__bad_interrupt>
      22:	00 00       	nop
      24:	51 c0       	rjmp	.+162    	; 0xc8 <__bad_interrupt>
      26:	00 00       	nop
      28:	4f c0       	rjmp	.+158    	; 0xc8 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	4d c0       	rjmp	.+154    	; 0xc8 <__bad_interrupt>
      2e:	00 00       	nop
      30:	4b c0       	rjmp	.+150    	; 0xc8 <__bad_interrupt>
      32:	00 00       	nop
      34:	b5 c1       	rjmp	.+874    	; 0x3a0 <__vector_13>
      36:	00 00       	nop
      38:	47 c0       	rjmp	.+142    	; 0xc8 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	45 c0       	rjmp	.+138    	; 0xc8 <__bad_interrupt>
      3e:	00 00       	nop
      40:	43 c0       	rjmp	.+134    	; 0xc8 <__bad_interrupt>
      42:	00 00       	nop
      44:	41 c0       	rjmp	.+130    	; 0xc8 <__bad_interrupt>
      46:	00 00       	nop
      48:	3f c0       	rjmp	.+126    	; 0xc8 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	3d c0       	rjmp	.+122    	; 0xc8 <__bad_interrupt>
      4e:	00 00       	nop
      50:	3b c0       	rjmp	.+118    	; 0xc8 <__bad_interrupt>
      52:	00 00       	nop
      54:	39 c0       	rjmp	.+114    	; 0xc8 <__bad_interrupt>
      56:	00 00       	nop
      58:	37 c0       	rjmp	.+110    	; 0xc8 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	35 c0       	rjmp	.+106    	; 0xc8 <__bad_interrupt>
      5e:	00 00       	nop
      60:	33 c0       	rjmp	.+102    	; 0xc8 <__bad_interrupt>
      62:	00 00       	nop
      64:	31 c0       	rjmp	.+98     	; 0xc8 <__bad_interrupt>
      66:	00 00       	nop
      68:	2f c0       	rjmp	.+94     	; 0xc8 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	2d c0       	rjmp	.+90     	; 0xc8 <__bad_interrupt>
      6e:	00 00       	nop
      70:	2b c0       	rjmp	.+86     	; 0xc8 <__bad_interrupt>
      72:	00 00       	nop
      74:	29 c0       	rjmp	.+82     	; 0xc8 <__bad_interrupt>
      76:	00 00       	nop
      78:	27 c0       	rjmp	.+78     	; 0xc8 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	25 c0       	rjmp	.+74     	; 0xc8 <__bad_interrupt>
      7e:	00 00       	nop
      80:	23 c0       	rjmp	.+70     	; 0xc8 <__bad_interrupt>
      82:	00 00       	nop
      84:	21 c0       	rjmp	.+66     	; 0xc8 <__bad_interrupt>
      86:	00 00       	nop
      88:	1f c0       	rjmp	.+62     	; 0xc8 <__bad_interrupt>
	...

0000008c <__ctors_end>:
      8c:	11 24       	eor	r1, r1
      8e:	1f be       	out	0x3f, r1	; 63
      90:	cf ef       	ldi	r28, 0xFF	; 255
      92:	d0 e4       	ldi	r29, 0x40	; 64
      94:	de bf       	out	0x3e, r29	; 62
      96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
      98:	11 e0       	ldi	r17, 0x01	; 1
      9a:	a0 e0       	ldi	r26, 0x00	; 0
      9c:	b1 e0       	ldi	r27, 0x01	; 1
      9e:	e8 e6       	ldi	r30, 0x68	; 104
      a0:	f6 e1       	ldi	r31, 0x16	; 22
      a2:	00 e0       	ldi	r16, 0x00	; 0
      a4:	0b bf       	out	0x3b, r16	; 59
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
      a8:	07 90       	elpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	a4 36       	cpi	r26, 0x64	; 100
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
      b2:	21 e0       	ldi	r18, 0x01	; 1
      b4:	a4 e6       	ldi	r26, 0x64	; 100
      b6:	b1 e0       	ldi	r27, 0x01	; 1
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	a6 3d       	cpi	r26, 0xD6	; 214
      be:	b2 07       	cpc	r27, r18
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	22 d7       	rcall	.+3652   	; 0xf08 <main>
      c4:	0c 94 32 0b 	jmp	0x1664	; 0x1664 <_exit>

000000c8 <__bad_interrupt>:
      c8:	9b cf       	rjmp	.-202    	; 0x0 <__vectors>

000000ca <LCD_ClearScreen>:
	for (unsigned char i = 0 ; i < shift; i++)
	{
		bulletRow[i] = bulletRow[i + 1];
	}
	bulletRow[16] = 0;
}
      ca:	cf 93       	push	r28
      cc:	df 93       	push	r29
      ce:	cd b7       	in	r28, 0x3d	; 61
      d0:	de b7       	in	r29, 0x3e	; 62
      d2:	81 e0       	ldi	r24, 0x01	; 1
      d4:	18 d0       	rcall	.+48     	; 0x106 <LCD_WriteCommand>
      d6:	df 91       	pop	r29
      d8:	cf 91       	pop	r28
      da:	08 95       	ret

000000dc <LCD_init>:
      dc:	cf 93       	push	r28
      de:	df 93       	push	r29
      e0:	cd b7       	in	r28, 0x3d	; 61
      e2:	de b7       	in	r29, 0x3e	; 62
      e4:	84 e6       	ldi	r24, 0x64	; 100
      e6:	90 e0       	ldi	r25, 0x00	; 0
      e8:	a6 d0       	rcall	.+332    	; 0x236 <delay_ms>
      ea:	88 e3       	ldi	r24, 0x38	; 56
      ec:	0c d0       	rcall	.+24     	; 0x106 <LCD_WriteCommand>
      ee:	86 e0       	ldi	r24, 0x06	; 6
      f0:	0a d0       	rcall	.+20     	; 0x106 <LCD_WriteCommand>
      f2:	8f e0       	ldi	r24, 0x0F	; 15
      f4:	08 d0       	rcall	.+16     	; 0x106 <LCD_WriteCommand>
      f6:	81 e0       	ldi	r24, 0x01	; 1
      f8:	06 d0       	rcall	.+12     	; 0x106 <LCD_WriteCommand>
      fa:	8a e0       	ldi	r24, 0x0A	; 10
      fc:	90 e0       	ldi	r25, 0x00	; 0
      fe:	9b d0       	rcall	.+310    	; 0x236 <delay_ms>
     100:	df 91       	pop	r29
     102:	cf 91       	pop	r28
     104:	08 95       	ret

00000106 <LCD_WriteCommand>:
     106:	cf 93       	push	r28
     108:	df 93       	push	r29
     10a:	1f 92       	push	r1
     10c:	cd b7       	in	r28, 0x3d	; 61
     10e:	de b7       	in	r29, 0x3e	; 62
     110:	89 83       	std	Y+1, r24	; 0x01
     112:	8b e2       	ldi	r24, 0x2B	; 43
     114:	90 e0       	ldi	r25, 0x00	; 0
     116:	2b e2       	ldi	r18, 0x2B	; 43
     118:	30 e0       	ldi	r19, 0x00	; 0
     11a:	f9 01       	movw	r30, r18
     11c:	20 81       	ld	r18, Z
     11e:	2f 7b       	andi	r18, 0xBF	; 191
     120:	fc 01       	movw	r30, r24
     122:	20 83       	st	Z, r18
     124:	85 e2       	ldi	r24, 0x25	; 37
     126:	90 e0       	ldi	r25, 0x00	; 0
     128:	29 81       	ldd	r18, Y+1	; 0x01
     12a:	fc 01       	movw	r30, r24
     12c:	20 83       	st	Z, r18
     12e:	8b e2       	ldi	r24, 0x2B	; 43
     130:	90 e0       	ldi	r25, 0x00	; 0
     132:	2b e2       	ldi	r18, 0x2B	; 43
     134:	30 e0       	ldi	r19, 0x00	; 0
     136:	f9 01       	movw	r30, r18
     138:	20 81       	ld	r18, Z
     13a:	20 68       	ori	r18, 0x80	; 128
     13c:	fc 01       	movw	r30, r24
     13e:	20 83       	st	Z, r18
     140:	00 00       	nop
     142:	8b e2       	ldi	r24, 0x2B	; 43
     144:	90 e0       	ldi	r25, 0x00	; 0
     146:	2b e2       	ldi	r18, 0x2B	; 43
     148:	30 e0       	ldi	r19, 0x00	; 0
     14a:	f9 01       	movw	r30, r18
     14c:	20 81       	ld	r18, Z
     14e:	2f 77       	andi	r18, 0x7F	; 127
     150:	fc 01       	movw	r30, r24
     152:	20 83       	st	Z, r18
     154:	82 e0       	ldi	r24, 0x02	; 2
     156:	90 e0       	ldi	r25, 0x00	; 0
     158:	6e d0       	rcall	.+220    	; 0x236 <delay_ms>
     15a:	0f 90       	pop	r0
     15c:	df 91       	pop	r29
     15e:	cf 91       	pop	r28
     160:	08 95       	ret

00000162 <LCD_WriteData>:
     162:	cf 93       	push	r28
     164:	df 93       	push	r29
     166:	1f 92       	push	r1
     168:	cd b7       	in	r28, 0x3d	; 61
     16a:	de b7       	in	r29, 0x3e	; 62
     16c:	89 83       	std	Y+1, r24	; 0x01
     16e:	8b e2       	ldi	r24, 0x2B	; 43
     170:	90 e0       	ldi	r25, 0x00	; 0
     172:	2b e2       	ldi	r18, 0x2B	; 43
     174:	30 e0       	ldi	r19, 0x00	; 0
     176:	f9 01       	movw	r30, r18
     178:	20 81       	ld	r18, Z
     17a:	20 64       	ori	r18, 0x40	; 64
     17c:	fc 01       	movw	r30, r24
     17e:	20 83       	st	Z, r18
     180:	85 e2       	ldi	r24, 0x25	; 37
     182:	90 e0       	ldi	r25, 0x00	; 0
     184:	29 81       	ldd	r18, Y+1	; 0x01
     186:	fc 01       	movw	r30, r24
     188:	20 83       	st	Z, r18
     18a:	8b e2       	ldi	r24, 0x2B	; 43
     18c:	90 e0       	ldi	r25, 0x00	; 0
     18e:	2b e2       	ldi	r18, 0x2B	; 43
     190:	30 e0       	ldi	r19, 0x00	; 0
     192:	f9 01       	movw	r30, r18
     194:	20 81       	ld	r18, Z
     196:	20 68       	ori	r18, 0x80	; 128
     198:	fc 01       	movw	r30, r24
     19a:	20 83       	st	Z, r18
     19c:	00 00       	nop
     19e:	8b e2       	ldi	r24, 0x2B	; 43
     1a0:	90 e0       	ldi	r25, 0x00	; 0
     1a2:	2b e2       	ldi	r18, 0x2B	; 43
     1a4:	30 e0       	ldi	r19, 0x00	; 0
     1a6:	f9 01       	movw	r30, r18
     1a8:	20 81       	ld	r18, Z
     1aa:	2f 77       	andi	r18, 0x7F	; 127
     1ac:	fc 01       	movw	r30, r24
     1ae:	20 83       	st	Z, r18
     1b0:	81 e0       	ldi	r24, 0x01	; 1
     1b2:	90 e0       	ldi	r25, 0x00	; 0
     1b4:	40 d0       	rcall	.+128    	; 0x236 <delay_ms>
     1b6:	0f 90       	pop	r0
     1b8:	df 91       	pop	r29
     1ba:	cf 91       	pop	r28
     1bc:	08 95       	ret

000001be <LCD_DisplayString>:
     1be:	cf 93       	push	r28
     1c0:	df 93       	push	r29
     1c2:	00 d0       	rcall	.+0      	; 0x1c4 <LCD_DisplayString+0x6>
     1c4:	00 d0       	rcall	.+0      	; 0x1c6 <LCD_DisplayString+0x8>
     1c6:	cd b7       	in	r28, 0x3d	; 61
     1c8:	de b7       	in	r29, 0x3e	; 62
     1ca:	8a 83       	std	Y+2, r24	; 0x02
     1cc:	7c 83       	std	Y+4, r23	; 0x04
     1ce:	6b 83       	std	Y+3, r22	; 0x03
     1d0:	8a 81       	ldd	r24, Y+2	; 0x02
     1d2:	89 83       	std	Y+1, r24	; 0x01
     1d4:	0f c0       	rjmp	.+30     	; 0x1f4 <LCD_DisplayString+0x36>
     1d6:	89 81       	ldd	r24, Y+1	; 0x01
     1d8:	91 e0       	ldi	r25, 0x01	; 1
     1da:	98 0f       	add	r25, r24
     1dc:	99 83       	std	Y+1, r25	; 0x01
     1de:	17 d0       	rcall	.+46     	; 0x20e <LCD_Cursor>
     1e0:	8b 81       	ldd	r24, Y+3	; 0x03
     1e2:	9c 81       	ldd	r25, Y+4	; 0x04
     1e4:	9c 01       	movw	r18, r24
     1e6:	2f 5f       	subi	r18, 0xFF	; 255
     1e8:	3f 4f       	sbci	r19, 0xFF	; 255
     1ea:	3c 83       	std	Y+4, r19	; 0x04
     1ec:	2b 83       	std	Y+3, r18	; 0x03
     1ee:	fc 01       	movw	r30, r24
     1f0:	80 81       	ld	r24, Z
     1f2:	b7 df       	rcall	.-146    	; 0x162 <LCD_WriteData>
     1f4:	8b 81       	ldd	r24, Y+3	; 0x03
     1f6:	9c 81       	ldd	r25, Y+4	; 0x04
     1f8:	fc 01       	movw	r30, r24
     1fa:	80 81       	ld	r24, Z
     1fc:	88 23       	and	r24, r24
     1fe:	59 f7       	brne	.-42     	; 0x1d6 <LCD_DisplayString+0x18>
     200:	0f 90       	pop	r0
     202:	0f 90       	pop	r0
     204:	0f 90       	pop	r0
     206:	0f 90       	pop	r0
     208:	df 91       	pop	r29
     20a:	cf 91       	pop	r28
     20c:	08 95       	ret

0000020e <LCD_Cursor>:
     20e:	cf 93       	push	r28
     210:	df 93       	push	r29
     212:	1f 92       	push	r1
     214:	cd b7       	in	r28, 0x3d	; 61
     216:	de b7       	in	r29, 0x3e	; 62
     218:	89 83       	std	Y+1, r24	; 0x01
     21a:	89 81       	ldd	r24, Y+1	; 0x01
     21c:	81 31       	cpi	r24, 0x11	; 17
     21e:	20 f4       	brcc	.+8      	; 0x228 <LCD_Cursor+0x1a>
     220:	89 81       	ldd	r24, Y+1	; 0x01
     222:	81 58       	subi	r24, 0x81	; 129
     224:	70 df       	rcall	.-288    	; 0x106 <LCD_WriteCommand>
     226:	03 c0       	rjmp	.+6      	; 0x22e <LCD_Cursor+0x20>
     228:	89 81       	ldd	r24, Y+1	; 0x01
     22a:	81 55       	subi	r24, 0x51	; 81
     22c:	6c df       	rcall	.-296    	; 0x106 <LCD_WriteCommand>
     22e:	0f 90       	pop	r0
     230:	df 91       	pop	r29
     232:	cf 91       	pop	r28
     234:	08 95       	ret

00000236 <delay_ms>:
     236:	cf 93       	push	r28
     238:	df 93       	push	r29
     23a:	00 d0       	rcall	.+0      	; 0x23c <delay_ms+0x6>
     23c:	00 d0       	rcall	.+0      	; 0x23e <delay_ms+0x8>
     23e:	00 d0       	rcall	.+0      	; 0x240 <delay_ms+0xa>
     240:	cd b7       	in	r28, 0x3d	; 61
     242:	de b7       	in	r29, 0x3e	; 62
     244:	9e 83       	std	Y+6, r25	; 0x06
     246:	8d 83       	std	Y+5, r24	; 0x05
     248:	1a 82       	std	Y+2, r1	; 0x02
     24a:	19 82       	std	Y+1, r1	; 0x01
     24c:	13 c0       	rjmp	.+38     	; 0x274 <delay_ms+0x3e>
     24e:	1c 82       	std	Y+4, r1	; 0x04
     250:	1b 82       	std	Y+3, r1	; 0x03
     252:	06 c0       	rjmp	.+12     	; 0x260 <delay_ms+0x2a>
     254:	00 00       	nop
     256:	8b 81       	ldd	r24, Y+3	; 0x03
     258:	9c 81       	ldd	r25, Y+4	; 0x04
     25a:	01 96       	adiw	r24, 0x01	; 1
     25c:	9c 83       	std	Y+4, r25	; 0x04
     25e:	8b 83       	std	Y+3, r24	; 0x03
     260:	8b 81       	ldd	r24, Y+3	; 0x03
     262:	9c 81       	ldd	r25, Y+4	; 0x04
     264:	87 30       	cpi	r24, 0x07	; 7
     266:	93 40       	sbci	r25, 0x03	; 3
     268:	ac f3       	brlt	.-22     	; 0x254 <delay_ms+0x1e>
     26a:	89 81       	ldd	r24, Y+1	; 0x01
     26c:	9a 81       	ldd	r25, Y+2	; 0x02
     26e:	01 96       	adiw	r24, 0x01	; 1
     270:	9a 83       	std	Y+2, r25	; 0x02
     272:	89 83       	std	Y+1, r24	; 0x01
     274:	29 81       	ldd	r18, Y+1	; 0x01
     276:	3a 81       	ldd	r19, Y+2	; 0x02
     278:	8d 81       	ldd	r24, Y+5	; 0x05
     27a:	9e 81       	ldd	r25, Y+6	; 0x06
     27c:	28 17       	cp	r18, r24
     27e:	39 07       	cpc	r19, r25
     280:	34 f3       	brlt	.-52     	; 0x24e <delay_ms+0x18>
     282:	26 96       	adiw	r28, 0x06	; 6
     284:	0f b6       	in	r0, 0x3f	; 63
     286:	f8 94       	cli
     288:	de bf       	out	0x3e, r29	; 62
     28a:	0f be       	out	0x3f, r0	; 63
     28c:	cd bf       	out	0x3d, r28	; 61
     28e:	df 91       	pop	r29
     290:	cf 91       	pop	r28
     292:	08 95       	ret

00000294 <GetBit>:
     294:	cf 93       	push	r28
     296:	df 93       	push	r29
     298:	00 d0       	rcall	.+0      	; 0x29a <GetBit+0x6>
     29a:	cd b7       	in	r28, 0x3d	; 61
     29c:	de b7       	in	r29, 0x3e	; 62
     29e:	89 83       	std	Y+1, r24	; 0x01
     2a0:	6a 83       	std	Y+2, r22	; 0x02
     2a2:	8a 81       	ldd	r24, Y+2	; 0x02
     2a4:	28 2f       	mov	r18, r24
     2a6:	30 e0       	ldi	r19, 0x00	; 0
     2a8:	81 e0       	ldi	r24, 0x01	; 1
     2aa:	90 e0       	ldi	r25, 0x00	; 0
     2ac:	02 c0       	rjmp	.+4      	; 0x2b2 <GetBit+0x1e>
     2ae:	88 0f       	add	r24, r24
     2b0:	99 1f       	adc	r25, r25
     2b2:	2a 95       	dec	r18
     2b4:	e2 f7       	brpl	.-8      	; 0x2ae <GetBit+0x1a>
     2b6:	98 2f       	mov	r25, r24
     2b8:	89 81       	ldd	r24, Y+1	; 0x01
     2ba:	89 23       	and	r24, r25
     2bc:	0f 90       	pop	r0
     2be:	0f 90       	pop	r0
     2c0:	df 91       	pop	r29
     2c2:	cf 91       	pop	r28
     2c4:	08 95       	ret

000002c6 <TimerSet>:
     2c6:	cf 93       	push	r28
     2c8:	df 93       	push	r29
     2ca:	00 d0       	rcall	.+0      	; 0x2cc <TimerSet+0x6>
     2cc:	00 d0       	rcall	.+0      	; 0x2ce <TimerSet+0x8>
     2ce:	cd b7       	in	r28, 0x3d	; 61
     2d0:	de b7       	in	r29, 0x3e	; 62
     2d2:	69 83       	std	Y+1, r22	; 0x01
     2d4:	7a 83       	std	Y+2, r23	; 0x02
     2d6:	8b 83       	std	Y+3, r24	; 0x03
     2d8:	9c 83       	std	Y+4, r25	; 0x04
     2da:	89 81       	ldd	r24, Y+1	; 0x01
     2dc:	9a 81       	ldd	r25, Y+2	; 0x02
     2de:	ab 81       	ldd	r26, Y+3	; 0x03
     2e0:	bc 81       	ldd	r27, Y+4	; 0x04
     2e2:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <_avr_timer_M>
     2e6:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <_avr_timer_M+0x1>
     2ea:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <_avr_timer_M+0x2>
     2ee:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <_avr_timer_M+0x3>
     2f2:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <_avr_timer_M>
     2f6:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <_avr_timer_M+0x1>
     2fa:	a0 91 06 01 	lds	r26, 0x0106	; 0x800106 <_avr_timer_M+0x2>
     2fe:	b0 91 07 01 	lds	r27, 0x0107	; 0x800107 <_avr_timer_M+0x3>
     302:	80 93 65 01 	sts	0x0165, r24	; 0x800165 <_avr_timer_cntcurr>
     306:	90 93 66 01 	sts	0x0166, r25	; 0x800166 <_avr_timer_cntcurr+0x1>
     30a:	a0 93 67 01 	sts	0x0167, r26	; 0x800167 <_avr_timer_cntcurr+0x2>
     30e:	b0 93 68 01 	sts	0x0168, r27	; 0x800168 <_avr_timer_cntcurr+0x3>
     312:	0f 90       	pop	r0
     314:	0f 90       	pop	r0
     316:	0f 90       	pop	r0
     318:	0f 90       	pop	r0
     31a:	df 91       	pop	r29
     31c:	cf 91       	pop	r28
     31e:	08 95       	ret

00000320 <TimerOn>:
     320:	cf 93       	push	r28
     322:	df 93       	push	r29
     324:	cd b7       	in	r28, 0x3d	; 61
     326:	de b7       	in	r29, 0x3e	; 62
     328:	81 e8       	ldi	r24, 0x81	; 129
     32a:	90 e0       	ldi	r25, 0x00	; 0
     32c:	2b e0       	ldi	r18, 0x0B	; 11
     32e:	fc 01       	movw	r30, r24
     330:	20 83       	st	Z, r18
     332:	88 e8       	ldi	r24, 0x88	; 136
     334:	90 e0       	ldi	r25, 0x00	; 0
     336:	2d e7       	ldi	r18, 0x7D	; 125
     338:	30 e0       	ldi	r19, 0x00	; 0
     33a:	fc 01       	movw	r30, r24
     33c:	31 83       	std	Z+1, r19	; 0x01
     33e:	20 83       	st	Z, r18
     340:	8f e6       	ldi	r24, 0x6F	; 111
     342:	90 e0       	ldi	r25, 0x00	; 0
     344:	22 e0       	ldi	r18, 0x02	; 2
     346:	fc 01       	movw	r30, r24
     348:	20 83       	st	Z, r18
     34a:	84 e8       	ldi	r24, 0x84	; 132
     34c:	90 e0       	ldi	r25, 0x00	; 0
     34e:	fc 01       	movw	r30, r24
     350:	11 82       	std	Z+1, r1	; 0x01
     352:	10 82       	st	Z, r1
     354:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <_avr_timer_M>
     358:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <_avr_timer_M+0x1>
     35c:	a0 91 06 01 	lds	r26, 0x0106	; 0x800106 <_avr_timer_M+0x2>
     360:	b0 91 07 01 	lds	r27, 0x0107	; 0x800107 <_avr_timer_M+0x3>
     364:	80 93 65 01 	sts	0x0165, r24	; 0x800165 <_avr_timer_cntcurr>
     368:	90 93 66 01 	sts	0x0166, r25	; 0x800166 <_avr_timer_cntcurr+0x1>
     36c:	a0 93 67 01 	sts	0x0167, r26	; 0x800167 <_avr_timer_cntcurr+0x2>
     370:	b0 93 68 01 	sts	0x0168, r27	; 0x800168 <_avr_timer_cntcurr+0x3>
     374:	8f e5       	ldi	r24, 0x5F	; 95
     376:	90 e0       	ldi	r25, 0x00	; 0
     378:	2f e5       	ldi	r18, 0x5F	; 95
     37a:	30 e0       	ldi	r19, 0x00	; 0
     37c:	f9 01       	movw	r30, r18
     37e:	20 81       	ld	r18, Z
     380:	20 68       	ori	r18, 0x80	; 128
     382:	fc 01       	movw	r30, r24
     384:	20 83       	st	Z, r18
     386:	df 91       	pop	r29
     388:	cf 91       	pop	r28
     38a:	08 95       	ret

0000038c <TimerISR>:
     38c:	cf 93       	push	r28
     38e:	df 93       	push	r29
     390:	cd b7       	in	r28, 0x3d	; 61
     392:	de b7       	in	r29, 0x3e	; 62
     394:	81 e0       	ldi	r24, 0x01	; 1
     396:	80 93 64 01 	sts	0x0164, r24	; 0x800164 <__data_end>
     39a:	df 91       	pop	r29
     39c:	cf 91       	pop	r28
     39e:	08 95       	ret

000003a0 <__vector_13>:
     3a0:	1f 92       	push	r1
     3a2:	0f 92       	push	r0
     3a4:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     3a8:	0f 92       	push	r0
     3aa:	11 24       	eor	r1, r1
     3ac:	00 90 5b 00 	lds	r0, 0x005B	; 0x80005b <__TEXT_REGION_LENGTH__+0x7e005b>
     3b0:	0f 92       	push	r0
     3b2:	2f 93       	push	r18
     3b4:	3f 93       	push	r19
     3b6:	4f 93       	push	r20
     3b8:	5f 93       	push	r21
     3ba:	6f 93       	push	r22
     3bc:	7f 93       	push	r23
     3be:	8f 93       	push	r24
     3c0:	9f 93       	push	r25
     3c2:	af 93       	push	r26
     3c4:	bf 93       	push	r27
     3c6:	ef 93       	push	r30
     3c8:	ff 93       	push	r31
     3ca:	cf 93       	push	r28
     3cc:	df 93       	push	r29
     3ce:	cd b7       	in	r28, 0x3d	; 61
     3d0:	de b7       	in	r29, 0x3e	; 62
     3d2:	80 91 65 01 	lds	r24, 0x0165	; 0x800165 <_avr_timer_cntcurr>
     3d6:	90 91 66 01 	lds	r25, 0x0166	; 0x800166 <_avr_timer_cntcurr+0x1>
     3da:	a0 91 67 01 	lds	r26, 0x0167	; 0x800167 <_avr_timer_cntcurr+0x2>
     3de:	b0 91 68 01 	lds	r27, 0x0168	; 0x800168 <_avr_timer_cntcurr+0x3>
     3e2:	01 97       	sbiw	r24, 0x01	; 1
     3e4:	a1 09       	sbc	r26, r1
     3e6:	b1 09       	sbc	r27, r1
     3e8:	80 93 65 01 	sts	0x0165, r24	; 0x800165 <_avr_timer_cntcurr>
     3ec:	90 93 66 01 	sts	0x0166, r25	; 0x800166 <_avr_timer_cntcurr+0x1>
     3f0:	a0 93 67 01 	sts	0x0167, r26	; 0x800167 <_avr_timer_cntcurr+0x2>
     3f4:	b0 93 68 01 	sts	0x0168, r27	; 0x800168 <_avr_timer_cntcurr+0x3>
     3f8:	80 91 65 01 	lds	r24, 0x0165	; 0x800165 <_avr_timer_cntcurr>
     3fc:	90 91 66 01 	lds	r25, 0x0166	; 0x800166 <_avr_timer_cntcurr+0x1>
     400:	a0 91 67 01 	lds	r26, 0x0167	; 0x800167 <_avr_timer_cntcurr+0x2>
     404:	b0 91 68 01 	lds	r27, 0x0168	; 0x800168 <_avr_timer_cntcurr+0x3>
     408:	89 2b       	or	r24, r25
     40a:	8a 2b       	or	r24, r26
     40c:	8b 2b       	or	r24, r27
     40e:	89 f4       	brne	.+34     	; 0x432 <__FUSE_REGION_LENGTH__+0x32>
     410:	bd df       	rcall	.-134    	; 0x38c <TimerISR>
     412:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <_avr_timer_M>
     416:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <_avr_timer_M+0x1>
     41a:	a0 91 06 01 	lds	r26, 0x0106	; 0x800106 <_avr_timer_M+0x2>
     41e:	b0 91 07 01 	lds	r27, 0x0107	; 0x800107 <_avr_timer_M+0x3>
     422:	80 93 65 01 	sts	0x0165, r24	; 0x800165 <_avr_timer_cntcurr>
     426:	90 93 66 01 	sts	0x0166, r25	; 0x800166 <_avr_timer_cntcurr+0x1>
     42a:	a0 93 67 01 	sts	0x0167, r26	; 0x800167 <_avr_timer_cntcurr+0x2>
     42e:	b0 93 68 01 	sts	0x0168, r27	; 0x800168 <_avr_timer_cntcurr+0x3>
     432:	df 91       	pop	r29
     434:	cf 91       	pop	r28
     436:	ff 91       	pop	r31
     438:	ef 91       	pop	r30
     43a:	bf 91       	pop	r27
     43c:	af 91       	pop	r26
     43e:	9f 91       	pop	r25
     440:	8f 91       	pop	r24
     442:	7f 91       	pop	r23
     444:	6f 91       	pop	r22
     446:	5f 91       	pop	r21
     448:	4f 91       	pop	r20
     44a:	3f 91       	pop	r19
     44c:	2f 91       	pop	r18
     44e:	0f 90       	pop	r0
     450:	00 92 5b 00 	sts	0x005B, r0	; 0x80005b <__TEXT_REGION_LENGTH__+0x7e005b>
     454:	0f 90       	pop	r0
     456:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     45a:	0f 90       	pop	r0
     45c:	1f 90       	pop	r1
     45e:	18 95       	reti

00000460 <findGCD>:
     460:	cf 93       	push	r28
     462:	df 93       	push	r29
     464:	cd b7       	in	r28, 0x3d	; 61
     466:	de b7       	in	r29, 0x3e	; 62
     468:	60 97       	sbiw	r28, 0x10	; 16
     46a:	0f b6       	in	r0, 0x3f	; 63
     46c:	f8 94       	cli
     46e:	de bf       	out	0x3e, r29	; 62
     470:	0f be       	out	0x3f, r0	; 63
     472:	cd bf       	out	0x3d, r28	; 61
     474:	6d 83       	std	Y+5, r22	; 0x05
     476:	7e 83       	std	Y+6, r23	; 0x06
     478:	8f 83       	std	Y+7, r24	; 0x07
     47a:	98 87       	std	Y+8, r25	; 0x08
     47c:	29 87       	std	Y+9, r18	; 0x09
     47e:	3a 87       	std	Y+10, r19	; 0x0a
     480:	4b 87       	std	Y+11, r20	; 0x0b
     482:	5c 87       	std	Y+12, r21	; 0x0c
     484:	8d 81       	ldd	r24, Y+5	; 0x05
     486:	9e 81       	ldd	r25, Y+6	; 0x06
     488:	af 81       	ldd	r26, Y+7	; 0x07
     48a:	b8 85       	ldd	r27, Y+8	; 0x08
     48c:	29 85       	ldd	r18, Y+9	; 0x09
     48e:	3a 85       	ldd	r19, Y+10	; 0x0a
     490:	4b 85       	ldd	r20, Y+11	; 0x0b
     492:	5c 85       	ldd	r21, Y+12	; 0x0c
     494:	bc 01       	movw	r22, r24
     496:	cd 01       	movw	r24, r26
     498:	0e 94 6c 0a 	call	0x14d8	; 0x14d8 <__udivmodsi4>
     49c:	dc 01       	movw	r26, r24
     49e:	cb 01       	movw	r24, r22
     4a0:	89 83       	std	Y+1, r24	; 0x01
     4a2:	9a 83       	std	Y+2, r25	; 0x02
     4a4:	ab 83       	std	Y+3, r26	; 0x03
     4a6:	bc 83       	std	Y+4, r27	; 0x04
     4a8:	89 81       	ldd	r24, Y+1	; 0x01
     4aa:	9a 81       	ldd	r25, Y+2	; 0x02
     4ac:	ab 81       	ldd	r26, Y+3	; 0x03
     4ae:	bc 81       	ldd	r27, Y+4	; 0x04
     4b0:	89 2b       	or	r24, r25
     4b2:	8a 2b       	or	r24, r26
     4b4:	8b 2b       	or	r24, r27
     4b6:	29 f4       	brne	.+10     	; 0x4c2 <findGCD+0x62>
     4b8:	89 85       	ldd	r24, Y+9	; 0x09
     4ba:	9a 85       	ldd	r25, Y+10	; 0x0a
     4bc:	ab 85       	ldd	r26, Y+11	; 0x0b
     4be:	bc 85       	ldd	r27, Y+12	; 0x0c
     4c0:	11 c0       	rjmp	.+34     	; 0x4e4 <findGCD+0x84>
     4c2:	89 85       	ldd	r24, Y+9	; 0x09
     4c4:	9a 85       	ldd	r25, Y+10	; 0x0a
     4c6:	ab 85       	ldd	r26, Y+11	; 0x0b
     4c8:	bc 85       	ldd	r27, Y+12	; 0x0c
     4ca:	8d 83       	std	Y+5, r24	; 0x05
     4cc:	9e 83       	std	Y+6, r25	; 0x06
     4ce:	af 83       	std	Y+7, r26	; 0x07
     4d0:	b8 87       	std	Y+8, r27	; 0x08
     4d2:	89 81       	ldd	r24, Y+1	; 0x01
     4d4:	9a 81       	ldd	r25, Y+2	; 0x02
     4d6:	ab 81       	ldd	r26, Y+3	; 0x03
     4d8:	bc 81       	ldd	r27, Y+4	; 0x04
     4da:	89 87       	std	Y+9, r24	; 0x09
     4dc:	9a 87       	std	Y+10, r25	; 0x0a
     4de:	ab 87       	std	Y+11, r26	; 0x0b
     4e0:	bc 87       	std	Y+12, r27	; 0x0c
     4e2:	d0 cf       	rjmp	.-96     	; 0x484 <findGCD+0x24>
     4e4:	bc 01       	movw	r22, r24
     4e6:	cd 01       	movw	r24, r26
     4e8:	60 96       	adiw	r28, 0x10	; 16
     4ea:	0f b6       	in	r0, 0x3f	; 63
     4ec:	f8 94       	cli
     4ee:	de bf       	out	0x3e, r29	; 62
     4f0:	0f be       	out	0x3f, r0	; 63
     4f2:	cd bf       	out	0x3d, r28	; 61
     4f4:	df 91       	pop	r29
     4f6:	cf 91       	pop	r28
     4f8:	08 95       	ret

000004fa <GetKeypadKey>:
     4fa:	cf 93       	push	r28
     4fc:	df 93       	push	r29
     4fe:	cd b7       	in	r28, 0x3d	; 61
     500:	de b7       	in	r29, 0x3e	; 62
     502:	88 e2       	ldi	r24, 0x28	; 40
     504:	90 e0       	ldi	r25, 0x00	; 0
     506:	2f ee       	ldi	r18, 0xEF	; 239
     508:	fc 01       	movw	r30, r24
     50a:	20 83       	st	Z, r18
     50c:	00 00       	nop
     50e:	86 e2       	ldi	r24, 0x26	; 38
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	fc 01       	movw	r30, r24
     514:	80 81       	ld	r24, Z
     516:	60 e0       	ldi	r22, 0x00	; 0
     518:	bd de       	rcall	.-646    	; 0x294 <GetBit>
     51a:	88 23       	and	r24, r24
     51c:	11 f4       	brne	.+4      	; 0x522 <GetKeypadKey+0x28>
     51e:	81 e3       	ldi	r24, 0x31	; 49
     520:	a9 c0       	rjmp	.+338    	; 0x674 <GetKeypadKey+0x17a>
     522:	86 e2       	ldi	r24, 0x26	; 38
     524:	90 e0       	ldi	r25, 0x00	; 0
     526:	fc 01       	movw	r30, r24
     528:	80 81       	ld	r24, Z
     52a:	61 e0       	ldi	r22, 0x01	; 1
     52c:	b3 de       	rcall	.-666    	; 0x294 <GetBit>
     52e:	88 23       	and	r24, r24
     530:	11 f4       	brne	.+4      	; 0x536 <GetKeypadKey+0x3c>
     532:	82 e3       	ldi	r24, 0x32	; 50
     534:	9f c0       	rjmp	.+318    	; 0x674 <GetKeypadKey+0x17a>
     536:	86 e2       	ldi	r24, 0x26	; 38
     538:	90 e0       	ldi	r25, 0x00	; 0
     53a:	fc 01       	movw	r30, r24
     53c:	80 81       	ld	r24, Z
     53e:	62 e0       	ldi	r22, 0x02	; 2
     540:	a9 de       	rcall	.-686    	; 0x294 <GetBit>
     542:	88 23       	and	r24, r24
     544:	11 f4       	brne	.+4      	; 0x54a <GetKeypadKey+0x50>
     546:	83 e3       	ldi	r24, 0x33	; 51
     548:	95 c0       	rjmp	.+298    	; 0x674 <GetKeypadKey+0x17a>
     54a:	86 e2       	ldi	r24, 0x26	; 38
     54c:	90 e0       	ldi	r25, 0x00	; 0
     54e:	fc 01       	movw	r30, r24
     550:	80 81       	ld	r24, Z
     552:	63 e0       	ldi	r22, 0x03	; 3
     554:	9f de       	rcall	.-706    	; 0x294 <GetBit>
     556:	88 23       	and	r24, r24
     558:	11 f4       	brne	.+4      	; 0x55e <GetKeypadKey+0x64>
     55a:	81 e4       	ldi	r24, 0x41	; 65
     55c:	8b c0       	rjmp	.+278    	; 0x674 <GetKeypadKey+0x17a>
     55e:	88 e2       	ldi	r24, 0x28	; 40
     560:	90 e0       	ldi	r25, 0x00	; 0
     562:	2f ed       	ldi	r18, 0xDF	; 223
     564:	fc 01       	movw	r30, r24
     566:	20 83       	st	Z, r18
     568:	00 00       	nop
     56a:	86 e2       	ldi	r24, 0x26	; 38
     56c:	90 e0       	ldi	r25, 0x00	; 0
     56e:	fc 01       	movw	r30, r24
     570:	80 81       	ld	r24, Z
     572:	60 e0       	ldi	r22, 0x00	; 0
     574:	8f de       	rcall	.-738    	; 0x294 <GetBit>
     576:	88 23       	and	r24, r24
     578:	11 f4       	brne	.+4      	; 0x57e <GetKeypadKey+0x84>
     57a:	84 e3       	ldi	r24, 0x34	; 52
     57c:	7b c0       	rjmp	.+246    	; 0x674 <GetKeypadKey+0x17a>
     57e:	86 e2       	ldi	r24, 0x26	; 38
     580:	90 e0       	ldi	r25, 0x00	; 0
     582:	fc 01       	movw	r30, r24
     584:	80 81       	ld	r24, Z
     586:	61 e0       	ldi	r22, 0x01	; 1
     588:	85 de       	rcall	.-758    	; 0x294 <GetBit>
     58a:	88 23       	and	r24, r24
     58c:	11 f4       	brne	.+4      	; 0x592 <GetKeypadKey+0x98>
     58e:	85 e3       	ldi	r24, 0x35	; 53
     590:	71 c0       	rjmp	.+226    	; 0x674 <GetKeypadKey+0x17a>
     592:	86 e2       	ldi	r24, 0x26	; 38
     594:	90 e0       	ldi	r25, 0x00	; 0
     596:	fc 01       	movw	r30, r24
     598:	80 81       	ld	r24, Z
     59a:	62 e0       	ldi	r22, 0x02	; 2
     59c:	7b de       	rcall	.-778    	; 0x294 <GetBit>
     59e:	88 23       	and	r24, r24
     5a0:	11 f4       	brne	.+4      	; 0x5a6 <GetKeypadKey+0xac>
     5a2:	86 e3       	ldi	r24, 0x36	; 54
     5a4:	67 c0       	rjmp	.+206    	; 0x674 <GetKeypadKey+0x17a>
     5a6:	86 e2       	ldi	r24, 0x26	; 38
     5a8:	90 e0       	ldi	r25, 0x00	; 0
     5aa:	fc 01       	movw	r30, r24
     5ac:	80 81       	ld	r24, Z
     5ae:	63 e0       	ldi	r22, 0x03	; 3
     5b0:	71 de       	rcall	.-798    	; 0x294 <GetBit>
     5b2:	88 23       	and	r24, r24
     5b4:	11 f4       	brne	.+4      	; 0x5ba <GetKeypadKey+0xc0>
     5b6:	82 e4       	ldi	r24, 0x42	; 66
     5b8:	5d c0       	rjmp	.+186    	; 0x674 <GetKeypadKey+0x17a>
     5ba:	88 e2       	ldi	r24, 0x28	; 40
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	2f eb       	ldi	r18, 0xBF	; 191
     5c0:	fc 01       	movw	r30, r24
     5c2:	20 83       	st	Z, r18
     5c4:	00 00       	nop
     5c6:	86 e2       	ldi	r24, 0x26	; 38
     5c8:	90 e0       	ldi	r25, 0x00	; 0
     5ca:	fc 01       	movw	r30, r24
     5cc:	80 81       	ld	r24, Z
     5ce:	60 e0       	ldi	r22, 0x00	; 0
     5d0:	61 de       	rcall	.-830    	; 0x294 <GetBit>
     5d2:	88 23       	and	r24, r24
     5d4:	11 f4       	brne	.+4      	; 0x5da <GetKeypadKey+0xe0>
     5d6:	87 e3       	ldi	r24, 0x37	; 55
     5d8:	4d c0       	rjmp	.+154    	; 0x674 <GetKeypadKey+0x17a>
     5da:	86 e2       	ldi	r24, 0x26	; 38
     5dc:	90 e0       	ldi	r25, 0x00	; 0
     5de:	fc 01       	movw	r30, r24
     5e0:	80 81       	ld	r24, Z
     5e2:	61 e0       	ldi	r22, 0x01	; 1
     5e4:	57 de       	rcall	.-850    	; 0x294 <GetBit>
     5e6:	88 23       	and	r24, r24
     5e8:	11 f4       	brne	.+4      	; 0x5ee <GetKeypadKey+0xf4>
     5ea:	88 e3       	ldi	r24, 0x38	; 56
     5ec:	43 c0       	rjmp	.+134    	; 0x674 <GetKeypadKey+0x17a>
     5ee:	86 e2       	ldi	r24, 0x26	; 38
     5f0:	90 e0       	ldi	r25, 0x00	; 0
     5f2:	fc 01       	movw	r30, r24
     5f4:	80 81       	ld	r24, Z
     5f6:	62 e0       	ldi	r22, 0x02	; 2
     5f8:	4d de       	rcall	.-870    	; 0x294 <GetBit>
     5fa:	88 23       	and	r24, r24
     5fc:	11 f4       	brne	.+4      	; 0x602 <GetKeypadKey+0x108>
     5fe:	89 e3       	ldi	r24, 0x39	; 57
     600:	39 c0       	rjmp	.+114    	; 0x674 <GetKeypadKey+0x17a>
     602:	86 e2       	ldi	r24, 0x26	; 38
     604:	90 e0       	ldi	r25, 0x00	; 0
     606:	fc 01       	movw	r30, r24
     608:	80 81       	ld	r24, Z
     60a:	63 e0       	ldi	r22, 0x03	; 3
     60c:	43 de       	rcall	.-890    	; 0x294 <GetBit>
     60e:	88 23       	and	r24, r24
     610:	11 f4       	brne	.+4      	; 0x616 <GetKeypadKey+0x11c>
     612:	83 e4       	ldi	r24, 0x43	; 67
     614:	2f c0       	rjmp	.+94     	; 0x674 <GetKeypadKey+0x17a>
     616:	88 e2       	ldi	r24, 0x28	; 40
     618:	90 e0       	ldi	r25, 0x00	; 0
     61a:	2f e7       	ldi	r18, 0x7F	; 127
     61c:	fc 01       	movw	r30, r24
     61e:	20 83       	st	Z, r18
     620:	00 00       	nop
     622:	86 e2       	ldi	r24, 0x26	; 38
     624:	90 e0       	ldi	r25, 0x00	; 0
     626:	fc 01       	movw	r30, r24
     628:	80 81       	ld	r24, Z
     62a:	60 e0       	ldi	r22, 0x00	; 0
     62c:	33 de       	rcall	.-922    	; 0x294 <GetBit>
     62e:	88 23       	and	r24, r24
     630:	11 f4       	brne	.+4      	; 0x636 <GetKeypadKey+0x13c>
     632:	8a e2       	ldi	r24, 0x2A	; 42
     634:	1f c0       	rjmp	.+62     	; 0x674 <GetKeypadKey+0x17a>
     636:	86 e2       	ldi	r24, 0x26	; 38
     638:	90 e0       	ldi	r25, 0x00	; 0
     63a:	fc 01       	movw	r30, r24
     63c:	80 81       	ld	r24, Z
     63e:	61 e0       	ldi	r22, 0x01	; 1
     640:	29 de       	rcall	.-942    	; 0x294 <GetBit>
     642:	88 23       	and	r24, r24
     644:	11 f4       	brne	.+4      	; 0x64a <GetKeypadKey+0x150>
     646:	80 e3       	ldi	r24, 0x30	; 48
     648:	15 c0       	rjmp	.+42     	; 0x674 <GetKeypadKey+0x17a>
     64a:	86 e2       	ldi	r24, 0x26	; 38
     64c:	90 e0       	ldi	r25, 0x00	; 0
     64e:	fc 01       	movw	r30, r24
     650:	80 81       	ld	r24, Z
     652:	62 e0       	ldi	r22, 0x02	; 2
     654:	1f de       	rcall	.-962    	; 0x294 <GetBit>
     656:	88 23       	and	r24, r24
     658:	11 f4       	brne	.+4      	; 0x65e <GetKeypadKey+0x164>
     65a:	83 e2       	ldi	r24, 0x23	; 35
     65c:	0b c0       	rjmp	.+22     	; 0x674 <GetKeypadKey+0x17a>
     65e:	86 e2       	ldi	r24, 0x26	; 38
     660:	90 e0       	ldi	r25, 0x00	; 0
     662:	fc 01       	movw	r30, r24
     664:	80 81       	ld	r24, Z
     666:	63 e0       	ldi	r22, 0x03	; 3
     668:	15 de       	rcall	.-982    	; 0x294 <GetBit>
     66a:	88 23       	and	r24, r24
     66c:	11 f4       	brne	.+4      	; 0x672 <GetKeypadKey+0x178>
     66e:	84 e4       	ldi	r24, 0x44	; 68
     670:	01 c0       	rjmp	.+2      	; 0x674 <GetKeypadKey+0x17a>
     672:	80 e0       	ldi	r24, 0x00	; 0
     674:	df 91       	pop	r29
     676:	cf 91       	pop	r28
     678:	08 95       	ret

0000067a <arrayShift>:
     67a:	cf 93       	push	r28
     67c:	df 93       	push	r29
     67e:	00 d0       	rcall	.+0      	; 0x680 <arrayShift+0x6>
     680:	cd b7       	in	r28, 0x3d	; 61
     682:	de b7       	in	r29, 0x3e	; 62
     684:	8a 83       	std	Y+2, r24	; 0x02
     686:	8a 81       	ldd	r24, Y+2	; 0x02
     688:	89 83       	std	Y+1, r24	; 0x01
     68a:	23 c0       	rjmp	.+70     	; 0x6d2 <arrayShift+0x58>
     68c:	89 81       	ldd	r24, Y+1	; 0x01
     68e:	88 2f       	mov	r24, r24
     690:	90 e0       	ldi	r25, 0x00	; 0
     692:	29 81       	ldd	r18, Y+1	; 0x01
     694:	22 2f       	mov	r18, r18
     696:	30 e0       	ldi	r19, 0x00	; 0
     698:	21 50       	subi	r18, 0x01	; 1
     69a:	31 09       	sbc	r19, r1
     69c:	28 5f       	subi	r18, 0xF8	; 248
     69e:	3e 4f       	sbci	r19, 0xFE	; 254
     6a0:	f9 01       	movw	r30, r18
     6a2:	20 81       	ld	r18, Z
     6a4:	88 5f       	subi	r24, 0xF8	; 248
     6a6:	9e 4f       	sbci	r25, 0xFE	; 254
     6a8:	fc 01       	movw	r30, r24
     6aa:	20 83       	st	Z, r18
     6ac:	89 81       	ldd	r24, Y+1	; 0x01
     6ae:	88 2f       	mov	r24, r24
     6b0:	90 e0       	ldi	r25, 0x00	; 0
     6b2:	29 81       	ldd	r18, Y+1	; 0x01
     6b4:	22 2f       	mov	r18, r18
     6b6:	30 e0       	ldi	r19, 0x00	; 0
     6b8:	21 50       	subi	r18, 0x01	; 1
     6ba:	31 09       	sbc	r19, r1
     6bc:	27 5e       	subi	r18, 0xE7	; 231
     6be:	3e 4f       	sbci	r19, 0xFE	; 254
     6c0:	f9 01       	movw	r30, r18
     6c2:	20 81       	ld	r18, Z
     6c4:	87 5e       	subi	r24, 0xE7	; 231
     6c6:	9e 4f       	sbci	r25, 0xFE	; 254
     6c8:	fc 01       	movw	r30, r24
     6ca:	20 83       	st	Z, r18
     6cc:	89 81       	ldd	r24, Y+1	; 0x01
     6ce:	81 50       	subi	r24, 0x01	; 1
     6d0:	89 83       	std	Y+1, r24	; 0x01
     6d2:	89 81       	ldd	r24, Y+1	; 0x01
     6d4:	88 23       	and	r24, r24
     6d6:	d1 f6       	brne	.-76     	; 0x68c <arrayShift+0x12>
     6d8:	0f 90       	pop	r0
     6da:	0f 90       	pop	r0
     6dc:	df 91       	pop	r29
     6de:	cf 91       	pop	r28
     6e0:	08 95       	ret

000006e2 <clearArray>:
     6e2:	cf 93       	push	r28
     6e4:	df 93       	push	r29
     6e6:	00 d0       	rcall	.+0      	; 0x6e8 <clearArray+0x6>
     6e8:	cd b7       	in	r28, 0x3d	; 61
     6ea:	de b7       	in	r29, 0x3e	; 62
     6ec:	8a 83       	std	Y+2, r24	; 0x02
     6ee:	19 82       	std	Y+1, r1	; 0x01
     6f0:	13 c0       	rjmp	.+38     	; 0x718 <clearArray+0x36>
     6f2:	89 81       	ldd	r24, Y+1	; 0x01
     6f4:	88 2f       	mov	r24, r24
     6f6:	90 e0       	ldi	r25, 0x00	; 0
     6f8:	88 5f       	subi	r24, 0xF8	; 248
     6fa:	9e 4f       	sbci	r25, 0xFE	; 254
     6fc:	20 e2       	ldi	r18, 0x20	; 32
     6fe:	fc 01       	movw	r30, r24
     700:	20 83       	st	Z, r18
     702:	89 81       	ldd	r24, Y+1	; 0x01
     704:	88 2f       	mov	r24, r24
     706:	90 e0       	ldi	r25, 0x00	; 0
     708:	87 5e       	subi	r24, 0xE7	; 231
     70a:	9e 4f       	sbci	r25, 0xFE	; 254
     70c:	20 e2       	ldi	r18, 0x20	; 32
     70e:	fc 01       	movw	r30, r24
     710:	20 83       	st	Z, r18
     712:	89 81       	ldd	r24, Y+1	; 0x01
     714:	8f 5f       	subi	r24, 0xFF	; 255
     716:	89 83       	std	Y+1, r24	; 0x01
     718:	99 81       	ldd	r25, Y+1	; 0x01
     71a:	8a 81       	ldd	r24, Y+2	; 0x02
     71c:	98 17       	cp	r25, r24
     71e:	48 f3       	brcs	.-46     	; 0x6f2 <clearArray+0x10>
     720:	0f 90       	pop	r0
     722:	0f 90       	pop	r0
     724:	df 91       	pop	r29
     726:	cf 91       	pop	r28
     728:	08 95       	ret

0000072a <ObstacleGeneratorSM_Tick>:
     72a:	cf 93       	push	r28
     72c:	df 93       	push	r29
     72e:	cd b7       	in	r28, 0x3d	; 61
     730:	de b7       	in	r29, 0x3e	; 62
     732:	62 97       	sbiw	r28, 0x12	; 18
     734:	0f b6       	in	r0, 0x3f	; 63
     736:	f8 94       	cli
     738:	de bf       	out	0x3e, r29	; 62
     73a:	0f be       	out	0x3f, r0	; 63
     73c:	cd bf       	out	0x3d, r28	; 61
     73e:	9a 83       	std	Y+2, r25	; 0x02
     740:	89 83       	std	Y+1, r24	; 0x01
     742:	89 81       	ldd	r24, Y+1	; 0x01
     744:	9a 81       	ldd	r25, Y+2	; 0x02
     746:	81 30       	cpi	r24, 0x01	; 1
     748:	91 05       	cpc	r25, r1
     74a:	51 f0       	breq	.+20     	; 0x760 <ObstacleGeneratorSM_Tick+0x36>
     74c:	82 30       	cpi	r24, 0x02	; 2
     74e:	91 05       	cpc	r25, r1
     750:	c1 f0       	breq	.+48     	; 0x782 <ObstacleGeneratorSM_Tick+0x58>
     752:	89 2b       	or	r24, r25
     754:	11 f5       	brne	.+68     	; 0x79a <ObstacleGeneratorSM_Tick+0x70>
     756:	81 e0       	ldi	r24, 0x01	; 1
     758:	90 e0       	ldi	r25, 0x00	; 0
     75a:	9a 83       	std	Y+2, r25	; 0x02
     75c:	89 83       	std	Y+1, r24	; 0x01
     75e:	20 c0       	rjmp	.+64     	; 0x7a0 <ObstacleGeneratorSM_Tick+0x76>
     760:	80 91 6c 01 	lds	r24, 0x016C	; 0x80016c <restart>
     764:	81 30       	cpi	r24, 0x01	; 1
     766:	19 f4       	brne	.+6      	; 0x76e <ObstacleGeneratorSM_Tick+0x44>
     768:	1a 82       	std	Y+2, r1	; 0x02
     76a:	19 82       	std	Y+1, r1	; 0x01
     76c:	09 c0       	rjmp	.+18     	; 0x780 <ObstacleGeneratorSM_Tick+0x56>
     76e:	80 91 6b 01 	lds	r24, 0x016B	; 0x80016b <beginGenerate>
     772:	81 30       	cpi	r24, 0x01	; 1
     774:	29 f4       	brne	.+10     	; 0x780 <ObstacleGeneratorSM_Tick+0x56>
     776:	82 e0       	ldi	r24, 0x02	; 2
     778:	90 e0       	ldi	r25, 0x00	; 0
     77a:	9a 83       	std	Y+2, r25	; 0x02
     77c:	89 83       	std	Y+1, r24	; 0x01
     77e:	10 c0       	rjmp	.+32     	; 0x7a0 <ObstacleGeneratorSM_Tick+0x76>
     780:	0f c0       	rjmp	.+30     	; 0x7a0 <ObstacleGeneratorSM_Tick+0x76>
     782:	80 91 6c 01 	lds	r24, 0x016C	; 0x80016c <restart>
     786:	81 30       	cpi	r24, 0x01	; 1
     788:	19 f4       	brne	.+6      	; 0x790 <ObstacleGeneratorSM_Tick+0x66>
     78a:	1a 82       	std	Y+2, r1	; 0x02
     78c:	19 82       	std	Y+1, r1	; 0x01
     78e:	08 c0       	rjmp	.+16     	; 0x7a0 <ObstacleGeneratorSM_Tick+0x76>
     790:	81 e0       	ldi	r24, 0x01	; 1
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	9a 83       	std	Y+2, r25	; 0x02
     796:	89 83       	std	Y+1, r24	; 0x01
     798:	03 c0       	rjmp	.+6      	; 0x7a0 <ObstacleGeneratorSM_Tick+0x76>
     79a:	1a 82       	std	Y+2, r1	; 0x02
     79c:	19 82       	std	Y+1, r1	; 0x01
     79e:	00 00       	nop
     7a0:	89 81       	ldd	r24, Y+1	; 0x01
     7a2:	9a 81       	ldd	r25, Y+2	; 0x02
     7a4:	81 30       	cpi	r24, 0x01	; 1
     7a6:	91 05       	cpc	r25, r1
     7a8:	09 f4       	brne	.+2      	; 0x7ac <ObstacleGeneratorSM_Tick+0x82>
     7aa:	a2 c0       	rjmp	.+324    	; 0x8f0 <ObstacleGeneratorSM_Tick+0x1c6>
     7ac:	82 30       	cpi	r24, 0x02	; 2
     7ae:	91 05       	cpc	r25, r1
     7b0:	61 f0       	breq	.+24     	; 0x7ca <ObstacleGeneratorSM_Tick+0xa0>
     7b2:	89 2b       	or	r24, r25
     7b4:	09 f0       	breq	.+2      	; 0x7b8 <ObstacleGeneratorSM_Tick+0x8e>
     7b6:	9d c0       	rjmp	.+314    	; 0x8f2 <ObstacleGeneratorSM_Tick+0x1c8>
     7b8:	81 e0       	ldi	r24, 0x01	; 1
     7ba:	80 93 31 01 	sts	0x0131, r24	; 0x800131 <str_index>
     7be:	84 e1       	ldi	r24, 0x14	; 20
     7c0:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <object_generate_prob>
     7c4:	81 e1       	ldi	r24, 0x11	; 17
     7c6:	8d df       	rcall	.-230    	; 0x6e2 <clearArray>
     7c8:	94 c0       	rjmp	.+296    	; 0x8f2 <ObstacleGeneratorSM_Tick+0x1c8>
     7ca:	80 91 31 01 	lds	r24, 0x0131	; 0x800131 <str_index>
     7ce:	55 df       	rcall	.-342    	; 0x67a <arrayShift>
     7d0:	00 d7       	rcall	.+3584   	; 0x15d2 <rand>
     7d2:	20 91 2a 01 	lds	r18, 0x012A	; 0x80012a <object_generate_prob>
     7d6:	22 2f       	mov	r18, r18
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	b9 01       	movw	r22, r18
     7dc:	6a d6       	rcall	.+3284   	; 0x14b2 <__divmodhi4>
     7de:	01 97       	sbiw	r24, 0x01	; 1
     7e0:	21 f4       	brne	.+8      	; 0x7ea <ObstacleGeneratorSM_Tick+0xc0>
     7e2:	83 e2       	ldi	r24, 0x23	; 35
     7e4:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <row1>
     7e8:	2e c0       	rjmp	.+92     	; 0x846 <ObstacleGeneratorSM_Tick+0x11c>
     7ea:	f3 d6       	rcall	.+3558   	; 0x15d2 <rand>
     7ec:	20 91 2a 01 	lds	r18, 0x012A	; 0x80012a <object_generate_prob>
     7f0:	22 2f       	mov	r18, r18
     7f2:	30 e0       	ldi	r19, 0x00	; 0
     7f4:	b9 01       	movw	r22, r18
     7f6:	5d d6       	rcall	.+3258   	; 0x14b2 <__divmodhi4>
     7f8:	01 97       	sbiw	r24, 0x01	; 1
     7fa:	21 f4       	brne	.+8      	; 0x804 <ObstacleGeneratorSM_Tick+0xda>
     7fc:	8a e2       	ldi	r24, 0x2A	; 42
     7fe:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <row1>
     802:	21 c0       	rjmp	.+66     	; 0x846 <ObstacleGeneratorSM_Tick+0x11c>
     804:	e6 d6       	rcall	.+3532   	; 0x15d2 <rand>
     806:	20 91 2b 01 	lds	r18, 0x012B	; 0x80012b <AI_fire_prob>
     80a:	22 2f       	mov	r18, r18
     80c:	30 e0       	ldi	r19, 0x00	; 0
     80e:	b9 01       	movw	r22, r18
     810:	50 d6       	rcall	.+3232   	; 0x14b2 <__divmodhi4>
     812:	01 97       	sbiw	r24, 0x01	; 1
     814:	41 f4       	brne	.+16     	; 0x826 <ObstacleGeneratorSM_Tick+0xfc>
     816:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <AIPosition>
     81a:	81 30       	cpi	r24, 0x01	; 1
     81c:	21 f4       	brne	.+8      	; 0x826 <ObstacleGeneratorSM_Tick+0xfc>
     81e:	8d e2       	ldi	r24, 0x2D	; 45
     820:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <row1>
     824:	10 c0       	rjmp	.+32     	; 0x846 <ObstacleGeneratorSM_Tick+0x11c>
     826:	d5 d6       	rcall	.+3498   	; 0x15d2 <rand>
     828:	20 91 2c 01 	lds	r18, 0x012C	; 0x80012c <powerUp_prob>
     82c:	22 2f       	mov	r18, r18
     82e:	30 e0       	ldi	r19, 0x00	; 0
     830:	b9 01       	movw	r22, r18
     832:	3f d6       	rcall	.+3198   	; 0x14b2 <__divmodhi4>
     834:	01 97       	sbiw	r24, 0x01	; 1
     836:	21 f4       	brne	.+8      	; 0x840 <ObstacleGeneratorSM_Tick+0x116>
     838:	8b e2       	ldi	r24, 0x2B	; 43
     83a:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <row1>
     83e:	03 c0       	rjmp	.+6      	; 0x846 <ObstacleGeneratorSM_Tick+0x11c>
     840:	80 e2       	ldi	r24, 0x20	; 32
     842:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <row1>
     846:	c5 d6       	rcall	.+3466   	; 0x15d2 <rand>
     848:	20 91 2a 01 	lds	r18, 0x012A	; 0x80012a <object_generate_prob>
     84c:	22 2f       	mov	r18, r18
     84e:	30 e0       	ldi	r19, 0x00	; 0
     850:	b9 01       	movw	r22, r18
     852:	2f d6       	rcall	.+3166   	; 0x14b2 <__divmodhi4>
     854:	01 97       	sbiw	r24, 0x01	; 1
     856:	21 f4       	brne	.+8      	; 0x860 <ObstacleGeneratorSM_Tick+0x136>
     858:	83 e2       	ldi	r24, 0x23	; 35
     85a:	80 93 19 01 	sts	0x0119, r24	; 0x800119 <row2>
     85e:	2e c0       	rjmp	.+92     	; 0x8bc <ObstacleGeneratorSM_Tick+0x192>
     860:	b8 d6       	rcall	.+3440   	; 0x15d2 <rand>
     862:	20 91 2a 01 	lds	r18, 0x012A	; 0x80012a <object_generate_prob>
     866:	22 2f       	mov	r18, r18
     868:	30 e0       	ldi	r19, 0x00	; 0
     86a:	b9 01       	movw	r22, r18
     86c:	22 d6       	rcall	.+3140   	; 0x14b2 <__divmodhi4>
     86e:	01 97       	sbiw	r24, 0x01	; 1
     870:	21 f4       	brne	.+8      	; 0x87a <ObstacleGeneratorSM_Tick+0x150>
     872:	8a e2       	ldi	r24, 0x2A	; 42
     874:	80 93 19 01 	sts	0x0119, r24	; 0x800119 <row2>
     878:	21 c0       	rjmp	.+66     	; 0x8bc <ObstacleGeneratorSM_Tick+0x192>
     87a:	ab d6       	rcall	.+3414   	; 0x15d2 <rand>
     87c:	20 91 2b 01 	lds	r18, 0x012B	; 0x80012b <AI_fire_prob>
     880:	22 2f       	mov	r18, r18
     882:	30 e0       	ldi	r19, 0x00	; 0
     884:	b9 01       	movw	r22, r18
     886:	15 d6       	rcall	.+3114   	; 0x14b2 <__divmodhi4>
     888:	01 97       	sbiw	r24, 0x01	; 1
     88a:	41 f4       	brne	.+16     	; 0x89c <ObstacleGeneratorSM_Tick+0x172>
     88c:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <AIPosition>
     890:	81 31       	cpi	r24, 0x11	; 17
     892:	21 f4       	brne	.+8      	; 0x89c <ObstacleGeneratorSM_Tick+0x172>
     894:	8d e2       	ldi	r24, 0x2D	; 45
     896:	80 93 19 01 	sts	0x0119, r24	; 0x800119 <row2>
     89a:	10 c0       	rjmp	.+32     	; 0x8bc <ObstacleGeneratorSM_Tick+0x192>
     89c:	9a d6       	rcall	.+3380   	; 0x15d2 <rand>
     89e:	20 91 2c 01 	lds	r18, 0x012C	; 0x80012c <powerUp_prob>
     8a2:	22 2f       	mov	r18, r18
     8a4:	30 e0       	ldi	r19, 0x00	; 0
     8a6:	b9 01       	movw	r22, r18
     8a8:	04 d6       	rcall	.+3080   	; 0x14b2 <__divmodhi4>
     8aa:	01 97       	sbiw	r24, 0x01	; 1
     8ac:	21 f4       	brne	.+8      	; 0x8b6 <ObstacleGeneratorSM_Tick+0x18c>
     8ae:	8d ef       	ldi	r24, 0xFD	; 253
     8b0:	80 93 19 01 	sts	0x0119, r24	; 0x800119 <row2>
     8b4:	03 c0       	rjmp	.+6      	; 0x8bc <ObstacleGeneratorSM_Tick+0x192>
     8b6:	80 e2       	ldi	r24, 0x20	; 32
     8b8:	80 93 19 01 	sts	0x0119, r24	; 0x800119 <row2>
     8bc:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <row1+0x10>
     8c0:	88 23       	and	r24, r24
     8c2:	21 f4       	brne	.+8      	; 0x8cc <ObstacleGeneratorSM_Tick+0x1a2>
     8c4:	80 91 29 01 	lds	r24, 0x0129	; 0x800129 <row2+0x10>
     8c8:	88 23       	and	r24, r24
     8ca:	61 f0       	breq	.+24     	; 0x8e4 <ObstacleGeneratorSM_Tick+0x1ba>
     8cc:	80 91 31 01 	lds	r24, 0x0131	; 0x800131 <str_index>
     8d0:	80 31       	cpi	r24, 0x10	; 16
     8d2:	40 f0       	brcs	.+16     	; 0x8e4 <ObstacleGeneratorSM_Tick+0x1ba>
     8d4:	10 92 18 01 	sts	0x0118, r1	; 0x800118 <row1+0x10>
     8d8:	10 92 29 01 	sts	0x0129, r1	; 0x800129 <row2+0x10>
     8dc:	80 e1       	ldi	r24, 0x10	; 16
     8de:	80 93 31 01 	sts	0x0131, r24	; 0x800131 <str_index>
     8e2:	07 c0       	rjmp	.+14     	; 0x8f2 <ObstacleGeneratorSM_Tick+0x1c8>
     8e4:	80 91 31 01 	lds	r24, 0x0131	; 0x800131 <str_index>
     8e8:	8f 5f       	subi	r24, 0xFF	; 255
     8ea:	80 93 31 01 	sts	0x0131, r24	; 0x800131 <str_index>
     8ee:	01 c0       	rjmp	.+2      	; 0x8f2 <ObstacleGeneratorSM_Tick+0x1c8>
     8f0:	00 00       	nop
     8f2:	89 81       	ldd	r24, Y+1	; 0x01
     8f4:	9a 81       	ldd	r25, Y+2	; 0x02
     8f6:	62 96       	adiw	r28, 0x12	; 18
     8f8:	0f b6       	in	r0, 0x3f	; 63
     8fa:	f8 94       	cli
     8fc:	de bf       	out	0x3e, r29	; 62
     8fe:	0f be       	out	0x3f, r0	; 63
     900:	cd bf       	out	0x3d, r28	; 61
     902:	df 91       	pop	r29
     904:	cf 91       	pop	r28
     906:	08 95       	ret

00000908 <DisplaySM_Tick>:
     908:	cf 93       	push	r28
     90a:	df 93       	push	r29
     90c:	00 d0       	rcall	.+0      	; 0x90e <DisplaySM_Tick+0x6>
     90e:	cd b7       	in	r28, 0x3d	; 61
     910:	de b7       	in	r29, 0x3e	; 62
     912:	9a 83       	std	Y+2, r25	; 0x02
     914:	89 83       	std	Y+1, r24	; 0x01
     916:	89 81       	ldd	r24, Y+1	; 0x01
     918:	9a 81       	ldd	r25, Y+2	; 0x02
     91a:	82 30       	cpi	r24, 0x02	; 2
     91c:	91 05       	cpc	r25, r1
     91e:	e9 f0       	breq	.+58     	; 0x95a <DisplaySM_Tick+0x52>
     920:	83 30       	cpi	r24, 0x03	; 3
     922:	91 05       	cpc	r25, r1
     924:	2c f4       	brge	.+10     	; 0x930 <DisplaySM_Tick+0x28>
     926:	00 97       	sbiw	r24, 0x00	; 0
     928:	49 f0       	breq	.+18     	; 0x93c <DisplaySM_Tick+0x34>
     92a:	01 97       	sbiw	r24, 0x01	; 1
     92c:	61 f0       	breq	.+24     	; 0x946 <DisplaySM_Tick+0x3e>
     92e:	48 c0       	rjmp	.+144    	; 0x9c0 <DisplaySM_Tick+0xb8>
     930:	83 30       	cpi	r24, 0x03	; 3
     932:	91 05       	cpc	r25, r1
     934:	51 f1       	breq	.+84     	; 0x98a <DisplaySM_Tick+0x82>
     936:	04 97       	sbiw	r24, 0x04	; 4
     938:	d9 f1       	breq	.+118    	; 0x9b0 <DisplaySM_Tick+0xa8>
     93a:	42 c0       	rjmp	.+132    	; 0x9c0 <DisplaySM_Tick+0xb8>
     93c:	81 e0       	ldi	r24, 0x01	; 1
     93e:	90 e0       	ldi	r25, 0x00	; 0
     940:	9a 83       	std	Y+2, r25	; 0x02
     942:	89 83       	std	Y+1, r24	; 0x01
     944:	40 c0       	rjmp	.+128    	; 0x9c6 <DisplaySM_Tick+0xbe>
     946:	80 91 69 01 	lds	r24, 0x0169	; 0x800169 <keypad_value>
     94a:	81 33       	cpi	r24, 0x31	; 49
     94c:	29 f4       	brne	.+10     	; 0x958 <DisplaySM_Tick+0x50>
     94e:	82 e0       	ldi	r24, 0x02	; 2
     950:	90 e0       	ldi	r25, 0x00	; 0
     952:	9a 83       	std	Y+2, r25	; 0x02
     954:	89 83       	std	Y+1, r24	; 0x01
     956:	37 c0       	rjmp	.+110    	; 0x9c6 <DisplaySM_Tick+0xbe>
     958:	36 c0       	rjmp	.+108    	; 0x9c6 <DisplaySM_Tick+0xbe>
     95a:	80 91 6c 01 	lds	r24, 0x016C	; 0x80016c <restart>
     95e:	81 30       	cpi	r24, 0x01	; 1
     960:	29 f4       	brne	.+10     	; 0x96c <DisplaySM_Tick+0x64>
     962:	83 e0       	ldi	r24, 0x03	; 3
     964:	90 e0       	ldi	r25, 0x00	; 0
     966:	9a 83       	std	Y+2, r25	; 0x02
     968:	89 83       	std	Y+1, r24	; 0x01
     96a:	0e c0       	rjmp	.+28     	; 0x988 <DisplaySM_Tick+0x80>
     96c:	80 91 6d 01 	lds	r24, 0x016D	; 0x80016d <isHit>
     970:	88 23       	and	r24, r24
     972:	29 f4       	brne	.+10     	; 0x97e <DisplaySM_Tick+0x76>
     974:	82 e0       	ldi	r24, 0x02	; 2
     976:	90 e0       	ldi	r25, 0x00	; 0
     978:	9a 83       	std	Y+2, r25	; 0x02
     97a:	89 83       	std	Y+1, r24	; 0x01
     97c:	05 c0       	rjmp	.+10     	; 0x988 <DisplaySM_Tick+0x80>
     97e:	83 e0       	ldi	r24, 0x03	; 3
     980:	90 e0       	ldi	r25, 0x00	; 0
     982:	9a 83       	std	Y+2, r25	; 0x02
     984:	89 83       	std	Y+1, r24	; 0x01
     986:	1f c0       	rjmp	.+62     	; 0x9c6 <DisplaySM_Tick+0xbe>
     988:	1e c0       	rjmp	.+60     	; 0x9c6 <DisplaySM_Tick+0xbe>
     98a:	80 91 d0 01 	lds	r24, 0x01D0	; 0x8001d0 <deathAni>
     98e:	85 30       	cpi	r24, 0x05	; 5
     990:	50 f4       	brcc	.+20     	; 0x9a6 <DisplaySM_Tick+0x9e>
     992:	83 e0       	ldi	r24, 0x03	; 3
     994:	90 e0       	ldi	r25, 0x00	; 0
     996:	9a 83       	std	Y+2, r25	; 0x02
     998:	89 83       	std	Y+1, r24	; 0x01
     99a:	80 91 d0 01 	lds	r24, 0x01D0	; 0x8001d0 <deathAni>
     99e:	8f 5f       	subi	r24, 0xFF	; 255
     9a0:	80 93 d0 01 	sts	0x01D0, r24	; 0x8001d0 <deathAni>
     9a4:	10 c0       	rjmp	.+32     	; 0x9c6 <DisplaySM_Tick+0xbe>
     9a6:	84 e0       	ldi	r24, 0x04	; 4
     9a8:	90 e0       	ldi	r25, 0x00	; 0
     9aa:	9a 83       	std	Y+2, r25	; 0x02
     9ac:	89 83       	std	Y+1, r24	; 0x01
     9ae:	0b c0       	rjmp	.+22     	; 0x9c6 <DisplaySM_Tick+0xbe>
     9b0:	80 91 69 01 	lds	r24, 0x0169	; 0x800169 <keypad_value>
     9b4:	81 33       	cpi	r24, 0x31	; 49
     9b6:	19 f4       	brne	.+6      	; 0x9be <DisplaySM_Tick+0xb6>
     9b8:	1a 82       	std	Y+2, r1	; 0x02
     9ba:	19 82       	std	Y+1, r1	; 0x01
     9bc:	04 c0       	rjmp	.+8      	; 0x9c6 <DisplaySM_Tick+0xbe>
     9be:	03 c0       	rjmp	.+6      	; 0x9c6 <DisplaySM_Tick+0xbe>
     9c0:	1a 82       	std	Y+2, r1	; 0x02
     9c2:	19 82       	std	Y+1, r1	; 0x01
     9c4:	00 00       	nop
     9c6:	89 81       	ldd	r24, Y+1	; 0x01
     9c8:	9a 81       	ldd	r25, Y+2	; 0x02
     9ca:	82 30       	cpi	r24, 0x02	; 2
     9cc:	91 05       	cpc	r25, r1
     9ce:	11 f1       	breq	.+68     	; 0xa14 <DisplaySM_Tick+0x10c>
     9d0:	83 30       	cpi	r24, 0x03	; 3
     9d2:	91 05       	cpc	r25, r1
     9d4:	2c f4       	brge	.+10     	; 0x9e0 <DisplaySM_Tick+0xd8>
     9d6:	00 97       	sbiw	r24, 0x00	; 0
     9d8:	59 f0       	breq	.+22     	; 0x9f0 <DisplaySM_Tick+0xe8>
     9da:	01 97       	sbiw	r24, 0x01	; 1
     9dc:	a9 f0       	breq	.+42     	; 0xa08 <DisplaySM_Tick+0x100>
     9de:	60 c0       	rjmp	.+192    	; 0xaa0 <DisplaySM_Tick+0x198>
     9e0:	83 30       	cpi	r24, 0x03	; 3
     9e2:	91 05       	cpc	r25, r1
     9e4:	09 f4       	brne	.+2      	; 0x9e8 <DisplaySM_Tick+0xe0>
     9e6:	38 c0       	rjmp	.+112    	; 0xa58 <DisplaySM_Tick+0x150>
     9e8:	04 97       	sbiw	r24, 0x04	; 4
     9ea:	09 f4       	brne	.+2      	; 0x9ee <DisplaySM_Tick+0xe6>
     9ec:	4e c0       	rjmp	.+156    	; 0xa8a <DisplaySM_Tick+0x182>
     9ee:	58 c0       	rjmp	.+176    	; 0xaa0 <DisplaySM_Tick+0x198>
     9f0:	10 92 6d 01 	sts	0x016D, r1	; 0x80016d <isHit>
     9f4:	80 e1       	ldi	r24, 0x10	; 16
     9f6:	80 93 2d 01 	sts	0x012D, r24	; 0x80012d <playerPosition>
     9fa:	10 92 85 01 	sts	0x0185, r1	; 0x800185 <task3>
     9fe:	10 92 6c 01 	sts	0x016C, r1	; 0x80016c <restart>
     a02:	10 92 69 01 	sts	0x0169, r1	; 0x800169 <keypad_value>
     a06:	4c c0       	rjmp	.+152    	; 0xaa0 <DisplaySM_Tick+0x198>
     a08:	60 db       	rcall	.-2368   	; 0xca <LCD_ClearScreen>
     a0a:	61 e4       	ldi	r22, 0x41	; 65
     a0c:	71 e0       	ldi	r23, 0x01	; 1
     a0e:	81 e0       	ldi	r24, 0x01	; 1
     a10:	d6 db       	rcall	.-2132   	; 0x1be <LCD_DisplayString>
     a12:	46 c0       	rjmp	.+140    	; 0xaa0 <DisplaySM_Tick+0x198>
     a14:	81 e0       	ldi	r24, 0x01	; 1
     a16:	80 93 6b 01 	sts	0x016B, r24	; 0x80016b <beginGenerate>
     a1a:	57 db       	rcall	.-2386   	; 0xca <LCD_ClearScreen>
     a1c:	68 e0       	ldi	r22, 0x08	; 8
     a1e:	71 e0       	ldi	r23, 0x01	; 1
     a20:	81 e0       	ldi	r24, 0x01	; 1
     a22:	cd db       	rcall	.-2150   	; 0x1be <LCD_DisplayString>
     a24:	69 e1       	ldi	r22, 0x19	; 25
     a26:	71 e0       	ldi	r23, 0x01	; 1
     a28:	81 e1       	ldi	r24, 0x11	; 17
     a2a:	c9 db       	rcall	.-2158   	; 0x1be <LCD_DisplayString>
     a2c:	80 91 6e 01 	lds	r24, 0x016E	; 0x80016e <bullet>
     a30:	81 30       	cpi	r24, 0x01	; 1
     a32:	29 f4       	brne	.+10     	; 0xa3e <DisplaySM_Tick+0x136>
     a34:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <bulletPos>
     a38:	ea db       	rcall	.-2092   	; 0x20e <LCD_Cursor>
     a3a:	8d e2       	ldi	r24, 0x2D	; 45
     a3c:	92 db       	rcall	.-2268   	; 0x162 <LCD_WriteData>
     a3e:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <AIPosition>
     a42:	e5 db       	rcall	.-2102   	; 0x20e <LCD_Cursor>
     a44:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <AIIcon>
     a48:	8c db       	rcall	.-2280   	; 0x162 <LCD_WriteData>
     a4a:	80 91 2d 01 	lds	r24, 0x012D	; 0x80012d <playerPosition>
     a4e:	df db       	rcall	.-2114   	; 0x20e <LCD_Cursor>
     a50:	80 91 2f 01 	lds	r24, 0x012F	; 0x80012f <playerIcon>
     a54:	86 db       	rcall	.-2292   	; 0x162 <LCD_WriteData>
     a56:	24 c0       	rjmp	.+72     	; 0xaa0 <DisplaySM_Tick+0x198>
     a58:	10 92 6b 01 	sts	0x016B, r1	; 0x80016b <beginGenerate>
     a5c:	36 db       	rcall	.-2452   	; 0xca <LCD_ClearScreen>
     a5e:	68 e0       	ldi	r22, 0x08	; 8
     a60:	71 e0       	ldi	r23, 0x01	; 1
     a62:	81 e0       	ldi	r24, 0x01	; 1
     a64:	ac db       	rcall	.-2216   	; 0x1be <LCD_DisplayString>
     a66:	69 e1       	ldi	r22, 0x19	; 25
     a68:	71 e0       	ldi	r23, 0x01	; 1
     a6a:	81 e1       	ldi	r24, 0x11	; 17
     a6c:	a8 db       	rcall	.-2224   	; 0x1be <LCD_DisplayString>
     a6e:	80 91 2d 01 	lds	r24, 0x012D	; 0x80012d <playerPosition>
     a72:	cd db       	rcall	.-2150   	; 0x20e <LCD_Cursor>
     a74:	80 91 d0 01 	lds	r24, 0x01D0	; 0x8001d0 <deathAni>
     a78:	81 70       	andi	r24, 0x01	; 1
     a7a:	88 23       	and	r24, r24
     a7c:	19 f4       	brne	.+6      	; 0xa84 <DisplaySM_Tick+0x17c>
     a7e:	88 e5       	ldi	r24, 0x58	; 88
     a80:	70 db       	rcall	.-2336   	; 0x162 <LCD_WriteData>
     a82:	0e c0       	rjmp	.+28     	; 0xaa0 <DisplaySM_Tick+0x198>
     a84:	8b ed       	ldi	r24, 0xDB	; 219
     a86:	6d db       	rcall	.-2342   	; 0x162 <LCD_WriteData>
     a88:	0b c0       	rjmp	.+22     	; 0xaa0 <DisplaySM_Tick+0x198>
     a8a:	10 92 d0 01 	sts	0x01D0, r1	; 0x8001d0 <deathAni>
     a8e:	1d db       	rcall	.-2502   	; 0xca <LCD_ClearScreen>
     a90:	62 e5       	ldi	r22, 0x52	; 82
     a92:	71 e0       	ldi	r23, 0x01	; 1
     a94:	81 e0       	ldi	r24, 0x01	; 1
     a96:	93 db       	rcall	.-2266   	; 0x1be <LCD_DisplayString>
     a98:	81 e0       	ldi	r24, 0x01	; 1
     a9a:	80 93 6c 01 	sts	0x016C, r24	; 0x80016c <restart>
     a9e:	00 00       	nop
     aa0:	89 81       	ldd	r24, Y+1	; 0x01
     aa2:	9a 81       	ldd	r25, Y+2	; 0x02
     aa4:	0f 90       	pop	r0
     aa6:	0f 90       	pop	r0
     aa8:	df 91       	pop	r29
     aaa:	cf 91       	pop	r28
     aac:	08 95       	ret

00000aae <Movement_Tick>:
     aae:	cf 93       	push	r28
     ab0:	df 93       	push	r29
     ab2:	00 d0       	rcall	.+0      	; 0xab4 <Movement_Tick+0x6>
     ab4:	cd b7       	in	r28, 0x3d	; 61
     ab6:	de b7       	in	r29, 0x3e	; 62
     ab8:	9a 83       	std	Y+2, r25	; 0x02
     aba:	89 83       	std	Y+1, r24	; 0x01
     abc:	1e dd       	rcall	.-1476   	; 0x4fa <GetKeypadKey>
     abe:	80 93 69 01 	sts	0x0169, r24	; 0x800169 <keypad_value>
     ac2:	89 81       	ldd	r24, Y+1	; 0x01
     ac4:	9a 81       	ldd	r25, Y+2	; 0x02
     ac6:	81 30       	cpi	r24, 0x01	; 1
     ac8:	91 05       	cpc	r25, r1
     aca:	89 f0       	breq	.+34     	; 0xaee <Movement_Tick+0x40>
     acc:	82 30       	cpi	r24, 0x02	; 2
     ace:	91 05       	cpc	r25, r1
     ad0:	1c f4       	brge	.+6      	; 0xad8 <Movement_Tick+0x2a>
     ad2:	89 2b       	or	r24, r25
     ad4:	39 f0       	breq	.+14     	; 0xae4 <Movement_Tick+0x36>
     ad6:	24 c0       	rjmp	.+72     	; 0xb20 <Movement_Tick+0x72>
     ad8:	82 30       	cpi	r24, 0x02	; 2
     ada:	91 05       	cpc	r25, r1
     adc:	91 f0       	breq	.+36     	; 0xb02 <Movement_Tick+0x54>
     ade:	03 97       	sbiw	r24, 0x03	; 3
     ae0:	a9 f0       	breq	.+42     	; 0xb0c <Movement_Tick+0x5e>
     ae2:	1e c0       	rjmp	.+60     	; 0xb20 <Movement_Tick+0x72>
     ae4:	81 e0       	ldi	r24, 0x01	; 1
     ae6:	90 e0       	ldi	r25, 0x00	; 0
     ae8:	9a 83       	std	Y+2, r25	; 0x02
     aea:	89 83       	std	Y+1, r24	; 0x01
     aec:	1c c0       	rjmp	.+56     	; 0xb26 <Movement_Tick+0x78>
     aee:	80 91 69 01 	lds	r24, 0x0169	; 0x800169 <keypad_value>
     af2:	88 23       	and	r24, r24
     af4:	29 f0       	breq	.+10     	; 0xb00 <Movement_Tick+0x52>
     af6:	82 e0       	ldi	r24, 0x02	; 2
     af8:	90 e0       	ldi	r25, 0x00	; 0
     afa:	9a 83       	std	Y+2, r25	; 0x02
     afc:	89 83       	std	Y+1, r24	; 0x01
     afe:	13 c0       	rjmp	.+38     	; 0xb26 <Movement_Tick+0x78>
     b00:	12 c0       	rjmp	.+36     	; 0xb26 <Movement_Tick+0x78>
     b02:	83 e0       	ldi	r24, 0x03	; 3
     b04:	90 e0       	ldi	r25, 0x00	; 0
     b06:	9a 83       	std	Y+2, r25	; 0x02
     b08:	89 83       	std	Y+1, r24	; 0x01
     b0a:	0d c0       	rjmp	.+26     	; 0xb26 <Movement_Tick+0x78>
     b0c:	80 91 69 01 	lds	r24, 0x0169	; 0x800169 <keypad_value>
     b10:	88 23       	and	r24, r24
     b12:	29 f4       	brne	.+10     	; 0xb1e <Movement_Tick+0x70>
     b14:	81 e0       	ldi	r24, 0x01	; 1
     b16:	90 e0       	ldi	r25, 0x00	; 0
     b18:	9a 83       	std	Y+2, r25	; 0x02
     b1a:	89 83       	std	Y+1, r24	; 0x01
     b1c:	04 c0       	rjmp	.+8      	; 0xb26 <Movement_Tick+0x78>
     b1e:	03 c0       	rjmp	.+6      	; 0xb26 <Movement_Tick+0x78>
     b20:	1a 82       	std	Y+2, r1	; 0x02
     b22:	19 82       	std	Y+1, r1	; 0x01
     b24:	00 00       	nop
     b26:	89 81       	ldd	r24, Y+1	; 0x01
     b28:	9a 81       	ldd	r25, Y+2	; 0x02
     b2a:	81 30       	cpi	r24, 0x01	; 1
     b2c:	91 05       	cpc	r25, r1
     b2e:	a9 f1       	breq	.+106    	; 0xb9a <Movement_Tick+0xec>
     b30:	82 30       	cpi	r24, 0x02	; 2
     b32:	91 05       	cpc	r25, r1
     b34:	1c f4       	brge	.+6      	; 0xb3c <Movement_Tick+0x8e>
     b36:	89 2b       	or	r24, r25
     b38:	91 f1       	breq	.+100    	; 0xb9e <Movement_Tick+0xf0>
     b3a:	34 c0       	rjmp	.+104    	; 0xba4 <Movement_Tick+0xf6>
     b3c:	82 30       	cpi	r24, 0x02	; 2
     b3e:	91 05       	cpc	r25, r1
     b40:	19 f0       	breq	.+6      	; 0xb48 <Movement_Tick+0x9a>
     b42:	03 97       	sbiw	r24, 0x03	; 3
     b44:	71 f1       	breq	.+92     	; 0xba2 <Movement_Tick+0xf4>
     b46:	2e c0       	rjmp	.+92     	; 0xba4 <Movement_Tick+0xf6>
     b48:	80 91 2d 01 	lds	r24, 0x012D	; 0x80012d <playerPosition>
     b4c:	80 31       	cpi	r24, 0x10	; 16
     b4e:	39 f4       	brne	.+14     	; 0xb5e <Movement_Tick+0xb0>
     b50:	80 91 69 01 	lds	r24, 0x0169	; 0x800169 <keypad_value>
     b54:	83 34       	cpi	r24, 0x43	; 67
     b56:	19 f4       	brne	.+6      	; 0xb5e <Movement_Tick+0xb0>
     b58:	80 e2       	ldi	r24, 0x20	; 32
     b5a:	80 93 2d 01 	sts	0x012D, r24	; 0x80012d <playerPosition>
     b5e:	80 91 2d 01 	lds	r24, 0x012D	; 0x80012d <playerPosition>
     b62:	80 32       	cpi	r24, 0x20	; 32
     b64:	39 f4       	brne	.+14     	; 0xb74 <Movement_Tick+0xc6>
     b66:	80 91 69 01 	lds	r24, 0x0169	; 0x800169 <keypad_value>
     b6a:	82 34       	cpi	r24, 0x42	; 66
     b6c:	19 f4       	brne	.+6      	; 0xb74 <Movement_Tick+0xc6>
     b6e:	80 e1       	ldi	r24, 0x10	; 16
     b70:	80 93 2d 01 	sts	0x012D, r24	; 0x80012d <playerPosition>
     b74:	80 91 69 01 	lds	r24, 0x0169	; 0x800169 <keypad_value>
     b78:	81 33       	cpi	r24, 0x31	; 49
     b7a:	49 f4       	brne	.+18     	; 0xb8e <Movement_Tick+0xe0>
     b7c:	80 91 bc 01 	lds	r24, 0x01BC	; 0x8001bc <debounce>
     b80:	86 30       	cpi	r24, 0x06	; 6
     b82:	28 f0       	brcs	.+10     	; 0xb8e <Movement_Tick+0xe0>
     b84:	81 e0       	ldi	r24, 0x01	; 1
     b86:	80 93 6c 01 	sts	0x016C, r24	; 0x80016c <restart>
     b8a:	10 92 bc 01 	sts	0x01BC, r1	; 0x8001bc <debounce>
     b8e:	80 91 bc 01 	lds	r24, 0x01BC	; 0x8001bc <debounce>
     b92:	8f 5f       	subi	r24, 0xFF	; 255
     b94:	80 93 bc 01 	sts	0x01BC, r24	; 0x8001bc <debounce>
     b98:	05 c0       	rjmp	.+10     	; 0xba4 <Movement_Tick+0xf6>
     b9a:	00 00       	nop
     b9c:	03 c0       	rjmp	.+6      	; 0xba4 <Movement_Tick+0xf6>
     b9e:	00 00       	nop
     ba0:	01 c0       	rjmp	.+2      	; 0xba4 <Movement_Tick+0xf6>
     ba2:	00 00       	nop
     ba4:	89 81       	ldd	r24, Y+1	; 0x01
     ba6:	9a 81       	ldd	r25, Y+2	; 0x02
     ba8:	0f 90       	pop	r0
     baa:	0f 90       	pop	r0
     bac:	df 91       	pop	r29
     bae:	cf 91       	pop	r28
     bb0:	08 95       	ret

00000bb2 <Collision_Tick>:
     bb2:	cf 93       	push	r28
     bb4:	df 93       	push	r29
     bb6:	00 d0       	rcall	.+0      	; 0xbb8 <Collision_Tick+0x6>
     bb8:	cd b7       	in	r28, 0x3d	; 61
     bba:	de b7       	in	r29, 0x3e	; 62
     bbc:	9a 83       	std	Y+2, r25	; 0x02
     bbe:	89 83       	std	Y+1, r24	; 0x01
     bc0:	89 81       	ldd	r24, Y+1	; 0x01
     bc2:	9a 81       	ldd	r25, Y+2	; 0x02
     bc4:	00 97       	sbiw	r24, 0x00	; 0
     bc6:	19 f0       	breq	.+6      	; 0xbce <Collision_Tick+0x1c>
     bc8:	01 97       	sbiw	r24, 0x01	; 1
     bca:	31 f0       	breq	.+12     	; 0xbd8 <Collision_Tick+0x26>
     bcc:	0a c0       	rjmp	.+20     	; 0xbe2 <Collision_Tick+0x30>
     bce:	81 e0       	ldi	r24, 0x01	; 1
     bd0:	90 e0       	ldi	r25, 0x00	; 0
     bd2:	9a 83       	std	Y+2, r25	; 0x02
     bd4:	89 83       	std	Y+1, r24	; 0x01
     bd6:	08 c0       	rjmp	.+16     	; 0xbe8 <Collision_Tick+0x36>
     bd8:	81 e0       	ldi	r24, 0x01	; 1
     bda:	90 e0       	ldi	r25, 0x00	; 0
     bdc:	9a 83       	std	Y+2, r25	; 0x02
     bde:	89 83       	std	Y+1, r24	; 0x01
     be0:	03 c0       	rjmp	.+6      	; 0xbe8 <Collision_Tick+0x36>
     be2:	1a 82       	std	Y+2, r1	; 0x02
     be4:	19 82       	std	Y+1, r1	; 0x01
     be6:	00 00       	nop
     be8:	89 81       	ldd	r24, Y+1	; 0x01
     bea:	9a 81       	ldd	r25, Y+2	; 0x02
     bec:	00 97       	sbiw	r24, 0x00	; 0
     bee:	19 f0       	breq	.+6      	; 0xbf6 <Collision_Tick+0x44>
     bf0:	01 97       	sbiw	r24, 0x01	; 1
     bf2:	21 f0       	breq	.+8      	; 0xbfc <Collision_Tick+0x4a>
     bf4:	95 c0       	rjmp	.+298    	; 0xd20 <Collision_Tick+0x16e>
     bf6:	10 92 6d 01 	sts	0x016D, r1	; 0x80016d <isHit>
     bfa:	92 c0       	rjmp	.+292    	; 0xd20 <Collision_Tick+0x16e>
     bfc:	80 91 6e 01 	lds	r24, 0x016E	; 0x80016e <bullet>
     c00:	81 30       	cpi	r24, 0x01	; 1
     c02:	09 f0       	breq	.+2      	; 0xc06 <Collision_Tick+0x54>
     c04:	4d c0       	rjmp	.+154    	; 0xca0 <Collision_Tick+0xee>
     c06:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <bulletPos>
     c0a:	80 31       	cpi	r24, 0x10	; 16
     c0c:	18 f5       	brcc	.+70     	; 0xc54 <Collision_Tick+0xa2>
     c0e:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <bulletPos>
     c12:	88 2f       	mov	r24, r24
     c14:	90 e0       	ldi	r25, 0x00	; 0
     c16:	01 97       	sbiw	r24, 0x01	; 1
     c18:	88 5f       	subi	r24, 0xF8	; 248
     c1a:	9e 4f       	sbci	r25, 0xFE	; 254
     c1c:	fc 01       	movw	r30, r24
     c1e:	80 81       	ld	r24, Z
     c20:	8a 32       	cpi	r24, 0x2A	; 42
     c22:	59 f0       	breq	.+22     	; 0xc3a <Collision_Tick+0x88>
     c24:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <bulletPos>
     c28:	88 2f       	mov	r24, r24
     c2a:	90 e0       	ldi	r25, 0x00	; 0
     c2c:	01 97       	sbiw	r24, 0x01	; 1
     c2e:	88 5f       	subi	r24, 0xF8	; 248
     c30:	9e 4f       	sbci	r25, 0xFE	; 254
     c32:	fc 01       	movw	r30, r24
     c34:	80 81       	ld	r24, Z
     c36:	83 32       	cpi	r24, 0x23	; 35
     c38:	69 f4       	brne	.+26     	; 0xc54 <Collision_Tick+0xa2>
     c3a:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <bulletPos>
     c3e:	88 2f       	mov	r24, r24
     c40:	90 e0       	ldi	r25, 0x00	; 0
     c42:	01 97       	sbiw	r24, 0x01	; 1
     c44:	88 5f       	subi	r24, 0xF8	; 248
     c46:	9e 4f       	sbci	r25, 0xFE	; 254
     c48:	20 e2       	ldi	r18, 0x20	; 32
     c4a:	fc 01       	movw	r30, r24
     c4c:	20 83       	st	Z, r18
     c4e:	10 92 6e 01 	sts	0x016E, r1	; 0x80016e <bullet>
     c52:	26 c0       	rjmp	.+76     	; 0xca0 <Collision_Tick+0xee>
     c54:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <bulletPos>
     c58:	80 32       	cpi	r24, 0x20	; 32
     c5a:	10 f5       	brcc	.+68     	; 0xca0 <Collision_Tick+0xee>
     c5c:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <bulletPos>
     c60:	88 2f       	mov	r24, r24
     c62:	90 e0       	ldi	r25, 0x00	; 0
     c64:	41 97       	sbiw	r24, 0x11	; 17
     c66:	87 5e       	subi	r24, 0xE7	; 231
     c68:	9e 4f       	sbci	r25, 0xFE	; 254
     c6a:	fc 01       	movw	r30, r24
     c6c:	80 81       	ld	r24, Z
     c6e:	8a 32       	cpi	r24, 0x2A	; 42
     c70:	59 f0       	breq	.+22     	; 0xc88 <Collision_Tick+0xd6>
     c72:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <bulletPos>
     c76:	88 2f       	mov	r24, r24
     c78:	90 e0       	ldi	r25, 0x00	; 0
     c7a:	41 97       	sbiw	r24, 0x11	; 17
     c7c:	87 5e       	subi	r24, 0xE7	; 231
     c7e:	9e 4f       	sbci	r25, 0xFE	; 254
     c80:	fc 01       	movw	r30, r24
     c82:	80 81       	ld	r24, Z
     c84:	83 32       	cpi	r24, 0x23	; 35
     c86:	61 f4       	brne	.+24     	; 0xca0 <Collision_Tick+0xee>
     c88:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <bulletPos>
     c8c:	88 2f       	mov	r24, r24
     c8e:	90 e0       	ldi	r25, 0x00	; 0
     c90:	41 97       	sbiw	r24, 0x11	; 17
     c92:	87 5e       	subi	r24, 0xE7	; 231
     c94:	9e 4f       	sbci	r25, 0xFE	; 254
     c96:	20 e2       	ldi	r18, 0x20	; 32
     c98:	fc 01       	movw	r30, r24
     c9a:	20 83       	st	Z, r18
     c9c:	10 92 6e 01 	sts	0x016E, r1	; 0x80016e <bullet>
     ca0:	80 91 2d 01 	lds	r24, 0x012D	; 0x80012d <playerPosition>
     ca4:	80 31       	cpi	r24, 0x10	; 16
     ca6:	19 f5       	brne	.+70     	; 0xcee <Collision_Tick+0x13c>
     ca8:	80 91 17 01 	lds	r24, 0x0117	; 0x800117 <row1+0xf>
     cac:	80 32       	cpi	r24, 0x20	; 32
     cae:	f9 f0       	breq	.+62     	; 0xcee <Collision_Tick+0x13c>
     cb0:	80 91 17 01 	lds	r24, 0x0117	; 0x800117 <row1+0xf>
     cb4:	88 23       	and	r24, r24
     cb6:	d9 f0       	breq	.+54     	; 0xcee <Collision_Tick+0x13c>
     cb8:	80 91 6a 01 	lds	r24, 0x016A	; 0x80016a <invincibility>
     cbc:	88 23       	and	r24, r24
     cbe:	29 f0       	breq	.+10     	; 0xcca <Collision_Tick+0x118>
     cc0:	80 91 6a 01 	lds	r24, 0x016A	; 0x80016a <invincibility>
     cc4:	81 50       	subi	r24, 0x01	; 1
     cc6:	80 93 6a 01 	sts	0x016A, r24	; 0x80016a <invincibility>
     cca:	80 91 6a 01 	lds	r24, 0x016A	; 0x80016a <invincibility>
     cce:	88 23       	and	r24, r24
     cd0:	19 f4       	brne	.+6      	; 0xcd8 <Collision_Tick+0x126>
     cd2:	81 e0       	ldi	r24, 0x01	; 1
     cd4:	80 93 6d 01 	sts	0x016D, r24	; 0x80016d <isHit>
     cd8:	80 91 17 01 	lds	r24, 0x0117	; 0x800117 <row1+0xf>
     cdc:	8b 32       	cpi	r24, 0x2B	; 43
     cde:	31 f4       	brne	.+12     	; 0xcec <Collision_Tick+0x13a>
     ce0:	10 92 6d 01 	sts	0x016D, r1	; 0x80016d <isHit>
     ce4:	80 e1       	ldi	r24, 0x10	; 16
     ce6:	80 93 6a 01 	sts	0x016A, r24	; 0x80016a <invincibility>
     cea:	19 c0       	rjmp	.+50     	; 0xd1e <Collision_Tick+0x16c>
     cec:	18 c0       	rjmp	.+48     	; 0xd1e <Collision_Tick+0x16c>
     cee:	80 91 2d 01 	lds	r24, 0x012D	; 0x80012d <playerPosition>
     cf2:	80 32       	cpi	r24, 0x20	; 32
     cf4:	a1 f4       	brne	.+40     	; 0xd1e <Collision_Tick+0x16c>
     cf6:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <row2+0xf>
     cfa:	80 32       	cpi	r24, 0x20	; 32
     cfc:	81 f0       	breq	.+32     	; 0xd1e <Collision_Tick+0x16c>
     cfe:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <row2+0xf>
     d02:	88 23       	and	r24, r24
     d04:	61 f0       	breq	.+24     	; 0xd1e <Collision_Tick+0x16c>
     d06:	81 e0       	ldi	r24, 0x01	; 1
     d08:	80 93 6d 01 	sts	0x016D, r24	; 0x80016d <isHit>
     d0c:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <row2+0xf>
     d10:	8d 3f       	cpi	r24, 0xFD	; 253
     d12:	29 f4       	brne	.+10     	; 0xd1e <Collision_Tick+0x16c>
     d14:	10 92 6d 01 	sts	0x016D, r1	; 0x80016d <isHit>
     d18:	81 e1       	ldi	r24, 0x11	; 17
     d1a:	e3 dc       	rcall	.-1594   	; 0x6e2 <clearArray>
     d1c:	00 c0       	rjmp	.+0      	; 0xd1e <Collision_Tick+0x16c>
     d1e:	00 00       	nop
     d20:	89 81       	ldd	r24, Y+1	; 0x01
     d22:	9a 81       	ldd	r25, Y+2	; 0x02
     d24:	0f 90       	pop	r0
     d26:	0f 90       	pop	r0
     d28:	df 91       	pop	r29
     d2a:	cf 91       	pop	r28
     d2c:	08 95       	ret

00000d2e <LevelProgression_Tick>:
     d2e:	cf 93       	push	r28
     d30:	df 93       	push	r29
     d32:	00 d0       	rcall	.+0      	; 0xd34 <LevelProgression_Tick+0x6>
     d34:	cd b7       	in	r28, 0x3d	; 61
     d36:	de b7       	in	r29, 0x3e	; 62
     d38:	9a 83       	std	Y+2, r25	; 0x02
     d3a:	89 83       	std	Y+1, r24	; 0x01
     d3c:	89 81       	ldd	r24, Y+1	; 0x01
     d3e:	9a 81       	ldd	r25, Y+2	; 0x02
     d40:	00 97       	sbiw	r24, 0x00	; 0
     d42:	19 f0       	breq	.+6      	; 0xd4a <LevelProgression_Tick+0x1c>
     d44:	01 97       	sbiw	r24, 0x01	; 1
     d46:	59 f0       	breq	.+22     	; 0xd5e <LevelProgression_Tick+0x30>
     d48:	12 c0       	rjmp	.+36     	; 0xd6e <LevelProgression_Tick+0x40>
     d4a:	80 91 6b 01 	lds	r24, 0x016B	; 0x80016b <beginGenerate>
     d4e:	81 30       	cpi	r24, 0x01	; 1
     d50:	29 f4       	brne	.+10     	; 0xd5c <LevelProgression_Tick+0x2e>
     d52:	81 e0       	ldi	r24, 0x01	; 1
     d54:	90 e0       	ldi	r25, 0x00	; 0
     d56:	9a 83       	std	Y+2, r25	; 0x02
     d58:	89 83       	std	Y+1, r24	; 0x01
     d5a:	0c c0       	rjmp	.+24     	; 0xd74 <LevelProgression_Tick+0x46>
     d5c:	0b c0       	rjmp	.+22     	; 0xd74 <LevelProgression_Tick+0x46>
     d5e:	80 91 6b 01 	lds	r24, 0x016B	; 0x80016b <beginGenerate>
     d62:	88 23       	and	r24, r24
     d64:	19 f4       	brne	.+6      	; 0xd6c <LevelProgression_Tick+0x3e>
     d66:	1a 82       	std	Y+2, r1	; 0x02
     d68:	19 82       	std	Y+1, r1	; 0x01
     d6a:	04 c0       	rjmp	.+8      	; 0xd74 <LevelProgression_Tick+0x46>
     d6c:	03 c0       	rjmp	.+6      	; 0xd74 <LevelProgression_Tick+0x46>
     d6e:	1a 82       	std	Y+2, r1	; 0x02
     d70:	19 82       	std	Y+1, r1	; 0x01
     d72:	00 00       	nop
     d74:	89 81       	ldd	r24, Y+1	; 0x01
     d76:	9a 81       	ldd	r25, Y+2	; 0x02
     d78:	00 97       	sbiw	r24, 0x00	; 0
     d7a:	19 f0       	breq	.+6      	; 0xd82 <LevelProgression_Tick+0x54>
     d7c:	01 97       	sbiw	r24, 0x01	; 1
     d7e:	29 f0       	breq	.+10     	; 0xd8a <LevelProgression_Tick+0x5c>
     d80:	0f c0       	rjmp	.+30     	; 0xda0 <LevelProgression_Tick+0x72>
     d82:	84 e1       	ldi	r24, 0x14	; 20
     d84:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <object_generate_prob>
     d88:	0b c0       	rjmp	.+22     	; 0xda0 <LevelProgression_Tick+0x72>
     d8a:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <object_generate_prob>
     d8e:	83 30       	cpi	r24, 0x03	; 3
     d90:	30 f0       	brcs	.+12     	; 0xd9e <LevelProgression_Tick+0x70>
     d92:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <object_generate_prob>
     d96:	81 50       	subi	r24, 0x01	; 1
     d98:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <object_generate_prob>
     d9c:	00 c0       	rjmp	.+0      	; 0xd9e <LevelProgression_Tick+0x70>
     d9e:	00 00       	nop
     da0:	89 81       	ldd	r24, Y+1	; 0x01
     da2:	9a 81       	ldd	r25, Y+2	; 0x02
     da4:	0f 90       	pop	r0
     da6:	0f 90       	pop	r0
     da8:	df 91       	pop	r29
     daa:	cf 91       	pop	r28
     dac:	08 95       	ret

00000dae <FiringMech_Tick>:

enum FiringMechSM {FM_start, FM_wait, FM_trigger, FM_release} FiringMechSM;

int FiringMech_Tick(int state) 
{
     dae:	cf 93       	push	r28
     db0:	df 93       	push	r29
     db2:	00 d0       	rcall	.+0      	; 0xdb4 <FiringMech_Tick+0x6>
     db4:	cd b7       	in	r28, 0x3d	; 61
     db6:	de b7       	in	r29, 0x3e	; 62
     db8:	9a 83       	std	Y+2, r25	; 0x02
     dba:	89 83       	std	Y+1, r24	; 0x01
	switch(state)
     dbc:	89 81       	ldd	r24, Y+1	; 0x01
     dbe:	9a 81       	ldd	r25, Y+2	; 0x02
     dc0:	81 30       	cpi	r24, 0x01	; 1
     dc2:	91 05       	cpc	r25, r1
     dc4:	89 f0       	breq	.+34     	; 0xde8 <FiringMech_Tick+0x3a>
     dc6:	82 30       	cpi	r24, 0x02	; 2
     dc8:	91 05       	cpc	r25, r1
     dca:	1c f4       	brge	.+6      	; 0xdd2 <FiringMech_Tick+0x24>
     dcc:	89 2b       	or	r24, r25
     dce:	39 f0       	breq	.+14     	; 0xdde <FiringMech_Tick+0x30>
     dd0:	24 c0       	rjmp	.+72     	; 0xe1a <FiringMech_Tick+0x6c>
     dd2:	82 30       	cpi	r24, 0x02	; 2
     dd4:	91 05       	cpc	r25, r1
     dd6:	91 f0       	breq	.+36     	; 0xdfc <FiringMech_Tick+0x4e>
     dd8:	03 97       	sbiw	r24, 0x03	; 3
     dda:	a9 f0       	breq	.+42     	; 0xe06 <FiringMech_Tick+0x58>
     ddc:	1e c0       	rjmp	.+60     	; 0xe1a <FiringMech_Tick+0x6c>
	{
		case FM_start:
			state = FM_wait;
     dde:	81 e0       	ldi	r24, 0x01	; 1
     de0:	90 e0       	ldi	r25, 0x00	; 0
     de2:	9a 83       	std	Y+2, r25	; 0x02
     de4:	89 83       	std	Y+1, r24	; 0x01
		break;
     de6:	1c c0       	rjmp	.+56     	; 0xe20 <FiringMech_Tick+0x72>
		
		case FM_wait:
			if (keypad_value == 'D')
     de8:	80 91 69 01 	lds	r24, 0x0169	; 0x800169 <keypad_value>
     dec:	84 34       	cpi	r24, 0x44	; 68
     dee:	29 f4       	brne	.+10     	; 0xdfa <FiringMech_Tick+0x4c>
			{
				state = FM_trigger;
     df0:	82 e0       	ldi	r24, 0x02	; 2
     df2:	90 e0       	ldi	r25, 0x00	; 0
     df4:	9a 83       	std	Y+2, r25	; 0x02
     df6:	89 83       	std	Y+1, r24	; 0x01
			}
		break;
     df8:	13 c0       	rjmp	.+38     	; 0xe20 <FiringMech_Tick+0x72>
     dfa:	12 c0       	rjmp	.+36     	; 0xe20 <FiringMech_Tick+0x72>
		
		case FM_trigger:
			state = FM_release;
     dfc:	83 e0       	ldi	r24, 0x03	; 3
     dfe:	90 e0       	ldi	r25, 0x00	; 0
     e00:	9a 83       	std	Y+2, r25	; 0x02
     e02:	89 83       	std	Y+1, r24	; 0x01
		break;
     e04:	0d c0       	rjmp	.+26     	; 0xe20 <FiringMech_Tick+0x72>
		
		case FM_release:
			if (keypad_value != 'D')
     e06:	80 91 69 01 	lds	r24, 0x0169	; 0x800169 <keypad_value>
     e0a:	84 34       	cpi	r24, 0x44	; 68
     e0c:	29 f0       	breq	.+10     	; 0xe18 <FiringMech_Tick+0x6a>
			{
				state = FM_wait;
     e0e:	81 e0       	ldi	r24, 0x01	; 1
     e10:	90 e0       	ldi	r25, 0x00	; 0
     e12:	9a 83       	std	Y+2, r25	; 0x02
     e14:	89 83       	std	Y+1, r24	; 0x01
			}
		break;
     e16:	04 c0       	rjmp	.+8      	; 0xe20 <FiringMech_Tick+0x72>
     e18:	03 c0       	rjmp	.+6      	; 0xe20 <FiringMech_Tick+0x72>
		
		default:
			state = FM_start;
     e1a:	1a 82       	std	Y+2, r1	; 0x02
     e1c:	19 82       	std	Y+1, r1	; 0x01
		break;
     e1e:	00 00       	nop
	}
	
	switch(state)
     e20:	89 81       	ldd	r24, Y+1	; 0x01
     e22:	9a 81       	ldd	r25, Y+2	; 0x02
     e24:	81 30       	cpi	r24, 0x01	; 1
     e26:	91 05       	cpc	r25, r1
     e28:	61 f0       	breq	.+24     	; 0xe42 <FiringMech_Tick+0x94>
     e2a:	82 30       	cpi	r24, 0x02	; 2
     e2c:	91 05       	cpc	r25, r1
     e2e:	1c f4       	brge	.+6      	; 0xe36 <FiringMech_Tick+0x88>
     e30:	89 2b       	or	r24, r25
     e32:	d9 f0       	breq	.+54     	; 0xe6a <FiringMech_Tick+0xbc>
		break;
		
		case FM_release:
		break;
		
		default: break;
     e34:	1d c0       	rjmp	.+58     	; 0xe70 <FiringMech_Tick+0xc2>
		default:
			state = FM_start;
		break;
	}
	
	switch(state)
     e36:	82 30       	cpi	r24, 0x02	; 2
     e38:	91 05       	cpc	r25, r1
     e3a:	71 f0       	breq	.+28     	; 0xe58 <FiringMech_Tick+0xaa>
     e3c:	03 97       	sbiw	r24, 0x03	; 3
     e3e:	b9 f0       	breq	.+46     	; 0xe6e <FiringMech_Tick+0xc0>
		break;
		
		case FM_release:
		break;
		
		default: break;
     e40:	17 c0       	rjmp	.+46     	; 0xe70 <FiringMech_Tick+0xc2>
	switch(state)
	{
		case FM_start: break;
		
		case FM_wait: 
			if (bulletPos > 0)
     e42:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <bulletPos>
     e46:	88 23       	and	r24, r24
     e48:	31 f0       	breq	.+12     	; 0xe56 <FiringMech_Tick+0xa8>
			{
				bulletPos--;
     e4a:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <bulletPos>
     e4e:	81 50       	subi	r24, 0x01	; 1
     e50:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <bulletPos>
			}
		break;
     e54:	0d c0       	rjmp	.+26     	; 0xe70 <FiringMech_Tick+0xc2>
     e56:	0c c0       	rjmp	.+24     	; 0xe70 <FiringMech_Tick+0xc2>
		
		case FM_trigger:
			bullet = 1;
     e58:	81 e0       	ldi	r24, 0x01	; 1
     e5a:	80 93 6e 01 	sts	0x016E, r24	; 0x80016e <bullet>
			
			bulletPos = playerPosition - 1;
     e5e:	80 91 2d 01 	lds	r24, 0x012D	; 0x80012d <playerPosition>
     e62:	81 50       	subi	r24, 0x01	; 1
     e64:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <bulletPos>
			
		break;
     e68:	03 c0       	rjmp	.+6      	; 0xe70 <FiringMech_Tick+0xc2>
		break;
	}
	
	switch(state)
	{
		case FM_start: break;
     e6a:	00 00       	nop
     e6c:	01 c0       	rjmp	.+2      	; 0xe70 <FiringMech_Tick+0xc2>
			bulletPos = playerPosition - 1;
			
		break;
		
		case FM_release:
		break;
     e6e:	00 00       	nop
		
		default: break;
	}
	
	return state;
     e70:	89 81       	ldd	r24, Y+1	; 0x01
     e72:	9a 81       	ldd	r25, Y+2	; 0x02
}
     e74:	0f 90       	pop	r0
     e76:	0f 90       	pop	r0
     e78:	df 91       	pop	r29
     e7a:	cf 91       	pop	r28
     e7c:	08 95       	ret

00000e7e <AI_Tick>:
#ifndef AI_H_
#define AI_H_
enum AISM {AI_start, AI_checkPos, AI_Move} AISM;
	
int AI_Tick(int state) 
{
     e7e:	cf 93       	push	r28
     e80:	df 93       	push	r29
     e82:	00 d0       	rcall	.+0      	; 0xe84 <AI_Tick+0x6>
     e84:	cd b7       	in	r28, 0x3d	; 61
     e86:	de b7       	in	r29, 0x3e	; 62
     e88:	9a 83       	std	Y+2, r25	; 0x02
     e8a:	89 83       	std	Y+1, r24	; 0x01
	switch(state)
     e8c:	89 81       	ldd	r24, Y+1	; 0x01
     e8e:	9a 81       	ldd	r25, Y+2	; 0x02
     e90:	81 30       	cpi	r24, 0x01	; 1
     e92:	91 05       	cpc	r25, r1
     e94:	51 f0       	breq	.+20     	; 0xeaa <AI_Tick+0x2c>
     e96:	82 30       	cpi	r24, 0x02	; 2
     e98:	91 05       	cpc	r25, r1
     e9a:	99 f0       	breq	.+38     	; 0xec2 <AI_Tick+0x44>
     e9c:	89 2b       	or	r24, r25
     e9e:	b1 f4       	brne	.+44     	; 0xecc <AI_Tick+0x4e>
	{
		case AI_start:
			state = AI_checkPos;
     ea0:	81 e0       	ldi	r24, 0x01	; 1
     ea2:	90 e0       	ldi	r25, 0x00	; 0
     ea4:	9a 83       	std	Y+2, r25	; 0x02
     ea6:	89 83       	std	Y+1, r24	; 0x01
		break;
     ea8:	14 c0       	rjmp	.+40     	; 0xed2 <AI_Tick+0x54>
		
		case AI_checkPos:
			if (playerPosition != AIPosition)
     eaa:	90 91 2d 01 	lds	r25, 0x012D	; 0x80012d <playerPosition>
     eae:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <AIPosition>
     eb2:	98 17       	cp	r25, r24
     eb4:	29 f0       	breq	.+10     	; 0xec0 <AI_Tick+0x42>
			{
				state = AI_Move;
     eb6:	82 e0       	ldi	r24, 0x02	; 2
     eb8:	90 e0       	ldi	r25, 0x00	; 0
     eba:	9a 83       	std	Y+2, r25	; 0x02
     ebc:	89 83       	std	Y+1, r24	; 0x01
			}
		break;
     ebe:	09 c0       	rjmp	.+18     	; 0xed2 <AI_Tick+0x54>
     ec0:	08 c0       	rjmp	.+16     	; 0xed2 <AI_Tick+0x54>
		
		case AI_Move:
			state = AI_checkPos;
     ec2:	81 e0       	ldi	r24, 0x01	; 1
     ec4:	90 e0       	ldi	r25, 0x00	; 0
     ec6:	9a 83       	std	Y+2, r25	; 0x02
     ec8:	89 83       	std	Y+1, r24	; 0x01
		break;
     eca:	03 c0       	rjmp	.+6      	; 0xed2 <AI_Tick+0x54>
		
		default: 
			state = AI_start;
     ecc:	1a 82       	std	Y+2, r1	; 0x02
     ece:	19 82       	std	Y+1, r1	; 0x01
		break;
     ed0:	00 00       	nop
	}
	
	switch(state) 
     ed2:	89 81       	ldd	r24, Y+1	; 0x01
     ed4:	9a 81       	ldd	r25, Y+2	; 0x02
     ed6:	81 30       	cpi	r24, 0x01	; 1
     ed8:	91 05       	cpc	r25, r1
     eda:	61 f0       	breq	.+24     	; 0xef4 <AI_Tick+0x76>
     edc:	82 30       	cpi	r24, 0x02	; 2
     ede:	91 05       	cpc	r25, r1
     ee0:	19 f0       	breq	.+6      	; 0xee8 <AI_Tick+0x6a>
     ee2:	89 2b       	or	r24, r25
     ee4:	49 f0       	breq	.+18     	; 0xef8 <AI_Tick+0x7a>
		
		case AI_Move:
			AIPosition = playerPosition - 15;
		break;
		
		default: break;
     ee6:	09 c0       	rjmp	.+18     	; 0xefa <AI_Tick+0x7c>
		case AI_checkPos:
			
		break;
		
		case AI_Move:
			AIPosition = playerPosition - 15;
     ee8:	80 91 2d 01 	lds	r24, 0x012D	; 0x80012d <playerPosition>
     eec:	8f 50       	subi	r24, 0x0F	; 15
     eee:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <AIPosition>
		break;
     ef2:	03 c0       	rjmp	.+6      	; 0xefa <AI_Tick+0x7c>
	{
		case AI_start: break;
		
		case AI_checkPos:
			
		break;
     ef4:	00 00       	nop
     ef6:	01 c0       	rjmp	.+2      	; 0xefa <AI_Tick+0x7c>
		break;
	}
	
	switch(state) 
	{
		case AI_start: break;
     ef8:	00 00       	nop
		
		default: break;
	}
	

	return state;	
     efa:	89 81       	ldd	r24, Y+1	; 0x01
     efc:	9a 81       	ldd	r25, Y+2	; 0x02
}
     efe:	0f 90       	pop	r0
     f00:	0f 90       	pop	r0
     f02:	df 91       	pop	r29
     f04:	cf 91       	pop	r28
     f06:	08 95       	ret

00000f08 <main>:
#include "AI.h"



int main(void)
{
     f08:	0f 93       	push	r16
     f0a:	1f 93       	push	r17
     f0c:	cf 93       	push	r28
     f0e:	df 93       	push	r29
     f10:	cd b7       	in	r28, 0x3d	; 61
     f12:	de b7       	in	r29, 0x3e	; 62
     f14:	c0 56       	subi	r28, 0x60	; 96
     f16:	d1 09       	sbc	r29, r1
     f18:	0f b6       	in	r0, 0x3f	; 63
     f1a:	f8 94       	cli
     f1c:	de bf       	out	0x3e, r29	; 62
     f1e:	0f be       	out	0x3f, r0	; 63
     f20:	cd bf       	out	0x3d, r28	; 61
	DDRB = 0xFF; PORTB = 0x00; // PORTB set to output, outputs init 0s
     f22:	84 e2       	ldi	r24, 0x24	; 36
     f24:	90 e0       	ldi	r25, 0x00	; 0
     f26:	2f ef       	ldi	r18, 0xFF	; 255
     f28:	fc 01       	movw	r30, r24
     f2a:	20 83       	st	Z, r18
     f2c:	85 e2       	ldi	r24, 0x25	; 37
     f2e:	90 e0       	ldi	r25, 0x00	; 0
     f30:	fc 01       	movw	r30, r24
     f32:	10 82       	st	Z, r1
	DDRC = 0xF0; PORTC = 0x0F; // PC7..4 outputs init 0s, PC3..0 inputs init 1s
     f34:	87 e2       	ldi	r24, 0x27	; 39
     f36:	90 e0       	ldi	r25, 0x00	; 0
     f38:	20 ef       	ldi	r18, 0xF0	; 240
     f3a:	fc 01       	movw	r30, r24
     f3c:	20 83       	st	Z, r18
     f3e:	88 e2       	ldi	r24, 0x28	; 40
     f40:	90 e0       	ldi	r25, 0x00	; 0
     f42:	2f e0       	ldi	r18, 0x0F	; 15
     f44:	fc 01       	movw	r30, r24
     f46:	20 83       	st	Z, r18
	DDRD = 0xFF; PORTD = 0x00;
     f48:	8a e2       	ldi	r24, 0x2A	; 42
     f4a:	90 e0       	ldi	r25, 0x00	; 0
     f4c:	2f ef       	ldi	r18, 0xFF	; 255
     f4e:	fc 01       	movw	r30, r24
     f50:	20 83       	st	Z, r18
     f52:	8b e2       	ldi	r24, 0x2B	; 43
     f54:	90 e0       	ldi	r25, 0x00	; 0
     f56:	fc 01       	movw	r30, r24
     f58:	10 82       	st	Z, r1
	
// 	bulletQ = QueueInit(1);

	/**Set individual task period********************************/
	unsigned long int ObstacleGenerator_calc	= 500;
     f5a:	84 ef       	ldi	r24, 0xF4	; 244
     f5c:	91 e0       	ldi	r25, 0x01	; 1
     f5e:	a0 e0       	ldi	r26, 0x00	; 0
     f60:	b0 e0       	ldi	r27, 0x00	; 0
     f62:	8b 83       	std	Y+3, r24	; 0x03
     f64:	9c 83       	std	Y+4, r25	; 0x04
     f66:	ad 83       	std	Y+5, r26	; 0x05
     f68:	be 83       	std	Y+6, r27	; 0x06
	unsigned long int Display_calc				= 500;
     f6a:	84 ef       	ldi	r24, 0xF4	; 244
     f6c:	91 e0       	ldi	r25, 0x01	; 1
     f6e:	a0 e0       	ldi	r26, 0x00	; 0
     f70:	b0 e0       	ldi	r27, 0x00	; 0
     f72:	8f 83       	std	Y+7, r24	; 0x07
     f74:	98 87       	std	Y+8, r25	; 0x08
     f76:	a9 87       	std	Y+9, r26	; 0x09
     f78:	ba 87       	std	Y+10, r27	; 0x0a
// 	unsigned long int Movement_calc				= 500;
// 	unsigned long int Collision_calc			= 500;
// 	unsigned long int LevelProgression_calc		= 500;
// 	unsigned long int FiringMech_calc			= 500;
	unsigned long int Movement_calc				= 10;
     f7a:	8a e0       	ldi	r24, 0x0A	; 10
     f7c:	90 e0       	ldi	r25, 0x00	; 0
     f7e:	a0 e0       	ldi	r26, 0x00	; 0
     f80:	b0 e0       	ldi	r27, 0x00	; 0
     f82:	8b 87       	std	Y+11, r24	; 0x0b
     f84:	9c 87       	std	Y+12, r25	; 0x0c
     f86:	ad 87       	std	Y+13, r26	; 0x0d
     f88:	be 87       	std	Y+14, r27	; 0x0e
	unsigned long int Collision_calc			= 100;
     f8a:	84 e6       	ldi	r24, 0x64	; 100
     f8c:	90 e0       	ldi	r25, 0x00	; 0
     f8e:	a0 e0       	ldi	r26, 0x00	; 0
     f90:	b0 e0       	ldi	r27, 0x00	; 0
     f92:	8f 87       	std	Y+15, r24	; 0x0f
     f94:	98 8b       	std	Y+16, r25	; 0x10
     f96:	a9 8b       	std	Y+17, r26	; 0x11
     f98:	ba 8b       	std	Y+18, r27	; 0x12
	unsigned long int LevelProgression_calc		= 2000;
     f9a:	80 ed       	ldi	r24, 0xD0	; 208
     f9c:	97 e0       	ldi	r25, 0x07	; 7
     f9e:	a0 e0       	ldi	r26, 0x00	; 0
     fa0:	b0 e0       	ldi	r27, 0x00	; 0
     fa2:	8b 8b       	std	Y+19, r24	; 0x13
     fa4:	9c 8b       	std	Y+20, r25	; 0x14
     fa6:	ad 8b       	std	Y+21, r26	; 0x15
     fa8:	be 8b       	std	Y+22, r27	; 0x16
	unsigned long int FiringMech_calc			= 100;
     faa:	84 e6       	ldi	r24, 0x64	; 100
     fac:	90 e0       	ldi	r25, 0x00	; 0
     fae:	a0 e0       	ldi	r26, 0x00	; 0
     fb0:	b0 e0       	ldi	r27, 0x00	; 0
     fb2:	8f 8b       	std	Y+23, r24	; 0x17
     fb4:	98 8f       	std	Y+24, r25	; 0x18
     fb6:	a9 8f       	std	Y+25, r26	; 0x19
     fb8:	ba 8f       	std	Y+26, r27	; 0x1a
	unsigned long int AI_calc					= 100;
     fba:	84 e6       	ldi	r24, 0x64	; 100
     fbc:	90 e0       	ldi	r25, 0x00	; 0
     fbe:	a0 e0       	ldi	r26, 0x00	; 0
     fc0:	b0 e0       	ldi	r27, 0x00	; 0
     fc2:	8b 8f       	std	Y+27, r24	; 0x1b
     fc4:	9c 8f       	std	Y+28, r25	; 0x1c
     fc6:	ad 8f       	std	Y+29, r26	; 0x1d
     fc8:	be 8f       	std	Y+30, r27	; 0x1e
	
		
	/**Set individual task properties********************************/
	
	//Calculating GCD
	unsigned long int tempGCD		= findGCD(ObstacleGenerator_calc, Display_calc);
     fca:	2f 81       	ldd	r18, Y+7	; 0x07
     fcc:	38 85       	ldd	r19, Y+8	; 0x08
     fce:	49 85       	ldd	r20, Y+9	; 0x09
     fd0:	5a 85       	ldd	r21, Y+10	; 0x0a
     fd2:	8b 81       	ldd	r24, Y+3	; 0x03
     fd4:	9c 81       	ldd	r25, Y+4	; 0x04
     fd6:	ad 81       	ldd	r26, Y+5	; 0x05
     fd8:	be 81       	ldd	r27, Y+6	; 0x06
     fda:	bc 01       	movw	r22, r24
     fdc:	cd 01       	movw	r24, r26
     fde:	40 da       	rcall	.-2944   	; 0x460 <findGCD>
     fe0:	dc 01       	movw	r26, r24
     fe2:	cb 01       	movw	r24, r22
     fe4:	8f 8f       	std	Y+31, r24	; 0x1f
     fe6:	98 a3       	std	Y+32, r25	; 0x20
     fe8:	a9 a3       	std	Y+33, r26	; 0x21
     fea:	ba a3       	std	Y+34, r27	; 0x22
					  tempGCD		= findGCD(tempGCD, Movement_calc);
     fec:	2b 85       	ldd	r18, Y+11	; 0x0b
     fee:	3c 85       	ldd	r19, Y+12	; 0x0c
     ff0:	4d 85       	ldd	r20, Y+13	; 0x0d
     ff2:	5e 85       	ldd	r21, Y+14	; 0x0e
     ff4:	8f 8d       	ldd	r24, Y+31	; 0x1f
     ff6:	98 a1       	ldd	r25, Y+32	; 0x20
     ff8:	a9 a1       	ldd	r26, Y+33	; 0x21
     ffa:	ba a1       	ldd	r27, Y+34	; 0x22
     ffc:	bc 01       	movw	r22, r24
     ffe:	cd 01       	movw	r24, r26
    1000:	2f da       	rcall	.-2978   	; 0x460 <findGCD>
    1002:	dc 01       	movw	r26, r24
    1004:	cb 01       	movw	r24, r22
    1006:	8f 8f       	std	Y+31, r24	; 0x1f
    1008:	98 a3       	std	Y+32, r25	; 0x20
    100a:	a9 a3       	std	Y+33, r26	; 0x21
    100c:	ba a3       	std	Y+34, r27	; 0x22
					  tempGCD		= findGCD(tempGCD, Collision_calc);
    100e:	2f 85       	ldd	r18, Y+15	; 0x0f
    1010:	38 89       	ldd	r19, Y+16	; 0x10
    1012:	49 89       	ldd	r20, Y+17	; 0x11
    1014:	5a 89       	ldd	r21, Y+18	; 0x12
    1016:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1018:	98 a1       	ldd	r25, Y+32	; 0x20
    101a:	a9 a1       	ldd	r26, Y+33	; 0x21
    101c:	ba a1       	ldd	r27, Y+34	; 0x22
    101e:	bc 01       	movw	r22, r24
    1020:	cd 01       	movw	r24, r26
    1022:	1e da       	rcall	.-3012   	; 0x460 <findGCD>
    1024:	dc 01       	movw	r26, r24
    1026:	cb 01       	movw	r24, r22
    1028:	8f 8f       	std	Y+31, r24	; 0x1f
    102a:	98 a3       	std	Y+32, r25	; 0x20
    102c:	a9 a3       	std	Y+33, r26	; 0x21
    102e:	ba a3       	std	Y+34, r27	; 0x22
					  tempGCD		= findGCD(tempGCD, LevelProgression_calc);
    1030:	2b 89       	ldd	r18, Y+19	; 0x13
    1032:	3c 89       	ldd	r19, Y+20	; 0x14
    1034:	4d 89       	ldd	r20, Y+21	; 0x15
    1036:	5e 89       	ldd	r21, Y+22	; 0x16
    1038:	8f 8d       	ldd	r24, Y+31	; 0x1f
    103a:	98 a1       	ldd	r25, Y+32	; 0x20
    103c:	a9 a1       	ldd	r26, Y+33	; 0x21
    103e:	ba a1       	ldd	r27, Y+34	; 0x22
    1040:	bc 01       	movw	r22, r24
    1042:	cd 01       	movw	r24, r26
    1044:	0d da       	rcall	.-3046   	; 0x460 <findGCD>
    1046:	dc 01       	movw	r26, r24
    1048:	cb 01       	movw	r24, r22
    104a:	8f 8f       	std	Y+31, r24	; 0x1f
    104c:	98 a3       	std	Y+32, r25	; 0x20
    104e:	a9 a3       	std	Y+33, r26	; 0x21
    1050:	ba a3       	std	Y+34, r27	; 0x22
					  tempGCD		= findGCD(tempGCD, FiringMech_calc);
    1052:	2f 89       	ldd	r18, Y+23	; 0x17
    1054:	38 8d       	ldd	r19, Y+24	; 0x18
    1056:	49 8d       	ldd	r20, Y+25	; 0x19
    1058:	5a 8d       	ldd	r21, Y+26	; 0x1a
    105a:	8f 8d       	ldd	r24, Y+31	; 0x1f
    105c:	98 a1       	ldd	r25, Y+32	; 0x20
    105e:	a9 a1       	ldd	r26, Y+33	; 0x21
    1060:	ba a1       	ldd	r27, Y+34	; 0x22
    1062:	bc 01       	movw	r22, r24
    1064:	cd 01       	movw	r24, r26
    1066:	fc d9       	rcall	.-3080   	; 0x460 <findGCD>
    1068:	dc 01       	movw	r26, r24
    106a:	cb 01       	movw	r24, r22
    106c:	8f 8f       	std	Y+31, r24	; 0x1f
    106e:	98 a3       	std	Y+32, r25	; 0x20
    1070:	a9 a3       	std	Y+33, r26	; 0x21
    1072:	ba a3       	std	Y+34, r27	; 0x22
					  tempGCD		= findGCD(tempGCD,AI_calc);
    1074:	2b 8d       	ldd	r18, Y+27	; 0x1b
    1076:	3c 8d       	ldd	r19, Y+28	; 0x1c
    1078:	4d 8d       	ldd	r20, Y+29	; 0x1d
    107a:	5e 8d       	ldd	r21, Y+30	; 0x1e
    107c:	8f 8d       	ldd	r24, Y+31	; 0x1f
    107e:	98 a1       	ldd	r25, Y+32	; 0x20
    1080:	a9 a1       	ldd	r26, Y+33	; 0x21
    1082:	ba a1       	ldd	r27, Y+34	; 0x22
    1084:	bc 01       	movw	r22, r24
    1086:	cd 01       	movw	r24, r26
    1088:	eb d9       	rcall	.-3114   	; 0x460 <findGCD>
    108a:	dc 01       	movw	r26, r24
    108c:	cb 01       	movw	r24, r22
    108e:	8f 8f       	std	Y+31, r24	; 0x1f
    1090:	98 a3       	std	Y+32, r25	; 0x20
    1092:	a9 a3       	std	Y+33, r26	; 0x21
    1094:	ba a3       	std	Y+34, r27	; 0x22
					  
	unsigned long int GCD			= tempGCD;
    1096:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1098:	98 a1       	ldd	r25, Y+32	; 0x20
    109a:	a9 a1       	ldd	r26, Y+33	; 0x21
    109c:	ba a1       	ldd	r27, Y+34	; 0x22
    109e:	8b a3       	std	Y+35, r24	; 0x23
    10a0:	9c a3       	std	Y+36, r25	; 0x24
    10a2:	ad a3       	std	Y+37, r26	; 0x25
    10a4:	be a3       	std	Y+38, r27	; 0x26
	//Recalculate GCD periods for scheduler
	unsigned long int Tick1_Period	= ObstacleGenerator_calc/GCD,
    10a6:	8b 81       	ldd	r24, Y+3	; 0x03
    10a8:	9c 81       	ldd	r25, Y+4	; 0x04
    10aa:	ad 81       	ldd	r26, Y+5	; 0x05
    10ac:	be 81       	ldd	r27, Y+6	; 0x06
    10ae:	2b a1       	ldd	r18, Y+35	; 0x23
    10b0:	3c a1       	ldd	r19, Y+36	; 0x24
    10b2:	4d a1       	ldd	r20, Y+37	; 0x25
    10b4:	5e a1       	ldd	r21, Y+38	; 0x26
    10b6:	bc 01       	movw	r22, r24
    10b8:	cd 01       	movw	r24, r26
    10ba:	0e d2       	rcall	.+1052   	; 0x14d8 <__udivmodsi4>
    10bc:	da 01       	movw	r26, r20
    10be:	c9 01       	movw	r24, r18
    10c0:	8f a3       	std	Y+39, r24	; 0x27
    10c2:	98 a7       	std	Y+40, r25	; 0x28
    10c4:	a9 a7       	std	Y+41, r26	; 0x29
    10c6:	ba a7       	std	Y+42, r27	; 0x2a
					  Tick2_period	= Display_calc/GCD,
    10c8:	8f 81       	ldd	r24, Y+7	; 0x07
    10ca:	98 85       	ldd	r25, Y+8	; 0x08
    10cc:	a9 85       	ldd	r26, Y+9	; 0x09
    10ce:	ba 85       	ldd	r27, Y+10	; 0x0a
    10d0:	2b a1       	ldd	r18, Y+35	; 0x23
    10d2:	3c a1       	ldd	r19, Y+36	; 0x24
    10d4:	4d a1       	ldd	r20, Y+37	; 0x25
    10d6:	5e a1       	ldd	r21, Y+38	; 0x26
    10d8:	bc 01       	movw	r22, r24
    10da:	cd 01       	movw	r24, r26
    10dc:	fd d1       	rcall	.+1018   	; 0x14d8 <__udivmodsi4>
    10de:	da 01       	movw	r26, r20
    10e0:	c9 01       	movw	r24, r18
    10e2:	8b a7       	std	Y+43, r24	; 0x2b
    10e4:	9c a7       	std	Y+44, r25	; 0x2c
    10e6:	ad a7       	std	Y+45, r26	; 0x2d
    10e8:	be a7       	std	Y+46, r27	; 0x2e
					  Tick3_period	= Movement_calc/GCD,
    10ea:	8b 85       	ldd	r24, Y+11	; 0x0b
    10ec:	9c 85       	ldd	r25, Y+12	; 0x0c
    10ee:	ad 85       	ldd	r26, Y+13	; 0x0d
    10f0:	be 85       	ldd	r27, Y+14	; 0x0e
    10f2:	2b a1       	ldd	r18, Y+35	; 0x23
    10f4:	3c a1       	ldd	r19, Y+36	; 0x24
    10f6:	4d a1       	ldd	r20, Y+37	; 0x25
    10f8:	5e a1       	ldd	r21, Y+38	; 0x26
    10fa:	bc 01       	movw	r22, r24
    10fc:	cd 01       	movw	r24, r26
    10fe:	ec d1       	rcall	.+984    	; 0x14d8 <__udivmodsi4>
    1100:	da 01       	movw	r26, r20
    1102:	c9 01       	movw	r24, r18
    1104:	8f a7       	std	Y+47, r24	; 0x2f
    1106:	98 ab       	std	Y+48, r25	; 0x30
    1108:	a9 ab       	std	Y+49, r26	; 0x31
    110a:	ba ab       	std	Y+50, r27	; 0x32
					  Tick4_period	= Collision_calc/GCD,
    110c:	8f 85       	ldd	r24, Y+15	; 0x0f
    110e:	98 89       	ldd	r25, Y+16	; 0x10
    1110:	a9 89       	ldd	r26, Y+17	; 0x11
    1112:	ba 89       	ldd	r27, Y+18	; 0x12
    1114:	2b a1       	ldd	r18, Y+35	; 0x23
    1116:	3c a1       	ldd	r19, Y+36	; 0x24
    1118:	4d a1       	ldd	r20, Y+37	; 0x25
    111a:	5e a1       	ldd	r21, Y+38	; 0x26
    111c:	bc 01       	movw	r22, r24
    111e:	cd 01       	movw	r24, r26
    1120:	db d1       	rcall	.+950    	; 0x14d8 <__udivmodsi4>
    1122:	da 01       	movw	r26, r20
    1124:	c9 01       	movw	r24, r18
    1126:	8b ab       	std	Y+51, r24	; 0x33
    1128:	9c ab       	std	Y+52, r25	; 0x34
    112a:	ad ab       	std	Y+53, r26	; 0x35
    112c:	be ab       	std	Y+54, r27	; 0x36
					  Tick5_period	= LevelProgression_calc/GCD,
    112e:	8b 89       	ldd	r24, Y+19	; 0x13
    1130:	9c 89       	ldd	r25, Y+20	; 0x14
    1132:	ad 89       	ldd	r26, Y+21	; 0x15
    1134:	be 89       	ldd	r27, Y+22	; 0x16
    1136:	2b a1       	ldd	r18, Y+35	; 0x23
    1138:	3c a1       	ldd	r19, Y+36	; 0x24
    113a:	4d a1       	ldd	r20, Y+37	; 0x25
    113c:	5e a1       	ldd	r21, Y+38	; 0x26
    113e:	bc 01       	movw	r22, r24
    1140:	cd 01       	movw	r24, r26
    1142:	ca d1       	rcall	.+916    	; 0x14d8 <__udivmodsi4>
    1144:	da 01       	movw	r26, r20
    1146:	c9 01       	movw	r24, r18
    1148:	8f ab       	std	Y+55, r24	; 0x37
    114a:	98 af       	std	Y+56, r25	; 0x38
    114c:	a9 af       	std	Y+57, r26	; 0x39
    114e:	ba af       	std	Y+58, r27	; 0x3a
					  Tick6_period	= FiringMech_calc/GCD,
    1150:	8f 89       	ldd	r24, Y+23	; 0x17
    1152:	98 8d       	ldd	r25, Y+24	; 0x18
    1154:	a9 8d       	ldd	r26, Y+25	; 0x19
    1156:	ba 8d       	ldd	r27, Y+26	; 0x1a
    1158:	2b a1       	ldd	r18, Y+35	; 0x23
    115a:	3c a1       	ldd	r19, Y+36	; 0x24
    115c:	4d a1       	ldd	r20, Y+37	; 0x25
    115e:	5e a1       	ldd	r21, Y+38	; 0x26
    1160:	bc 01       	movw	r22, r24
    1162:	cd 01       	movw	r24, r26
    1164:	b9 d1       	rcall	.+882    	; 0x14d8 <__udivmodsi4>
    1166:	da 01       	movw	r26, r20
    1168:	c9 01       	movw	r24, r18
    116a:	8b af       	std	Y+59, r24	; 0x3b
    116c:	9c af       	std	Y+60, r25	; 0x3c
    116e:	ad af       	std	Y+61, r26	; 0x3d
    1170:	be af       	std	Y+62, r27	; 0x3e
					  Tick7_period	= AI_calc/GCD;
    1172:	8e 01       	movw	r16, r28
    1174:	01 5c       	subi	r16, 0xC1	; 193
    1176:	1f 4f       	sbci	r17, 0xFF	; 255
    1178:	8b 8d       	ldd	r24, Y+27	; 0x1b
    117a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    117c:	ad 8d       	ldd	r26, Y+29	; 0x1d
    117e:	be 8d       	ldd	r27, Y+30	; 0x1e
    1180:	2b a1       	ldd	r18, Y+35	; 0x23
    1182:	3c a1       	ldd	r19, Y+36	; 0x24
    1184:	4d a1       	ldd	r20, Y+37	; 0x25
    1186:	5e a1       	ldd	r21, Y+38	; 0x26
    1188:	bc 01       	movw	r22, r24
    118a:	cd 01       	movw	r24, r26
    118c:	a5 d1       	rcall	.+842    	; 0x14d8 <__udivmodsi4>
    118e:	da 01       	movw	r26, r20
    1190:	c9 01       	movw	r24, r18
    1192:	f8 01       	movw	r30, r16
    1194:	80 83       	st	Z, r24
    1196:	91 83       	std	Z+1, r25	; 0x01
    1198:	a2 83       	std	Z+2, r26	; 0x02
    119a:	b3 83       	std	Z+3, r27	; 0x03
					  
	const unsigned short numTasks	= sizeof(tasks)/sizeof(task*);
    119c:	ce 01       	movw	r24, r28
    119e:	8d 5b       	subi	r24, 0xBD	; 189
    11a0:	9f 4f       	sbci	r25, 0xFF	; 255
    11a2:	27 e0       	ldi	r18, 0x07	; 7
    11a4:	30 e0       	ldi	r19, 0x00	; 0
    11a6:	fc 01       	movw	r30, r24
    11a8:	31 83       	std	Z+1, r19	; 0x01
    11aa:	20 83       	st	Z, r18
	
	/****************************************************************/
	
	/**Set individual task properties**************/
	task1.state						= 0;
    11ac:	10 92 6f 01 	sts	0x016F, r1	; 0x80016f <task1>
	task1.period					= Tick1_Period;
    11b0:	8f a1       	ldd	r24, Y+39	; 0x27
    11b2:	98 a5       	ldd	r25, Y+40	; 0x28
    11b4:	a9 a5       	ldd	r26, Y+41	; 0x29
    11b6:	ba a5       	ldd	r27, Y+42	; 0x2a
    11b8:	80 93 70 01 	sts	0x0170, r24	; 0x800170 <task1+0x1>
    11bc:	90 93 71 01 	sts	0x0171, r25	; 0x800171 <task1+0x2>
    11c0:	a0 93 72 01 	sts	0x0172, r26	; 0x800172 <task1+0x3>
    11c4:	b0 93 73 01 	sts	0x0173, r27	; 0x800173 <task1+0x4>
	task1.elapsedTime				= Tick1_Period;
    11c8:	8f a1       	ldd	r24, Y+39	; 0x27
    11ca:	98 a5       	ldd	r25, Y+40	; 0x28
    11cc:	a9 a5       	ldd	r26, Y+41	; 0x29
    11ce:	ba a5       	ldd	r27, Y+42	; 0x2a
    11d0:	80 93 74 01 	sts	0x0174, r24	; 0x800174 <task1+0x5>
    11d4:	90 93 75 01 	sts	0x0175, r25	; 0x800175 <task1+0x6>
    11d8:	a0 93 76 01 	sts	0x0176, r26	; 0x800176 <task1+0x7>
    11dc:	b0 93 77 01 	sts	0x0177, r27	; 0x800177 <task1+0x8>
	task1.TickFct					= &ObstacleGeneratorSM_Tick;
    11e0:	85 e9       	ldi	r24, 0x95	; 149
    11e2:	93 e0       	ldi	r25, 0x03	; 3
    11e4:	90 93 79 01 	sts	0x0179, r25	; 0x800179 <task1+0xa>
    11e8:	80 93 78 01 	sts	0x0178, r24	; 0x800178 <task1+0x9>
	
	// Task 2
	task2.state						= 0;//Task initial state.
    11ec:	10 92 7a 01 	sts	0x017A, r1	; 0x80017a <task2>
	task2.period					= Tick2_period;//Task Period.
    11f0:	8b a5       	ldd	r24, Y+43	; 0x2b
    11f2:	9c a5       	ldd	r25, Y+44	; 0x2c
    11f4:	ad a5       	ldd	r26, Y+45	; 0x2d
    11f6:	be a5       	ldd	r27, Y+46	; 0x2e
    11f8:	80 93 7b 01 	sts	0x017B, r24	; 0x80017b <task2+0x1>
    11fc:	90 93 7c 01 	sts	0x017C, r25	; 0x80017c <task2+0x2>
    1200:	a0 93 7d 01 	sts	0x017D, r26	; 0x80017d <task2+0x3>
    1204:	b0 93 7e 01 	sts	0x017E, r27	; 0x80017e <task2+0x4>
	task2.elapsedTime				= Tick2_period;//Task current elapsed time.
    1208:	8b a5       	ldd	r24, Y+43	; 0x2b
    120a:	9c a5       	ldd	r25, Y+44	; 0x2c
    120c:	ad a5       	ldd	r26, Y+45	; 0x2d
    120e:	be a5       	ldd	r27, Y+46	; 0x2e
    1210:	80 93 7f 01 	sts	0x017F, r24	; 0x80017f <task2+0x5>
    1214:	90 93 80 01 	sts	0x0180, r25	; 0x800180 <task2+0x6>
    1218:	a0 93 81 01 	sts	0x0181, r26	; 0x800181 <task2+0x7>
    121c:	b0 93 82 01 	sts	0x0182, r27	; 0x800182 <task2+0x8>
	task2.TickFct					= &DisplaySM_Tick;//Function pointer for the tick.
    1220:	84 e8       	ldi	r24, 0x84	; 132
    1222:	94 e0       	ldi	r25, 0x04	; 4
    1224:	90 93 84 01 	sts	0x0184, r25	; 0x800184 <task2+0xa>
    1228:	80 93 83 01 	sts	0x0183, r24	; 0x800183 <task2+0x9>
	
	//Task 3
	task3.state						= 0;//Task initial state.
    122c:	10 92 85 01 	sts	0x0185, r1	; 0x800185 <task3>
	task3.period					= Tick3_period;//Task Period.
    1230:	8f a5       	ldd	r24, Y+47	; 0x2f
    1232:	98 a9       	ldd	r25, Y+48	; 0x30
    1234:	a9 a9       	ldd	r26, Y+49	; 0x31
    1236:	ba a9       	ldd	r27, Y+50	; 0x32
    1238:	80 93 86 01 	sts	0x0186, r24	; 0x800186 <task3+0x1>
    123c:	90 93 87 01 	sts	0x0187, r25	; 0x800187 <task3+0x2>
    1240:	a0 93 88 01 	sts	0x0188, r26	; 0x800188 <task3+0x3>
    1244:	b0 93 89 01 	sts	0x0189, r27	; 0x800189 <task3+0x4>
	task3.elapsedTime				= Tick3_period;//Task current elapsed time.
    1248:	8f a5       	ldd	r24, Y+47	; 0x2f
    124a:	98 a9       	ldd	r25, Y+48	; 0x30
    124c:	a9 a9       	ldd	r26, Y+49	; 0x31
    124e:	ba a9       	ldd	r27, Y+50	; 0x32
    1250:	80 93 8a 01 	sts	0x018A, r24	; 0x80018a <task3+0x5>
    1254:	90 93 8b 01 	sts	0x018B, r25	; 0x80018b <task3+0x6>
    1258:	a0 93 8c 01 	sts	0x018C, r26	; 0x80018c <task3+0x7>
    125c:	b0 93 8d 01 	sts	0x018D, r27	; 0x80018d <task3+0x8>
	task3.TickFct					= &Movement_Tick;//Function pointer for the tick.
    1260:	87 e5       	ldi	r24, 0x57	; 87
    1262:	95 e0       	ldi	r25, 0x05	; 5
    1264:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <task3+0xa>
    1268:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <task3+0x9>
	
	//Task 4
	task4.state						= 0;//Task initial state.
    126c:	10 92 90 01 	sts	0x0190, r1	; 0x800190 <task4>
	task4.period					= Tick4_period;//Task Period.
    1270:	8b a9       	ldd	r24, Y+51	; 0x33
    1272:	9c a9       	ldd	r25, Y+52	; 0x34
    1274:	ad a9       	ldd	r26, Y+53	; 0x35
    1276:	be a9       	ldd	r27, Y+54	; 0x36
    1278:	80 93 91 01 	sts	0x0191, r24	; 0x800191 <task4+0x1>
    127c:	90 93 92 01 	sts	0x0192, r25	; 0x800192 <task4+0x2>
    1280:	a0 93 93 01 	sts	0x0193, r26	; 0x800193 <task4+0x3>
    1284:	b0 93 94 01 	sts	0x0194, r27	; 0x800194 <task4+0x4>
	task4.elapsedTime				= Tick4_period;//Task current elapsed time.
    1288:	8b a9       	ldd	r24, Y+51	; 0x33
    128a:	9c a9       	ldd	r25, Y+52	; 0x34
    128c:	ad a9       	ldd	r26, Y+53	; 0x35
    128e:	be a9       	ldd	r27, Y+54	; 0x36
    1290:	80 93 95 01 	sts	0x0195, r24	; 0x800195 <task4+0x5>
    1294:	90 93 96 01 	sts	0x0196, r25	; 0x800196 <task4+0x6>
    1298:	a0 93 97 01 	sts	0x0197, r26	; 0x800197 <task4+0x7>
    129c:	b0 93 98 01 	sts	0x0198, r27	; 0x800198 <task4+0x8>
	task4.TickFct					= &Collision_Tick;//Function pointer for the tick.
    12a0:	89 ed       	ldi	r24, 0xD9	; 217
    12a2:	95 e0       	ldi	r25, 0x05	; 5
    12a4:	90 93 9a 01 	sts	0x019A, r25	; 0x80019a <task4+0xa>
    12a8:	80 93 99 01 	sts	0x0199, r24	; 0x800199 <task4+0x9>
	
	//Task 5
	task5.state						= 0;//Task initial state.
    12ac:	10 92 9b 01 	sts	0x019B, r1	; 0x80019b <task5>
	task5.period					= Tick5_period;//Task Period.
    12b0:	8f a9       	ldd	r24, Y+55	; 0x37
    12b2:	98 ad       	ldd	r25, Y+56	; 0x38
    12b4:	a9 ad       	ldd	r26, Y+57	; 0x39
    12b6:	ba ad       	ldd	r27, Y+58	; 0x3a
    12b8:	80 93 9c 01 	sts	0x019C, r24	; 0x80019c <task5+0x1>
    12bc:	90 93 9d 01 	sts	0x019D, r25	; 0x80019d <task5+0x2>
    12c0:	a0 93 9e 01 	sts	0x019E, r26	; 0x80019e <task5+0x3>
    12c4:	b0 93 9f 01 	sts	0x019F, r27	; 0x80019f <task5+0x4>
	task5.elapsedTime				= Tick5_period;//Task current elapsed time.
    12c8:	8f a9       	ldd	r24, Y+55	; 0x37
    12ca:	98 ad       	ldd	r25, Y+56	; 0x38
    12cc:	a9 ad       	ldd	r26, Y+57	; 0x39
    12ce:	ba ad       	ldd	r27, Y+58	; 0x3a
    12d0:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <task5+0x5>
    12d4:	90 93 a1 01 	sts	0x01A1, r25	; 0x8001a1 <task5+0x6>
    12d8:	a0 93 a2 01 	sts	0x01A2, r26	; 0x8001a2 <task5+0x7>
    12dc:	b0 93 a3 01 	sts	0x01A3, r27	; 0x8001a3 <task5+0x8>
	task5.TickFct					= &LevelProgression_Tick;//Function pointer for the tick.
    12e0:	87 e9       	ldi	r24, 0x97	; 151
    12e2:	96 e0       	ldi	r25, 0x06	; 6
    12e4:	90 93 a5 01 	sts	0x01A5, r25	; 0x8001a5 <task5+0xa>
    12e8:	80 93 a4 01 	sts	0x01A4, r24	; 0x8001a4 <task5+0x9>
	
	//Task 6
	task6.state						= 0;//Task initial state.
    12ec:	10 92 a6 01 	sts	0x01A6, r1	; 0x8001a6 <task6>
	task6.period					= Tick6_period;//Task Period.
    12f0:	8b ad       	ldd	r24, Y+59	; 0x3b
    12f2:	9c ad       	ldd	r25, Y+60	; 0x3c
    12f4:	ad ad       	ldd	r26, Y+61	; 0x3d
    12f6:	be ad       	ldd	r27, Y+62	; 0x3e
    12f8:	80 93 a7 01 	sts	0x01A7, r24	; 0x8001a7 <task6+0x1>
    12fc:	90 93 a8 01 	sts	0x01A8, r25	; 0x8001a8 <task6+0x2>
    1300:	a0 93 a9 01 	sts	0x01A9, r26	; 0x8001a9 <task6+0x3>
    1304:	b0 93 aa 01 	sts	0x01AA, r27	; 0x8001aa <task6+0x4>
	task6.elapsedTime				= Tick6_period;//Task current elapsed time.
    1308:	8b ad       	ldd	r24, Y+59	; 0x3b
    130a:	9c ad       	ldd	r25, Y+60	; 0x3c
    130c:	ad ad       	ldd	r26, Y+61	; 0x3d
    130e:	be ad       	ldd	r27, Y+62	; 0x3e
    1310:	80 93 ab 01 	sts	0x01AB, r24	; 0x8001ab <task6+0x5>
    1314:	90 93 ac 01 	sts	0x01AC, r25	; 0x8001ac <task6+0x6>
    1318:	a0 93 ad 01 	sts	0x01AD, r26	; 0x8001ad <task6+0x7>
    131c:	b0 93 ae 01 	sts	0x01AE, r27	; 0x8001ae <task6+0x8>
	task6.TickFct					= &FiringMech_Tick;//Function pointer for the tick.
    1320:	87 ed       	ldi	r24, 0xD7	; 215
    1322:	96 e0       	ldi	r25, 0x06	; 6
    1324:	90 93 b0 01 	sts	0x01B0, r25	; 0x8001b0 <task6+0xa>
    1328:	80 93 af 01 	sts	0x01AF, r24	; 0x8001af <task6+0x9>
	
	//Task 7
	task7.state						= 0;//Task initial state.
    132c:	10 92 b1 01 	sts	0x01B1, r1	; 0x8001b1 <task7>
	task7.period					= Tick7_period;//Task Period.
    1330:	ce 01       	movw	r24, r28
    1332:	cf 96       	adiw	r24, 0x3f	; 63
    1334:	fc 01       	movw	r30, r24
    1336:	80 81       	ld	r24, Z
    1338:	91 81       	ldd	r25, Z+1	; 0x01
    133a:	a2 81       	ldd	r26, Z+2	; 0x02
    133c:	b3 81       	ldd	r27, Z+3	; 0x03
    133e:	80 93 b2 01 	sts	0x01B2, r24	; 0x8001b2 <task7+0x1>
    1342:	90 93 b3 01 	sts	0x01B3, r25	; 0x8001b3 <task7+0x2>
    1346:	a0 93 b4 01 	sts	0x01B4, r26	; 0x8001b4 <task7+0x3>
    134a:	b0 93 b5 01 	sts	0x01B5, r27	; 0x8001b5 <task7+0x4>
	task7.elapsedTime				= Tick7_period;//Task current elapsed time.
    134e:	ce 01       	movw	r24, r28
    1350:	cf 96       	adiw	r24, 0x3f	; 63
    1352:	fc 01       	movw	r30, r24
    1354:	80 81       	ld	r24, Z
    1356:	91 81       	ldd	r25, Z+1	; 0x01
    1358:	a2 81       	ldd	r26, Z+2	; 0x02
    135a:	b3 81       	ldd	r27, Z+3	; 0x03
    135c:	80 93 b6 01 	sts	0x01B6, r24	; 0x8001b6 <task7+0x5>
    1360:	90 93 b7 01 	sts	0x01B7, r25	; 0x8001b7 <task7+0x6>
    1364:	a0 93 b8 01 	sts	0x01B8, r26	; 0x8001b8 <task7+0x7>
    1368:	b0 93 b9 01 	sts	0x01B9, r27	; 0x8001b9 <task7+0x8>
	task7.TickFct					= &AI_Tick;//Function pointer for the tick.
    136c:	8f e3       	ldi	r24, 0x3F	; 63
    136e:	97 e0       	ldi	r25, 0x07	; 7
    1370:	90 93 bb 01 	sts	0x01BB, r25	; 0x8001bb <task7+0xa>
    1374:	80 93 ba 01 	sts	0x01BA, r24	; 0x8001ba <task7+0x9>

	/**********************************************/
	
	
	TimerSet(GCD);
    1378:	8b a1       	ldd	r24, Y+35	; 0x23
    137a:	9c a1       	ldd	r25, Y+36	; 0x24
    137c:	ad a1       	ldd	r26, Y+37	; 0x25
    137e:	be a1       	ldd	r27, Y+38	; 0x26
    1380:	bc 01       	movw	r22, r24
    1382:	cd 01       	movw	r24, r26
    1384:	0e 94 63 01 	call	0x2c6	; 0x2c6 <TimerSet>
	TimerOn();
    1388:	0e 94 90 01 	call	0x320	; 0x320 <TimerOn>
	
	LCD_init();
    138c:	0e 94 6e 00 	call	0xdc	; 0xdc <LCD_init>
	
	while(1) 
	{
		for(unsigned short i = 0; i < numTasks; i++)
    1390:	1a 82       	std	Y+2, r1	; 0x02
    1392:	19 82       	std	Y+1, r1	; 0x01
    1394:	7a c0       	rjmp	.+244    	; 0x148a <main+0x582>
		{
			//keypad_value = GetKeypadKey();
			if(tasks[i] -> elapsedTime == tasks[i]-> period)
    1396:	89 81       	ldd	r24, Y+1	; 0x01
    1398:	9a 81       	ldd	r25, Y+2	; 0x02
    139a:	88 0f       	add	r24, r24
    139c:	99 1f       	adc	r25, r25
    139e:	8d 5c       	subi	r24, 0xCD	; 205
    13a0:	9e 4f       	sbci	r25, 0xFE	; 254
    13a2:	fc 01       	movw	r30, r24
    13a4:	80 81       	ld	r24, Z
    13a6:	91 81       	ldd	r25, Z+1	; 0x01
    13a8:	fc 01       	movw	r30, r24
    13aa:	25 81       	ldd	r18, Z+5	; 0x05
    13ac:	36 81       	ldd	r19, Z+6	; 0x06
    13ae:	47 81       	ldd	r20, Z+7	; 0x07
    13b0:	50 85       	ldd	r21, Z+8	; 0x08
    13b2:	89 81       	ldd	r24, Y+1	; 0x01
    13b4:	9a 81       	ldd	r25, Y+2	; 0x02
    13b6:	88 0f       	add	r24, r24
    13b8:	99 1f       	adc	r25, r25
    13ba:	8d 5c       	subi	r24, 0xCD	; 205
    13bc:	9e 4f       	sbci	r25, 0xFE	; 254
    13be:	fc 01       	movw	r30, r24
    13c0:	80 81       	ld	r24, Z
    13c2:	91 81       	ldd	r25, Z+1	; 0x01
    13c4:	fc 01       	movw	r30, r24
    13c6:	81 81       	ldd	r24, Z+1	; 0x01
    13c8:	92 81       	ldd	r25, Z+2	; 0x02
    13ca:	a3 81       	ldd	r26, Z+3	; 0x03
    13cc:	b4 81       	ldd	r27, Z+4	; 0x04
    13ce:	28 17       	cp	r18, r24
    13d0:	39 07       	cpc	r19, r25
    13d2:	4a 07       	cpc	r20, r26
    13d4:	5b 07       	cpc	r21, r27
    13d6:	a9 f5       	brne	.+106    	; 0x1442 <main+0x53a>
			{
				
				tasks[i] -> state		= tasks[i] -> TickFct(tasks[i] -> state);
    13d8:	89 81       	ldd	r24, Y+1	; 0x01
    13da:	9a 81       	ldd	r25, Y+2	; 0x02
    13dc:	88 0f       	add	r24, r24
    13de:	99 1f       	adc	r25, r25
    13e0:	8d 5c       	subi	r24, 0xCD	; 205
    13e2:	9e 4f       	sbci	r25, 0xFE	; 254
    13e4:	fc 01       	movw	r30, r24
    13e6:	00 81       	ld	r16, Z
    13e8:	11 81       	ldd	r17, Z+1	; 0x01
    13ea:	89 81       	ldd	r24, Y+1	; 0x01
    13ec:	9a 81       	ldd	r25, Y+2	; 0x02
    13ee:	88 0f       	add	r24, r24
    13f0:	99 1f       	adc	r25, r25
    13f2:	8d 5c       	subi	r24, 0xCD	; 205
    13f4:	9e 4f       	sbci	r25, 0xFE	; 254
    13f6:	fc 01       	movw	r30, r24
    13f8:	80 81       	ld	r24, Z
    13fa:	91 81       	ldd	r25, Z+1	; 0x01
    13fc:	fc 01       	movw	r30, r24
    13fe:	21 85       	ldd	r18, Z+9	; 0x09
    1400:	32 85       	ldd	r19, Z+10	; 0x0a
    1402:	89 81       	ldd	r24, Y+1	; 0x01
    1404:	9a 81       	ldd	r25, Y+2	; 0x02
    1406:	88 0f       	add	r24, r24
    1408:	99 1f       	adc	r25, r25
    140a:	8d 5c       	subi	r24, 0xCD	; 205
    140c:	9e 4f       	sbci	r25, 0xFE	; 254
    140e:	fc 01       	movw	r30, r24
    1410:	80 81       	ld	r24, Z
    1412:	91 81       	ldd	r25, Z+1	; 0x01
    1414:	fc 01       	movw	r30, r24
    1416:	80 81       	ld	r24, Z
    1418:	08 2e       	mov	r0, r24
    141a:	00 0c       	add	r0, r0
    141c:	99 0b       	sbc	r25, r25
    141e:	f9 01       	movw	r30, r18
    1420:	09 95       	icall
    1422:	f8 01       	movw	r30, r16
    1424:	80 83       	st	Z, r24
				tasks[i] -> elapsedTime = 0;
    1426:	89 81       	ldd	r24, Y+1	; 0x01
    1428:	9a 81       	ldd	r25, Y+2	; 0x02
    142a:	88 0f       	add	r24, r24
    142c:	99 1f       	adc	r25, r25
    142e:	8d 5c       	subi	r24, 0xCD	; 205
    1430:	9e 4f       	sbci	r25, 0xFE	; 254
    1432:	fc 01       	movw	r30, r24
    1434:	80 81       	ld	r24, Z
    1436:	91 81       	ldd	r25, Z+1	; 0x01
    1438:	fc 01       	movw	r30, r24
    143a:	15 82       	std	Z+5, r1	; 0x05
    143c:	16 82       	std	Z+6, r1	; 0x06
    143e:	17 82       	std	Z+7, r1	; 0x07
    1440:	10 86       	std	Z+8, r1	; 0x08
			}
			tasks[i] -> elapsedTime += 1;
    1442:	89 81       	ldd	r24, Y+1	; 0x01
    1444:	9a 81       	ldd	r25, Y+2	; 0x02
    1446:	88 0f       	add	r24, r24
    1448:	99 1f       	adc	r25, r25
    144a:	8d 5c       	subi	r24, 0xCD	; 205
    144c:	9e 4f       	sbci	r25, 0xFE	; 254
    144e:	fc 01       	movw	r30, r24
    1450:	20 81       	ld	r18, Z
    1452:	31 81       	ldd	r19, Z+1	; 0x01
    1454:	89 81       	ldd	r24, Y+1	; 0x01
    1456:	9a 81       	ldd	r25, Y+2	; 0x02
    1458:	88 0f       	add	r24, r24
    145a:	99 1f       	adc	r25, r25
    145c:	8d 5c       	subi	r24, 0xCD	; 205
    145e:	9e 4f       	sbci	r25, 0xFE	; 254
    1460:	fc 01       	movw	r30, r24
    1462:	80 81       	ld	r24, Z
    1464:	91 81       	ldd	r25, Z+1	; 0x01
    1466:	fc 01       	movw	r30, r24
    1468:	85 81       	ldd	r24, Z+5	; 0x05
    146a:	96 81       	ldd	r25, Z+6	; 0x06
    146c:	a7 81       	ldd	r26, Z+7	; 0x07
    146e:	b0 85       	ldd	r27, Z+8	; 0x08
    1470:	01 96       	adiw	r24, 0x01	; 1
    1472:	a1 1d       	adc	r26, r1
    1474:	b1 1d       	adc	r27, r1
    1476:	f9 01       	movw	r30, r18
    1478:	85 83       	std	Z+5, r24	; 0x05
    147a:	96 83       	std	Z+6, r25	; 0x06
    147c:	a7 83       	std	Z+7, r26	; 0x07
    147e:	b0 87       	std	Z+8, r27	; 0x08
	
	LCD_init();
	
	while(1) 
	{
		for(unsigned short i = 0; i < numTasks; i++)
    1480:	89 81       	ldd	r24, Y+1	; 0x01
    1482:	9a 81       	ldd	r25, Y+2	; 0x02
    1484:	01 96       	adiw	r24, 0x01	; 1
    1486:	9a 83       	std	Y+2, r25	; 0x02
    1488:	89 83       	std	Y+1, r24	; 0x01
    148a:	ce 01       	movw	r24, r28
    148c:	8d 5b       	subi	r24, 0xBD	; 189
    148e:	9f 4f       	sbci	r25, 0xFF	; 255
    1490:	29 81       	ldd	r18, Y+1	; 0x01
    1492:	3a 81       	ldd	r19, Y+2	; 0x02
    1494:	fc 01       	movw	r30, r24
    1496:	80 81       	ld	r24, Z
    1498:	91 81       	ldd	r25, Z+1	; 0x01
    149a:	28 17       	cp	r18, r24
    149c:	39 07       	cpc	r19, r25
    149e:	08 f4       	brcc	.+2      	; 0x14a2 <main+0x59a>
    14a0:	7a cf       	rjmp	.-268    	; 0x1396 <main+0x48e>
				tasks[i] -> state		= tasks[i] -> TickFct(tasks[i] -> state);
				tasks[i] -> elapsedTime = 0;
			}
			tasks[i] -> elapsedTime += 1;
		}
		while(!TimerFlag);
    14a2:	00 00       	nop
    14a4:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <__data_end>
    14a8:	88 23       	and	r24, r24
    14aa:	e1 f3       	breq	.-8      	; 0x14a4 <main+0x59c>
		TimerFlag = 0;
    14ac:	10 92 64 01 	sts	0x0164, r1	; 0x800164 <__data_end>
	}
    14b0:	6f cf       	rjmp	.-290    	; 0x1390 <main+0x488>

000014b2 <__divmodhi4>:
    14b2:	97 fb       	bst	r25, 7
    14b4:	07 2e       	mov	r0, r23
    14b6:	16 f4       	brtc	.+4      	; 0x14bc <__divmodhi4+0xa>
    14b8:	00 94       	com	r0
    14ba:	06 d0       	rcall	.+12     	; 0x14c8 <__divmodhi4_neg1>
    14bc:	77 fd       	sbrc	r23, 7
    14be:	08 d0       	rcall	.+16     	; 0x14d0 <__divmodhi4_neg2>
    14c0:	2d d0       	rcall	.+90     	; 0x151c <__udivmodhi4>
    14c2:	07 fc       	sbrc	r0, 7
    14c4:	05 d0       	rcall	.+10     	; 0x14d0 <__divmodhi4_neg2>
    14c6:	3e f4       	brtc	.+14     	; 0x14d6 <__divmodhi4_exit>

000014c8 <__divmodhi4_neg1>:
    14c8:	90 95       	com	r25
    14ca:	81 95       	neg	r24
    14cc:	9f 4f       	sbci	r25, 0xFF	; 255
    14ce:	08 95       	ret

000014d0 <__divmodhi4_neg2>:
    14d0:	70 95       	com	r23
    14d2:	61 95       	neg	r22
    14d4:	7f 4f       	sbci	r23, 0xFF	; 255

000014d6 <__divmodhi4_exit>:
    14d6:	08 95       	ret

000014d8 <__udivmodsi4>:
    14d8:	a1 e2       	ldi	r26, 0x21	; 33
    14da:	1a 2e       	mov	r1, r26
    14dc:	aa 1b       	sub	r26, r26
    14de:	bb 1b       	sub	r27, r27
    14e0:	fd 01       	movw	r30, r26
    14e2:	0d c0       	rjmp	.+26     	; 0x14fe <__udivmodsi4_ep>

000014e4 <__udivmodsi4_loop>:
    14e4:	aa 1f       	adc	r26, r26
    14e6:	bb 1f       	adc	r27, r27
    14e8:	ee 1f       	adc	r30, r30
    14ea:	ff 1f       	adc	r31, r31
    14ec:	a2 17       	cp	r26, r18
    14ee:	b3 07       	cpc	r27, r19
    14f0:	e4 07       	cpc	r30, r20
    14f2:	f5 07       	cpc	r31, r21
    14f4:	20 f0       	brcs	.+8      	; 0x14fe <__udivmodsi4_ep>
    14f6:	a2 1b       	sub	r26, r18
    14f8:	b3 0b       	sbc	r27, r19
    14fa:	e4 0b       	sbc	r30, r20
    14fc:	f5 0b       	sbc	r31, r21

000014fe <__udivmodsi4_ep>:
    14fe:	66 1f       	adc	r22, r22
    1500:	77 1f       	adc	r23, r23
    1502:	88 1f       	adc	r24, r24
    1504:	99 1f       	adc	r25, r25
    1506:	1a 94       	dec	r1
    1508:	69 f7       	brne	.-38     	; 0x14e4 <__udivmodsi4_loop>
    150a:	60 95       	com	r22
    150c:	70 95       	com	r23
    150e:	80 95       	com	r24
    1510:	90 95       	com	r25
    1512:	9b 01       	movw	r18, r22
    1514:	ac 01       	movw	r20, r24
    1516:	bd 01       	movw	r22, r26
    1518:	cf 01       	movw	r24, r30
    151a:	08 95       	ret

0000151c <__udivmodhi4>:
    151c:	aa 1b       	sub	r26, r26
    151e:	bb 1b       	sub	r27, r27
    1520:	51 e1       	ldi	r21, 0x11	; 17
    1522:	07 c0       	rjmp	.+14     	; 0x1532 <__udivmodhi4_ep>

00001524 <__udivmodhi4_loop>:
    1524:	aa 1f       	adc	r26, r26
    1526:	bb 1f       	adc	r27, r27
    1528:	a6 17       	cp	r26, r22
    152a:	b7 07       	cpc	r27, r23
    152c:	10 f0       	brcs	.+4      	; 0x1532 <__udivmodhi4_ep>
    152e:	a6 1b       	sub	r26, r22
    1530:	b7 0b       	sbc	r27, r23

00001532 <__udivmodhi4_ep>:
    1532:	88 1f       	adc	r24, r24
    1534:	99 1f       	adc	r25, r25
    1536:	5a 95       	dec	r21
    1538:	a9 f7       	brne	.-22     	; 0x1524 <__udivmodhi4_loop>
    153a:	80 95       	com	r24
    153c:	90 95       	com	r25
    153e:	bc 01       	movw	r22, r24
    1540:	cd 01       	movw	r24, r26
    1542:	08 95       	ret

00001544 <do_rand>:
    1544:	8f 92       	push	r8
    1546:	9f 92       	push	r9
    1548:	af 92       	push	r10
    154a:	bf 92       	push	r11
    154c:	cf 92       	push	r12
    154e:	df 92       	push	r13
    1550:	ef 92       	push	r14
    1552:	ff 92       	push	r15
    1554:	cf 93       	push	r28
    1556:	df 93       	push	r29
    1558:	ec 01       	movw	r28, r24
    155a:	68 81       	ld	r22, Y
    155c:	79 81       	ldd	r23, Y+1	; 0x01
    155e:	8a 81       	ldd	r24, Y+2	; 0x02
    1560:	9b 81       	ldd	r25, Y+3	; 0x03
    1562:	61 15       	cp	r22, r1
    1564:	71 05       	cpc	r23, r1
    1566:	81 05       	cpc	r24, r1
    1568:	91 05       	cpc	r25, r1
    156a:	21 f4       	brne	.+8      	; 0x1574 <do_rand+0x30>
    156c:	64 e2       	ldi	r22, 0x24	; 36
    156e:	79 ed       	ldi	r23, 0xD9	; 217
    1570:	8b e5       	ldi	r24, 0x5B	; 91
    1572:	97 e0       	ldi	r25, 0x07	; 7
    1574:	2d e1       	ldi	r18, 0x1D	; 29
    1576:	33 ef       	ldi	r19, 0xF3	; 243
    1578:	41 e0       	ldi	r20, 0x01	; 1
    157a:	50 e0       	ldi	r21, 0x00	; 0
    157c:	38 d0       	rcall	.+112    	; 0x15ee <__divmodsi4>
    157e:	49 01       	movw	r8, r18
    1580:	5a 01       	movw	r10, r20
    1582:	9b 01       	movw	r18, r22
    1584:	ac 01       	movw	r20, r24
    1586:	a7 ea       	ldi	r26, 0xA7	; 167
    1588:	b1 e4       	ldi	r27, 0x41	; 65
    158a:	4d d0       	rcall	.+154    	; 0x1626 <__muluhisi3>
    158c:	6b 01       	movw	r12, r22
    158e:	7c 01       	movw	r14, r24
    1590:	ac ee       	ldi	r26, 0xEC	; 236
    1592:	b4 ef       	ldi	r27, 0xF4	; 244
    1594:	a5 01       	movw	r20, r10
    1596:	94 01       	movw	r18, r8
    1598:	52 d0       	rcall	.+164    	; 0x163e <__mulohisi3>
    159a:	dc 01       	movw	r26, r24
    159c:	cb 01       	movw	r24, r22
    159e:	8c 0d       	add	r24, r12
    15a0:	9d 1d       	adc	r25, r13
    15a2:	ae 1d       	adc	r26, r14
    15a4:	bf 1d       	adc	r27, r15
    15a6:	b7 ff       	sbrs	r27, 7
    15a8:	03 c0       	rjmp	.+6      	; 0x15b0 <do_rand+0x6c>
    15aa:	01 97       	sbiw	r24, 0x01	; 1
    15ac:	a1 09       	sbc	r26, r1
    15ae:	b0 48       	sbci	r27, 0x80	; 128
    15b0:	88 83       	st	Y, r24
    15b2:	99 83       	std	Y+1, r25	; 0x01
    15b4:	aa 83       	std	Y+2, r26	; 0x02
    15b6:	bb 83       	std	Y+3, r27	; 0x03
    15b8:	9f 77       	andi	r25, 0x7F	; 127
    15ba:	df 91       	pop	r29
    15bc:	cf 91       	pop	r28
    15be:	ff 90       	pop	r15
    15c0:	ef 90       	pop	r14
    15c2:	df 90       	pop	r13
    15c4:	cf 90       	pop	r12
    15c6:	bf 90       	pop	r11
    15c8:	af 90       	pop	r10
    15ca:	9f 90       	pop	r9
    15cc:	8f 90       	pop	r8
    15ce:	08 95       	ret

000015d0 <rand_r>:
    15d0:	b9 cf       	rjmp	.-142    	; 0x1544 <do_rand>

000015d2 <rand>:
    15d2:	80 e0       	ldi	r24, 0x00	; 0
    15d4:	91 e0       	ldi	r25, 0x01	; 1
    15d6:	b6 cf       	rjmp	.-148    	; 0x1544 <do_rand>

000015d8 <srand>:
    15d8:	a0 e0       	ldi	r26, 0x00	; 0
    15da:	b0 e0       	ldi	r27, 0x00	; 0
    15dc:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
    15e0:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
    15e4:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__data_start+0x2>
    15e8:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__data_start+0x3>
    15ec:	08 95       	ret

000015ee <__divmodsi4>:
    15ee:	05 2e       	mov	r0, r21
    15f0:	97 fb       	bst	r25, 7
    15f2:	16 f4       	brtc	.+4      	; 0x15f8 <__divmodsi4+0xa>
    15f4:	00 94       	com	r0
    15f6:	0f d0       	rcall	.+30     	; 0x1616 <__negsi2>
    15f8:	57 fd       	sbrc	r21, 7
    15fa:	05 d0       	rcall	.+10     	; 0x1606 <__divmodsi4_neg2>
    15fc:	6d df       	rcall	.-294    	; 0x14d8 <__udivmodsi4>
    15fe:	07 fc       	sbrc	r0, 7
    1600:	02 d0       	rcall	.+4      	; 0x1606 <__divmodsi4_neg2>
    1602:	46 f4       	brtc	.+16     	; 0x1614 <__divmodsi4_exit>
    1604:	08 c0       	rjmp	.+16     	; 0x1616 <__negsi2>

00001606 <__divmodsi4_neg2>:
    1606:	50 95       	com	r21
    1608:	40 95       	com	r20
    160a:	30 95       	com	r19
    160c:	21 95       	neg	r18
    160e:	3f 4f       	sbci	r19, 0xFF	; 255
    1610:	4f 4f       	sbci	r20, 0xFF	; 255
    1612:	5f 4f       	sbci	r21, 0xFF	; 255

00001614 <__divmodsi4_exit>:
    1614:	08 95       	ret

00001616 <__negsi2>:
    1616:	90 95       	com	r25
    1618:	80 95       	com	r24
    161a:	70 95       	com	r23
    161c:	61 95       	neg	r22
    161e:	7f 4f       	sbci	r23, 0xFF	; 255
    1620:	8f 4f       	sbci	r24, 0xFF	; 255
    1622:	9f 4f       	sbci	r25, 0xFF	; 255
    1624:	08 95       	ret

00001626 <__muluhisi3>:
    1626:	0f d0       	rcall	.+30     	; 0x1646 <__umulhisi3>
    1628:	a5 9f       	mul	r26, r21
    162a:	90 0d       	add	r25, r0
    162c:	b4 9f       	mul	r27, r20
    162e:	90 0d       	add	r25, r0
    1630:	a4 9f       	mul	r26, r20
    1632:	80 0d       	add	r24, r0
    1634:	91 1d       	adc	r25, r1
    1636:	11 24       	eor	r1, r1
    1638:	08 95       	ret

0000163a <__mulshisi3>:
    163a:	b7 ff       	sbrs	r27, 7
    163c:	f4 cf       	rjmp	.-24     	; 0x1626 <__muluhisi3>

0000163e <__mulohisi3>:
    163e:	f3 df       	rcall	.-26     	; 0x1626 <__muluhisi3>
    1640:	82 1b       	sub	r24, r18
    1642:	93 0b       	sbc	r25, r19
    1644:	08 95       	ret

00001646 <__umulhisi3>:
    1646:	a2 9f       	mul	r26, r18
    1648:	b0 01       	movw	r22, r0
    164a:	b3 9f       	mul	r27, r19
    164c:	c0 01       	movw	r24, r0
    164e:	a3 9f       	mul	r26, r19
    1650:	70 0d       	add	r23, r0
    1652:	81 1d       	adc	r24, r1
    1654:	11 24       	eor	r1, r1
    1656:	91 1d       	adc	r25, r1
    1658:	b2 9f       	mul	r27, r18
    165a:	70 0d       	add	r23, r0
    165c:	81 1d       	adc	r24, r1
    165e:	11 24       	eor	r1, r1
    1660:	91 1d       	adc	r25, r1
    1662:	08 95       	ret

00001664 <_exit>:
    1664:	f8 94       	cli

00001666 <__stop_program>:
    1666:	ff cf       	rjmp	.-2      	; 0x1666 <__stop_program>
